// Header generated by tools/genheaders.pl
// Put changes into unistd.h.in

#ifndef header_unistd_h
#define header_unistd_h

// file: include/close.h
#include "include/close.h"
// file: include/close.h
static inline int volatile __attribute__((always_inline)) close( int fd );

// file: include/exit.h
#include "include/exit.h"
// file: include/lseek.h
#include "include/lseek.h"
// file: include/read.h
#include "include/read.h"
// file: include/read.h
static inline int volatile __attribute__((always_inline)) read( int fd, void* buf, int len );

// file: include/select.h
#include "include/select.h"
// file: include/write.h
#include "include/write.h"
// file: include/write.h
DEF_syscall(write,3,int a1,const void *a2, int a3 )

// file: src/open.c
int volatile open( const char *s, int flags, ... );



#include "include/minilib_global.h"


#ifdef mini_INCLUDESRC

#include "include/read.h"
#include "include/close.h"
#include "include/write.h"
#include "src/open.c"

// Need global included. Doesn't matter by which file.
#include "src/minilib_global.c"

// Need start.c included. Doesn't matter by which file.
#include "asm/start.c"

#endif

#endif
