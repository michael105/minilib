#!/bin/bash

REAL_CC=gcc
REAL_LD=ld

M(){
		echo M: $1
		export var=$1
}



usage(){
		echo
		echo Usage and description needs to be placed here..
		echo
		echo mini-gcc is a wrapper, to call gcc with the right compile options.
		echo mini-gcc also creates the file "minilib.conf.h" out of minilib.conf,
		echo when invoked with --config minilib.conf
		echo 
		echo when the config option is given \(must be the first argument for now, when supplied\)
		echo mini-gcc also includes the config into every file, compiled.
		echo  Have to leave the docu for now, important things need to be done.
		echo  "(2019/03/28) misc "
		echo
		exit
}


exec_gcc(){
		echo $REAL_CC $CFLAGS $@
		$REAL_CC $CFLAGS $@
}



checkconfig (){
		echo Parse config
	  #( (echo "#define macro(a1,a2) M a1" && echo "macro(12,13)" && cat $1 ) | gcc -include tmp2.h -E - )
		echo $1
		source $1 > $1.h  #sed "s/command/function/"
		echo ARCH: $MINI_ARCH
		echo OS: $MINI_OS
		#echo GCC-Options: $REAL_CC $CFLAGS
		CFLAGS="--include $1.h $CFLAGS"
}


ARGS=$@

if [ "$1" = "" ]
then
		usage
fi

source scripts/genconfig.sh

if [ "$1" != "" ]; 
then
		case $1 in
				--config )   shift
						config=$1
						checkconfig $config 
						shift
						;;
				-h | --help )           usage
						exit
						;;
		esac
fi

echo args: $@

exec_gcc $@


exit


