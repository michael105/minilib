// generated by make header. 
// all macros and functions, defined by minilib.
// intended to be parsed by (my) syntaxchecker plugin
#ifndef MLIB
#ifndef included_minilib_h
// 1 "minilib.h"
#define MLIB 1
#define LINUX 1
#define X64 1
#define GENSYNTAXCHECK 1
// 1 "/dev/fd/63" 1
#define mini_buf 4096
#define mini_start 
#define mini_exit 
#define mini_ksyscalls 
#define mini_getchar generate
#define mini_putchar generate
#define mini_fprintf generate
#define mini_fgetpos generate
#define mini_perror generate
#define mini_ferror generate
#define mini_rewind generate
#define mini_fputc generate
#define mini_puts generate
#define mini_fputs generate
#define mini_ungetc generate
#define mini_fopen generate
#define mini_gets generate
#define mini__itohex generate
#define mini_setbuf generate
#define mini_itoHEX generate
#define mini_clearerr generate
#define mini_fclose generate
#define mini_putc generate
#define mini_clearerror generate
#define mini_getc generate
#define mini_fdopen generate
#define mini_vfprintf generate
#define mini_printf generate
#define mini_fprint generate
#define mini_fread generate
#define mini_errno_str generate
#define mini_fileno generate
#define mini_ftell generate
#define mini_feof generate
#define mini_freopen generate
#define mini_fwrite generate
#define mini_fseek generate
#define mini__fopen generate
#define mini_fsetpos generate
#define mini_sprintf generate
#define mini_fgetc generate
#define mini_setvbuf generate
#define mini_fflush generate
#define mini_itohex generate
#define mini_fgets generate
#define mini_sigaction generate
#define mini_sigaddset generate
#define mini_raise generate
#define mini_signal generate
#define mini_sigfillset generate
#define mini_sigismember generate
#define mini_sigdelset generate
#define mini_sigemptyset generate
#define mini_sigprocmask generate
#define mini_system generate
#define mini_atol generate
#define mini_div generate
#define mini_getenv generate
#define mini_rand generate
#define mini_abs generate
#define mini_realloc generate
#define mini_ldiv generate
#define mini_strtol generate
#define mini_malloc generate
#define mini_atoi generate
#define mini_todo_putenv generate
#define mini_srand generate
#define mini_labs generate
#define mini_free generate
#define mini_chown generate
#define mini_mkdir generate
#define mini_execvp generate
#define mini_setpgid generate
#define mini_usleep generate
#define mini_execve generate
#define mini_setsid generate
#define mini_open generate
#define mini_setuid generate
#define mini_ftruncate generate
#define mini_fexecveat generate
#define mini_getpid generate
#define mini_rmdir generate
#define mini_dup generate
#define mini_execv generate
#define mini_pipe generate
#define mini_lseek generate
#define mini_select generate
#define mini_getuid generate
#define mini_isatty generate
#define mini_fork generate
#define mini_access generate
#define mini_fsync generate
#define mini_tcsetattr generate
#define mini_execvpe generate
#define mini_dup2 generate
#define mini_setgid generate
#define mini_close generate
#define mini_getpgrp generate
#define mini_unlink generate
#define mini_sleep generate
#define mini_tcgetattr generate
#define mini_getgid generate
#define mini_chroot generate
#define mini_chdir generate
#define mini_write generate
#define mini_link generate
#define mini_read generate
#define mini_rename generate
#define mini_readdir generate
#define mini_closedir generate
#define mini_opendir generate
#define mini_brk generate
#define mini_rt_sigaction generate
#define mini_setitimer generate
#define mini_fcntl generate
#define mini_umount2 generate
#define mini_getppid generate
#define mini_fchmod generate
#define mini_sendfile generate
#define mini_fstat generate
#define mini_mount generate
#define mini_symlink generate
#define mini_getitimer generate
#define mini_mknod generate
#define mini_umask generate
#define mini_kill generate
#define mini_getcwd generate
#define mini_vfork generate
#define mini_wait4 generate
#define mini_stat generate
#define mini_mprotect generate
#define mini_rt_sigprocmask generate
#define mini_pivot_root generate
#define mini_uname generate
#define mini_gettimeofday generate
#define mini_dup3 generate
#define mini_fchown generate
#define mini_rt_sigreturn generate
#define mini_reboot generate
#define mini_vhangup generate
#define mini_chmod generate
#define mini_sync generate
#define mini_readahead generate
#define mini_nanosleep generate
#define mini_execveat generate
#define mini_utime generate
#define mini_getdents generate
#define mini_strcat generate
#define mini_strncasecmp generate
#define mini_strncmp generate
#define mini_strncpy generate
#define mini__strcasecmp generate
#define mini__strcmp generate
#define mini_memcmp generate
#define mini_strchrnul generate
#define mini_memmove generate
#define mini_strchr generate
#define mini_strrchr generate
#define mini_memcpy generate
#define mini_strcmp generate
#define mini_strcasecmp generate
#define mini_strerror generate
#define mini_strdup generate
#define mini_strlen generate
#define mini_memset generate
#define mini_strcpy generate
#define mini_strstr generate
#define mini_snprintf generate
#define mini_writes generate
#define mini_ultodec generate
#define mini_eprintfs generate
#define mini_printsl generate
#define mini_dprintf generate
#define mini_ptsname_r generate
#define mini_printfs generate
#define mini_fprints generate
#define mini_grantpt generate
#define mini_verbose_errstr generate
#define mini_print generate
#define mini_vsnprintf generate
#define mini_prints generate
#define mini_basename generate
#define mini_itobin generate
#define mini_ewrites generate
#define mini_ptsname generate
#define mini_memfrob generate
#define mini_eputs generate
#define mini_dirname generate
#define mini_sdbm_hash generate
#define mini_printl generate
#define mini_posix_openpt generate
#define mini_eprintl generate
#define mini_uitodec generate
#define mini_fprintfs generate
#define mini_itodec generate
#define mini_def generate
#define mini_eprint generate
#define mini__mprints generate
#define mini_ltodec generate
#define mini_unlockpt generate
#define mini_djb2_hash generate
#define mini_fwrites generate
#define mini__itobin generate
#define mini_dtodec generate
#define mini_time generate
#define mini___sysctl generate
#define mini__semop generate
#define mini__rt_sigqueueinfo generate
#define mini__epoll_create generate
#define mini__lremovexattr generate
#define mini__migrate_pages generate
#define mini__arch_prctl generate
#define mini__msgget generate
#define mini__sched_setscheduler generate
#define mini__symlink generate
#define mini__lchown generate
#define mini__keyctl generate
#define mini__request_key generate
#define mini__capset generate
#define mini__pwrite64 generate
#define mini__ioprio_set generate
#define mini__utime generate
#define mini__exit_group generate
#define mini__timerfd_gettime generate
#define mini__rt_tgsigqueueinfo generate
#define mini__chmod generate
#define mini__ustat generate
#define mini__fallocate generate
#define mini__wait4 generate
#define mini__dup3 generate
#define mini__mkdirat generate
#define mini__shmget generate
#define mini__eventfd2 generate
#define mini__mq_unlink generate
#define mini__getitimer generate
#define mini__mkdir generate
#define mini__lgetxattr generate
#define mini__remap_file_pages generate
#define mini__unlink generate
#define mini__mlock generate
#define mini__brk generate
#define mini__rt_sigpending generate
#define mini__fanotify_mark generate
#define mini__nanosleep generate
#define mini__signalfd4 generate
#define mini__fremovexattr generate
#define mini__fsync generate
#define mini__sigaltstack generate
#define mini__setns generate
#define mini__sched_get_priority_min generate
#define mini__writev generate
#define mini__setresgid generate
#define mini__newfstatat generate
#define mini__fchown generate
#define mini__timer_getoverrun generate
#define mini__capget generate
#define mini__getuid generate
#define mini__pause generate
#define mini__gettimeofday generate
#define mini__shmdt generate
#define mini__restart_syscall generate
#define mini__utimensat generate
#define mini__getrlimit generate
#define mini__sched_getscheduler generate
#define mini__recvmmsg generate
#define mini__semctl generate
#define mini__shutdown generate
#define mini__sched_get_priority_max generate
#define mini__mprotect generate
#define mini__signalfd generate
#define mini__personality generate
#define mini__prlimit64 generate
#define mini__open_by_handle_at generate
#define mini__io_cancel generate
#define mini__ftruncate generate
#define mini__fgetxattr generate
#define mini__geteuid generate
#define mini__get_robust_list generate
#define mini__modify_ldt generate
#define mini__bind generate
#define mini__process_vm_writev generate
#define mini__getrandom generate
#define mini__fchdir generate
#define mini__fchmodat generate
#define mini__msgsnd generate
#define mini__umask generate
#define mini__mremap generate
#define mini__ioctl generate
#define mini__recvfrom generate
#define mini__setreuid generate
#define mini__utimes generate
#define mini__pselect6 generate
#define mini__clock_gettime generate
#define mini__kill generate
#define mini__clock_nanosleep generate
#define mini__semtimedop generate
#define mini__fdatasync generate
#define mini__setpriority generate
#define mini__clock_getres generate
#define mini__mincore generate
#define mini__getsid generate
#define mini__mmap generate
#define mini__getsockopt generate
#define mini__rename generate
#define mini__symlinkat generate
#define mini__flistxattr generate
#define mini__epoll_create1 generate
#define mini__read generate
#define mini__exit generate
#define mini__timerfd_create generate
#define mini__timer_gettime generate
#define mini__setresuid generate
#define mini__execve generate
#define mini__vmsplice generate
#define mini__connect generate
#define mini__rt_sigsuspend generate
#define mini__chroot generate
#define mini__pipe generate
#define mini__chdir generate
#define mini__inotify_rm_watch generate
#define mini__futimesat generate
#define mini__fcntl generate
#define mini__syslog generate
#define mini__timerfd_settime generate
#define mini__set_mempolicy generate
#define mini__readv generate
#define mini__move_pages generate
#define mini__preadv generate
#define mini__accept4 generate
#define mini__timer_delete generate
#define mini__tkill generate
#define mini__timer_settime generate
#define mini__clone generate
#define mini__recvmsg generate
#define mini__setpgid generate
#define mini__getpid generate
#define mini__pwritev generate
#define mini__getgid generate
#define mini__set_tid_address generate
#define mini__getcwd generate
#define mini__shmat generate
#define mini__readlinkat generate
#define mini__llistxattr generate
#define mini__swapoff generate
#define mini__io_getevents generate
#define mini__setxattr generate
#define mini__waitid generate
#define mini__unshare generate
#define mini__kexec_file_load generate
#define mini__truncate generate
#define mini__removexattr generate
#define mini__ioperm generate
#define mini__access generate
#define mini__sysinfo generate
#define mini__clock_settime generate
#define mini__setfsgid generate
#define mini__openat generate
#define mini__io_setup generate
#define mini__ptrace generate
#define mini__linkat generate
#define mini__setgroups generate
#define mini__open generate
#define mini__inotify_add_watch generate
#define mini__getcpu generate
#define mini__lsetxattr generate
#define mini__link generate
#define mini__pipe2 generate
#define mini__sync_file_range generate
#define mini__rt_sigtimedwait generate
#define mini__clock_adjtime generate
#define mini__mknod generate
#define mini__accept generate
#define mini__sendmmsg generate
#define mini__rt_sigaction generate
#define mini__reboot generate
#define mini__mknodat generate
#define mini__dup generate
#define mini__fstatfs generate
#define mini__vfork generate
#define mini__setitimer generate
#define mini__sched_setparam generate
#define mini__iopl generate
#define mini__splice generate
#define mini__munlock generate
#define mini__fanotify_init generate
#define mini__adjtimex generate
#define mini__sched_setattr generate
#define mini__rmdir generate
#define mini__acct generate
#define mini__sched_rr_get_interval generate
#define mini__syncfs generate
#define mini__unlinkat generate
#define mini__sendto generate
#define mini__fork generate
#define mini__kexec_load generate
#define mini__socket generate
#define mini__fsetxattr generate
#define mini__inotify_init1 generate
#define mini__pread64 generate
#define mini__sched_getattr generate
#define mini__munlockall generate
#define mini__mq_timedsend generate
#define mini__set_robust_list generate
#define mini__lseek generate
#define mini__fchownat generate
#define mini__memfd_create generate
#define mini__setrlimit generate
#define mini__getsockname generate
#define mini__statfs generate
#define mini__creat generate
#define mini__rt_sigreturn generate
#define mini__uname generate
#define mini__readlink generate
#define mini__madvise generate
#define mini__seccomp generate
#define mini__timer_create generate
#define mini__settimeofday generate
#define mini__name_to_handle_at generate
#define mini__setuid generate
#define mini__futex generate
#define mini__mount generate
#define mini__mq_timedreceive generate
#define mini__getdents64 generate
#define mini__sysfs generate
#define mini__sched_getparam generate
#define mini__mlockall generate
#define mini__getresgid generate
#define mini__getrusage generate
#define mini__renameat2 generate
#define mini__getegid generate
#define mini__fchmod generate
#define mini__kcmp generate
#define mini__getresuid generate
#define mini__rt_sigprocmask generate
#define mini__times generate
#define mini__sched_setaffinity generate
#define mini__swapon generate
#define mini__io_submit generate
#define mini__listen generate
#define mini__setsid generate
#define mini__getdents generate
#define mini__close generate
#define mini__setdomainname generate
#define mini__setsockopt generate
#define mini__setfsuid generate
#define mini__mbind generate
#define mini__renameat generate
#define mini__getppid generate
#define mini__tee generate
#define mini__sync generate
#define mini__epoll_pwait generate
#define mini__gettid generate
#define mini__pivot_root generate
#define mini__getpriority generate
#define mini__dup2 generate
#define mini__lstat generate
#define mini__chown generate
#define mini__process_vm_readv generate
#define mini__sendmsg generate
#define mini__lookup_dcookie generate
#define mini__flock generate
#define mini__ppoll generate
#define mini__semget generate
#define mini__prctl generate
#define mini__select generate
#define mini__getxattr generate
#define mini__stat generate
#define mini__mq_notify generate
#define mini__getpeername generate
#define mini__ioprio_get generate
#define mini__eventfd generate
#define mini__faccessat generate
#define mini__sethostname generate
#define mini__io_destroy generate
#define mini__msync generate
#define mini__getpgrp generate
#define mini__sendfile generate
#define mini__getgroups generate
#define mini__time generate
#define mini__readahead generate
#define mini__tgkill generate
#define mini__listxattr generate
#define mini__sched_yield generate
#define mini__setgid generate
#define mini__epoll_wait generate
#define mini__quotactl generate
#define mini__umount2 generate
#define mini__msgctl generate
#define mini__perf_event_open generate
#define mini__delete_module generate
#define mini__alarm generate
#define mini__epoll_ctl generate
#define mini__init_module generate
#define mini__socketpair generate
#define mini__add_key generate
#define mini__write generate
#define mini__munmap generate
#define mini__vhangup generate
#define mini__inotify_init generate
#define mini__getpgid generate
#define mini__setregid generate
#define mini__fstat generate
#define mini__msgrcv generate
#define mini__finit_module generate
#define mini__sched_getaffinity generate
#define mini__mq_getsetattr generate
#define mini__get_mempolicy generate
#define mini__mq_open generate
#define mini__shmctl generate
#define mini__poll generate
#define mini__fadvise64 generate
#define mini_wait generate
#define mini_waitpid generate
#define mini_mkfifo generate
#define mini_creat generate
#define mini_ioctl generate
#define mini_isprint generate
#define mini_isspace generate
// 1 "./minilib.h" 1
// 17 "./minilib.h"
#define included_minilib_h 
// 37 "./minilib.h"
#define mini_environ 
#define mini_environ 
// 51 "./minilib.h"
// 1 "./minilib/headers/common/allheaders.h" 1
#define common_allheaders_h 
// 1 "./minilib/headers/common/./sys/types.h" 1
#define SYS_TYPES_H 
#define POINTER unsigned long int
// 1 "./headers/common/bits/alltypes.h" 1
#define mini_alltypes_h 
#define timevaldefined 
typedef long time_t;
typedef long suseconds_t;
typedef unsigned useconds_t;
struct timeval { time_t tv_sec; suseconds_t tv_usec; };
#define ITIMER_REAL 0
#define ITIMER_VIRTUAL 1
#define ITIMER_PROF 2
struct itimerval {
  struct timeval it_interval;
  struct timeval it_value;
};
#define _Addr long
#define _Int64 long
#define _Reg long
#define size_t long
typedef unsigned char uchar;
typedef int wchar_t;
typedef long double double_t;
typedef float float_t;
typedef struct { long long __ll; long double __ld; } max_align_t;
typedef struct { union { int __i[14]; volatile int __vi[14]; unsigned long __s[7]; } __u; } pthread_attr_t;
typedef struct { union { int __i[10]; volatile int __vi[10]; volatile void *volatile __p[5]; } __u; } pthread_mutex_t;
typedef struct { union { int __i[10]; volatile int __vi[10]; volatile void *volatile __p[5]; } __u; } mtx_t;
typedef struct { union { int __i[12]; volatile int __vi[12]; void *__p[6]; } __u; } pthread_cond_t;
typedef struct { union { int __i[12]; volatile int __vi[12]; void *__p[6]; } __u; } cnd_t;
typedef struct { union { int __i[14]; volatile int __vi[14]; void *__p[7]; } __u; } pthread_rwlock_t;
typedef struct { union { int __i[8]; volatile int __vi[8]; void *__p[4]; } __u; } pthread_barrier_t;
typedef unsigned long uintptr_t;
typedef long ptrdiff_t;
typedef long ssize_t;
typedef long intptr_t;
typedef long regoff_t;
typedef long register_t;
typedef signed char int8_t;
typedef signed short int16_t;
typedef signed int int32_t;
typedef signed long int64_t;
typedef signed long intmax_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned long uint64_t;
typedef unsigned long u_int64_t;
typedef unsigned long uintmax_t;
typedef unsigned mode_t;
typedef unsigned long nlink_t;
typedef long off_t;
typedef unsigned long ino_t;
typedef unsigned long dev_t;
typedef long blksize_t;
typedef long blkcnt_t;
typedef unsigned long fsblkcnt_t;
typedef unsigned long fsfilcnt_t;
typedef unsigned wint_t;
typedef unsigned long wctype_t;
typedef void * timer_t;
typedef int clockid_t;
typedef long clock_t;
struct timespec { time_t tv_sec; long tv_nsec; };
typedef int pid_t;
typedef unsigned id_t;
typedef unsigned uid_t;
typedef unsigned gid_t;
typedef int key_t;
typedef struct __mbstate_t { unsigned __opaque1, __opaque2; } mbstate_t;
typedef struct __locale_struct * locale_t;
struct iovec { void *iov_base; long iov_len; };
typedef unsigned socklen_t;
typedef unsigned short sa_family_t;
#undef _Addr
#undef _Int64
#undef _Reg
// 14 "./minilib/headers/common/./sys/types.h" 2
typedef unsigned char u_int8_t;
typedef unsigned short u_int16_t;
typedef unsigned u_int32_t;
typedef char *caddr_t;
typedef unsigned char u_char;
typedef unsigned short u_short, ushort;
typedef unsigned u_int, uint;
typedef unsigned long u_long, ulong;
typedef long long quad_t;
typedef unsigned long long u_quad_t;
// 1 "./headers/common/endian.h" 1
#define _ENDIAN_H 
#define __LITTLE_ENDIAN 1234
#define __BIG_ENDIAN 4321
#define __PDP_ENDIAN 3412
// 26 "./minilib/headers/common/./sys/types.h" 2
#define blkcnt64_t blkcnt_t
#define fsblkcnt64_t fsblkcnt_t
#define fsfilcnt64_t fsfilcnt_t
#define ino64_t ino_t
#define off64_t off_t
// 4 "./minilib/headers/common/allheaders.h" 2
// 1 "./minilib/headers/common/./sys/stat.h" 1
#define _sys_stat_h 
// 25 "./minilib/headers/common/./sys/stat.h"
#define stat_defined 
struct stat {
 dev_t st_dev;
 ino_t st_ino;
 nlink_t st_nlink;
 mode_t st_mode;
 uid_t st_uid;
 gid_t st_gid;
 unsigned int __pad0;
 dev_t st_rdev;
 off_t st_size;
 blksize_t st_blksize;
 blkcnt_t st_blocks;
 struct timespec st_atim;
 struct timespec st_mtim;
 struct timespec st_ctim;
 long __unused[3];
};
#define st_atime st_atim.tv_sec
#define st_mtime st_mtim.tv_sec
#define st_ctime st_ctim.tv_sec
#define S_IFMT 0170000
#define S_IFDIR 0040000
#define S_IFCHR 0020000
#define S_IFBLK 0060000
#define S_IFREG 0100000
#define S_IFIFO 0010000
#define S_IFLNK 0120000
#define S_IFSOCK 0140000
#define S_TYPEISMQ(buf) 0
#define S_TYPEISSEM(buf) 0
#define S_TYPEISSHM(buf) 0
#define S_TYPEISTMO(buf) 0
#define S_ISDIR(mode) (((mode) & S_IFMT) == S_IFDIR)
#define S_ISCHR(mode) (((mode) & S_IFMT) == S_IFCHR)
#define S_ISBLK(mode) (((mode) & S_IFMT) == S_IFBLK)
#define S_ISREG(mode) (((mode) & S_IFMT) == S_IFREG)
#define S_ISFIFO(mode) (((mode) & S_IFMT) == S_IFIFO)
#define S_ISLNK(mode) (((mode) & S_IFMT) == S_IFLNK)
#define S_ISSOCK(mode) (((mode) & S_IFMT) == S_IFSOCK)
#define S_ISUID 04000
#define S_ISGID 02000
#define S_ISVTX 01000
#define S_IRUSR 0400
#define S_IWUSR 0200
#define S_IXUSR 0100
#define S_IRWXU 0700
#define S_IRGRP 0040
#define S_IWGRP 0020
#define S_IXGRP 0010
#define S_IRWXG 0070
#define S_IROTH 0004
#define S_IWOTH 0002
#define S_IXOTH 0001
#define S_IRWXO 0007
#define UTIME_NOW 0x3fffffff
#define UTIME_OMIT 0x3ffffffe
// 5 "./minilib/headers/common/allheaders.h" 2
// 1 "./minilib/headers/common/./sys/termios.h" 1
#define _TERMIOS_H 
// 1 "./headers/common/features.h" 1
// 9 "./minilib/headers/common/./sys/termios.h" 2
#define __NEED_pid_t 
typedef unsigned char cc_t;
typedef unsigned int speed_t;
typedef unsigned int tcflag_t;
#define NCCS 32
// 1 "./headers/common-links/bits/termios.h" 1
#define termios_h_linked 
// 1 "./headers/common-links/bits/termios.h" 1
// 4 "./headers/common-links/bits/termios.h" 2
// 21 "./minilib/headers/common/./sys/termios.h" 2
// 1 "./headers/common/termios.h" 1
#define termios_xxxxx 
struct termios {
 tcflag_t c_iflag;
 tcflag_t c_oflag;
 tcflag_t c_cflag;
 tcflag_t c_lflag;
 cc_t c_line;
 cc_t c_cc[32];
 speed_t __c_ispeed;
 speed_t __c_ospeed;
};
#define NCC 8
struct termio
{
  unsigned short int c_iflag;
  unsigned short int c_oflag;
  unsigned short int c_cflag;
  unsigned short int c_lflag;
  unsigned char c_line;
  unsigned char c_cc[8];
};
#define VINTR 0
#define VQUIT 1
#define VERASE 2
#define VKILL 3
#define VEOF 4
#define VTIME 5
#define VMIN 6
#define VSWTC 7
#define VSTART 8
#define VSTOP 9
#define VSUSP 10
#define VEOL 11
#define VREPRINT 12
#define VDISCARD 13
#define VWERASE 14
#define VLNEXT 15
#define VEOL2 16
#define IGNBRK 0000001
#define BRKINT 0000002
#define IGNPAR 0000004
#define PARMRK 0000010
#define INPCK 0000020
#define ISTRIP 0000040
#define INLCR 0000100
#define IGNCR 0000200
#define ICRNL 0000400
#define IUCLC 0001000
#define IXON 0002000
#define IXANY 0004000
#define IXOFF 0010000
#define IMAXBEL 0020000
#define IUTF8 0040000
#define OPOST 0000001
#define OLCUC 0000002
#define ONLCR 0000004
#define OCRNL 0000010
#define ONOCR 0000020
#define ONLRET 0000040
#define OFILL 0000100
#define OFDEL 0000200
// 94 "./headers/common/termios.h"
#define VTDLY 0040000
#define VT0 0000000
#define VT1 0040000
#define B0 0000000
#define B50 0000001
#define B75 0000002
#define B110 0000003
#define B134 0000004
#define B150 0000005
#define B200 0000006
#define B300 0000007
#define B600 0000010
#define B1200 0000011
#define B1800 0000012
#define B2400 0000013
#define B4800 0000014
#define B9600 0000015
#define B19200 0000016
#define B38400 0000017
#define B57600 0010001
#define B115200 0010002
#define B230400 0010003
#define B460800 0010004
#define B500000 0010005
#define B576000 0010006
#define B921600 0010007
#define B1000000 0010010
#define B1152000 0010011
#define B1500000 0010012
#define B2000000 0010013
#define B2500000 0010014
#define B3000000 0010015
#define B3500000 0010016
#define B4000000 0010017
#define CSIZE 0000060
#define CS5 0000000
#define CS6 0000020
#define CS7 0000040
#define CS8 0000060
#define CSTOPB 0000100
#define CREAD 0000200
#define PARENB 0000400
#define PARODD 0001000
#define HUPCL 0002000
#define CLOCAL 0004000
#define ISIG 0000001
#define ICANON 0000002
#define ECHO 0000010
#define ECHOE 0000020
#define ECHOK 0000040
#define ECHONL 0000100
#define NOFLSH 0000200
#define TOSTOP 0000400
#define IEXTEN 0100000
#define TCOOFF 0
#define TCOON 1
#define TCIOFF 2
#define TCION 3
#define TCIFLUSH 0
#define TCOFLUSH 1
#define TCIOFLUSH 2
#define TCSANOW 0
#define TCSADRAIN 1
#define TCSAFLUSH 2
// 22 "./minilib/headers/common/./sys/termios.h" 2
speed_t cfgetospeed (const struct termios *);
speed_t cfgetispeed (const struct termios *);
int cfsetospeed (struct termios *, speed_t);
int cfsetispeed (struct termios *, speed_t);
static inline int tcgetattr (int, struct termios *);
static inline int tcsetattr (int, int, const struct termios *);
int tcsendbreak (int, int);
int tcdrain (int);
int tcflush (int, int);
int tcflow (int, int);
pid_t tcgetsid (int);
// 6 "./minilib/headers/common/allheaders.h" 2
// 1 "./minilib/headers/common/./bits/signal.h" 1
#define bits_signal_h 
#define SA_NOCLDSTOP 1
#define SA_NOCLDWAIT 2
#define SA_SIGINFO 4
#define SA_ONSTACK 0x08000000
#define SA_RESTART 0x10000000
#define SA_NODEFER 0x40000000
#define SA_RESETHAND 0x80000000
#define SA_RESTORER 0x04000000
#define _NSIG 65
#define SIGHUP 1
#define SIGINT 2
#define SIGQUIT 3
#define SIGILL 4
#define SIGTRAP 5
#define SIGABRT 6
#define SIGIOT SIGABRT
#define SIGBUS 7
#define SIGFPE 8
#define SIGKILL 9
#define SIGUSR1 10
#define SIGSEGV 11
#define SIGUSR2 12
#define SIGPIPE 13
#define SIGALRM 14
#define SIGTERM 15
#define SIGSTKFLT 16
#define SIGCHLD 17
#define SIGCONT 18
#define SIGSTOP 19
#define SIGTSTP 20
#define SIGTTIN 21
#define SIGTTOU 22
#define SIGURG 23
#define SIGXCPU 24
#define SIGXFSZ 25
#define SIGVTALRM 26
#define SIGPROF 27
#define SIGWINCH 28
#define SIGIO 29
#define SIGPOLL 29
#define SIGPWR 30
#define SIGSYS 31
#define SIGUNUSED SIGSYS
// 7 "./minilib/headers/common/allheaders.h" 2
// 1 "./minilib/headers/common/./bits/alltypes.h" 1
// 8 "./minilib/headers/common/allheaders.h" 2
// 1 "./minilib/headers/common/./bits/fcntl.h" 1
#define common_bits_fcntl_h 
#define F_DUPFD 0
#define F_GETFD 1
#define F_SETFD 2
#define F_GETFL 3
#define F_SETFL 4
#define F_SETOWN 8
#define F_GETOWN 9
#define F_SETSIG 10
#define F_GETSIG 11
#define F_GETLK 5
#define F_SETLK 6
#define F_SETLKW 7
#define F_SETOWN_EX 15
#define F_GETOWN_EX 16
#define F_GETOWNER_UIDS 17
// 9 "./minilib/headers/common/allheaders.h" 2
// 1 "./minilib/headers/common/./bits/stat.h" 1
#define __bits_stat_h 
#define S_IFMT 0170000
#define S_IFDIR 0040000
#define S_IFCHR 0020000
#define S_IFBLK 0060000
#define S_IFREG 0100000
#define S_IFIFO 0010000
#define S_IFLNK 0120000
#define S_IFSOCK 0140000
#define S_ISUID 04000
#define S_ISGID 02000
#define S_ISVTX 01000
#define S_IREAD 0400
#define S_IWRITE 0200
#define S_IEXEC 0100
#define S_ISDIR(mode) (((mode) & S_IFMT) == S_IFDIR)
#define S_ISCHR(mode) (((mode) & S_IFMT) == S_IFCHR)
#define S_ISBLK(mode) (((mode) & S_IFMT) == S_IFBLK)
#define S_ISREG(mode) (((mode) & S_IFMT) == S_IFREG)
#define S_ISFIFO(mode) (((mode) & S_IFMT) == S_IFIFO)
#define S_ISLNK(mode) (((mode) & S_IFMT) == S_IFLNK)
#define S_ISSOCK(mode) (((mode) & S_IFMT) == S_IFSOCK)
#define S_ISUID 04000
#define S_ISGID 02000
#define S_ISVTX 01000
#define S_IRUSR 0400
#define S_IWUSR 0200
#define S_IXUSR 0100
#define S_IRWXU 0700
#define S_IRGRP 0040
#define S_IWGRP 0020
#define S_IXGRP 0010
#define S_IRWXG 0070
#define S_IROTH 0004
#define S_IWOTH 0002
#define S_IXOTH 0001
#define S_IRWXO 0007
// 10 "./minilib/headers/common/allheaders.h" 2
// 1 "./minilib/headers/common/./bits/ioctl.h" 1
#define ioctl_h 
#define _IOC(a,b,c,d) ( ((a)<<30) | ((b)<<8) | (c) | ((d)<<16) )
#define _IOC_NONE 0U
#define _IOC_WRITE 1U
#define _IOC_READ 2U
#define _IO(a,b) _IOC(_IOC_NONE,(a),(b),0)
#define _IOW(a,b,c) _IOC(_IOC_WRITE,(a),(b),sizeof(c))
#define _IOR(a,b,c) _IOC(_IOC_READ,(a),(b),sizeof(c))
#define _IOWR(a,b,c) _IOC(_IOC_READ|_IOC_WRITE,(a),(b),sizeof(c))
#define TCGETS 0x5401
#define TCSETS 0x5402
#define TCSETSW 0x5403
#define TCSETSF 0x5404
#define TCGETA 0x5405
#define TCSETA 0x5406
#define TCSETAW 0x5407
#define TCSETAF 0x5408
#define TCSBRK 0x5409
#define TCXONC 0x540A
#define TCFLSH 0x540B
#define TIOCEXCL 0x540C
#define TIOCNXCL 0x540D
#define TIOCSCTTY 0x540E
#define TIOCGPGRP 0x540F
#define TIOCSPGRP 0x5410
#define TIOCOUTQ 0x5411
#define TIOCSTI 0x5412
#define TIOCGWINSZ 0x5413
#define TIOCSWINSZ 0x5414
#define TIOCMGET 0x5415
#define TIOCMBIS 0x5416
#define TIOCMBIC 0x5417
#define TIOCMSET 0x5418
#define TIOCGSOFTCAR 0x5419
#define TIOCSSOFTCAR 0x541A
#define FIONREAD 0x541B
#define TIOCINQ FIONREAD
#define TIOCLINUX 0x541C
#define TIOCCONS 0x541D
#define TIOCGSERIAL 0x541E
#define TIOCSSERIAL 0x541F
#define TIOCPKT 0x5420
#define FIONBIO 0x5421
#define TIOCNOTTY 0x5422
#define TIOCSETD 0x5423
#define TIOCGETD 0x5424
#define TCSBRKP 0x5425
#define TIOCSBRK 0x5427
#define TIOCCBRK 0x5428
#define TIOCGSID 0x5429
#define TIOCGRS485 0x542E
#define TIOCSRS485 0x542F
#define TIOCGPTN 0x80045430
#define TIOCSPTLCK 0x40045431
#define TIOCGDEV 0x80045432
#define TCGETX 0x5432
#define TCSETX 0x5433
#define TCSETXF 0x5434
#define TCSETXW 0x5435
#define TIOCSIG 0x40045436
#define TIOCVHANGUP 0x5437
#define TIOCGPKT 0x80045438
#define TIOCGPTLCK 0x80045439
#define TIOCGEXCL 0x80045440
#define TIOCGPTPEER 0x5441
#define FIONCLEX 0x5450
#define FIOCLEX 0x5451
#define FIOASYNC 0x5452
#define TIOCSERCONFIG 0x5453
#define TIOCSERGWILD 0x5454
#define TIOCSERSWILD 0x5455
#define TIOCGLCKTRMIOS 0x5456
#define TIOCSLCKTRMIOS 0x5457
#define TIOCSERGSTRUCT 0x5458
#define TIOCSERGETLSR 0x5459
#define TIOCSERGETMULTI 0x545A
#define TIOCSERSETMULTI 0x545B
#define TIOCMIWAIT 0x545C
#define TIOCGICOUNT 0x545D
#define FIOQSIZE 0x5460
#define TIOCPKT_DATA 0
#define TIOCPKT_FLUSHREAD 1
#define TIOCPKT_FLUSHWRITE 2
#define TIOCPKT_STOP 4
#define TIOCPKT_START 8
#define TIOCPKT_NOSTOP 16
#define TIOCPKT_DOSTOP 32
#define TIOCPKT_IOCTL 64
#define TIOCSER_TEMT 0x01
struct winsize {
 unsigned short ws_row;
 unsigned short ws_col;
 unsigned short ws_xpixel;
 unsigned short ws_ypixel;
};
#define TIOCM_LE 0x001
#define TIOCM_DTR 0x002
#define TIOCM_RTS 0x004
#define TIOCM_ST 0x008
#define TIOCM_SR 0x010
#define TIOCM_CTS 0x020
#define TIOCM_CAR 0x040
#define TIOCM_RNG 0x080
#define TIOCM_DSR 0x100
#define TIOCM_CD TIOCM_CAR
#define TIOCM_RI TIOCM_RNG
#define TIOCM_OUT1 0x2000
#define TIOCM_OUT2 0x4000
#define TIOCM_LOOP 0x8000
#define N_TTY 0
#define N_SLIP 1
#define N_MOUSE 2
#define N_PPP 3
#define N_STRIP 4
#define N_AX25 5
#define N_X25 6
#define N_6PACK 7
#define N_MASC 8
#define N_R3964 9
#define N_PROFIBUS_FDL 10
#define N_IRDA 11
#define N_SMSBLOCK 12
#define N_HDLC 13
#define N_SYNC_PPP 14
#define N_HCI 15
#define FIOSETOWN 0x8901
#define SIOCSPGRP 0x8902
#define FIOGETOWN 0x8903
#define SIOCGPGRP 0x8904
#define SIOCATMARK 0x8905
#define SIOCGSTAMP 0x8906
#define SIOCGSTAMPNS 0x8907
#define SIOCADDRT 0x890B
#define SIOCDELRT 0x890C
#define SIOCRTMSG 0x890D
#define SIOCGIFNAME 0x8910
#define SIOCSIFLINK 0x8911
#define SIOCGIFCONF 0x8912
#define SIOCGIFFLAGS 0x8913
#define SIOCSIFFLAGS 0x8914
#define SIOCGIFADDR 0x8915
#define SIOCSIFADDR 0x8916
#define SIOCGIFDSTADDR 0x8917
#define SIOCSIFDSTADDR 0x8918
#define SIOCGIFBRDADDR 0x8919
#define SIOCSIFBRDADDR 0x891a
#define SIOCGIFNETMASK 0x891b
#define SIOCSIFNETMASK 0x891c
#define SIOCGIFMETRIC 0x891d
#define SIOCSIFMETRIC 0x891e
#define SIOCGIFMEM 0x891f
#define SIOCSIFMEM 0x8920
#define SIOCGIFMTU 0x8921
#define SIOCSIFMTU 0x8922
#define SIOCSIFNAME 0x8923
#define SIOCSIFHWADDR 0x8924
#define SIOCGIFENCAP 0x8925
#define SIOCSIFENCAP 0x8926
#define SIOCGIFHWADDR 0x8927
#define SIOCGIFSLAVE 0x8929
#define SIOCSIFSLAVE 0x8930
#define SIOCADDMULTI 0x8931
#define SIOCDELMULTI 0x8932
#define SIOCGIFINDEX 0x8933
#define SIOGIFINDEX SIOCGIFINDEX
#define SIOCSIFPFLAGS 0x8934
#define SIOCGIFPFLAGS 0x8935
#define SIOCDIFADDR 0x8936
#define SIOCSIFHWBROADCAST 0x8937
#define SIOCGIFCOUNT 0x8938
#define SIOCGIFBR 0x8940
#define SIOCSIFBR 0x8941
#define SIOCGIFTXQLEN 0x8942
#define SIOCSIFTXQLEN 0x8943
#define SIOCDARP 0x8953
#define SIOCGARP 0x8954
#define SIOCSARP 0x8955
#define SIOCDRARP 0x8960
#define SIOCGRARP 0x8961
#define SIOCSRARP 0x8962
#define SIOCGIFMAP 0x8970
#define SIOCSIFMAP 0x8971
#define SIOCADDDLCI 0x8980
#define SIOCDELDLCI 0x8981
#define SIOCDEVPRIVATE 0x89F0
#define SIOCPROTOPRIVATE 0x89E0
// 11 "./minilib/headers/common/allheaders.h" 2
// 1 "./minilib/headers/common/./ctype.h" 1
#define _CTYPE_H 
// 1 "./headers/common/features.h" 1
// 9 "./minilib/headers/common/./ctype.h" 2
int isalnum_l(int, locale_t);
int isalpha_l(int, locale_t);
int isblank_l(int, locale_t);
int iscntrl_l(int, locale_t);
int isdigit_l(int, locale_t);
int isgraph_l(int, locale_t);
int islower_l(int, locale_t);
int isprint_l(int, locale_t);
int ispunct_l(int, locale_t);
int isspace_l(int, locale_t);
int isupper_l(int, locale_t);
int isxdigit_l(int, locale_t);
int tolower_l(int, locale_t);
int toupper_l(int, locale_t);
// 12 "./minilib/headers/common/allheaders.h" 2
// 1 "./minilib/headers/common/./elf.h" 1
#define _ELF_H 
// 1 "./headers/common/stdint.h" 1
#define _STDINT_H 
#define __NEED_int8_t 
#define __NEED_int16_t 
#define __NEED_int32_t 
#define __NEED_int64_t 
#define __NEED_uint8_t 
#define __NEED_uint16_t 
#define __NEED_uint32_t 
#define __NEED_uint64_t 
#define __NEED_intptr_t 
#define __NEED_uintptr_t 
#define __NEED_intmax_t 
#define __NEED_uintmax_t 
// 1 "./headers/common/bits/alltypes.h" 1
// 21 "./headers/common/stdint.h" 2
typedef int8_t int_fast8_t;
typedef int64_t int_fast64_t;
typedef int8_t int_least8_t;
typedef int16_t int_least16_t;
typedef int32_t int_least32_t;
typedef int64_t int_least64_t;
typedef uint8_t uint_fast8_t;
typedef uint64_t uint_fast64_t;
typedef uint8_t uint_least8_t;
typedef uint16_t uint_least16_t;
typedef uint32_t uint_least32_t;
typedef uint64_t uint_least64_t;
#define INT8_MIN (-1-0x7f)
#define INT16_MIN (-1-0x7fff)
#define INT32_MIN (-1-0x7fffffff)
#define INT64_MIN (-1-0x7fffffffffffffff)
#define INT8_MAX (0x7f)
#define INT16_MAX (0x7fff)
#define INT32_MAX (0x7fffffff)
#define INT64_MAX (0x7fffffffffffffff)
#define UINT8_MAX (0xff)
#define UINT16_MAX (0xffff)
#define UINT32_MAX (0xffffffffu)
#define UINT64_MAX (0xffffffffffffffffu)
#define INT_FAST8_MIN INT8_MIN
#define INT_FAST64_MIN INT64_MIN
#define INT_LEAST8_MIN INT8_MIN
#define INT_LEAST16_MIN INT16_MIN
#define INT_LEAST32_MIN INT32_MIN
#define INT_LEAST64_MIN INT64_MIN
#define INT_FAST8_MAX INT8_MAX
#define INT_FAST64_MAX INT64_MAX
#define INT_LEAST8_MAX INT8_MAX
#define INT_LEAST16_MAX INT16_MAX
#define INT_LEAST32_MAX INT32_MAX
#define INT_LEAST64_MAX INT64_MAX
#define UINT_FAST8_MAX UINT8_MAX
#define UINT_FAST64_MAX UINT64_MAX
#define UINT_LEAST8_MAX UINT8_MAX
#define UINT_LEAST16_MAX UINT16_MAX
#define UINT_LEAST32_MAX UINT32_MAX
#define UINT_LEAST64_MAX UINT64_MAX
#define INTMAX_MIN INT64_MIN
#define INTMAX_MAX INT64_MAX
#define UINTMAX_MAX UINT64_MAX
#define WINT_MIN 0U
#define WINT_MAX UINT32_MAX
#define WCHAR_MAX (0x7fffffff+L'\0')
#define WCHAR_MIN (-1-0x7fffffff+L'\0')
#define SIG_ATOMIC_MIN INT32_MIN
#define SIG_ATOMIC_MAX INT32_MAX
#define INT8_C(c) c
#define INT16_C(c) c
#define INT32_C(c) c
#define UINT8_C(c) c
#define UINT16_C(c) c
#define UINT32_C(c) c ## U
#define INT64_C(c) c ## LL
#define UINT64_C(c) c ## ULL
#define INTMAX_C(c) c ## LL
#define UINTMAX_C(c) c ## ULL
// 9 "./minilib/headers/common/./elf.h" 2
typedef uint16_t Elf32_Half;
typedef uint16_t Elf64_Half;
typedef uint32_t Elf32_Word;
typedef int32_t Elf32_Sword;
typedef uint32_t Elf64_Word;
typedef int32_t Elf64_Sword;
typedef uint64_t Elf32_Xword;
typedef int64_t Elf32_Sxword;
typedef uint64_t Elf64_Xword;
typedef int64_t Elf64_Sxword;
typedef uint32_t Elf32_Addr;
typedef uint64_t Elf64_Addr;
typedef uint32_t Elf32_Off;
typedef uint64_t Elf64_Off;
typedef uint16_t Elf32_Section;
typedef uint16_t Elf64_Section;
typedef Elf32_Half Elf32_Versym;
typedef Elf64_Half Elf64_Versym;
#define EI_NIDENT (16)
typedef struct {
  unsigned char e_ident[(16)];
  Elf32_Half e_type;
  Elf32_Half e_machine;
  Elf32_Word e_version;
  Elf32_Addr e_entry;
  Elf32_Off e_phoff;
  Elf32_Off e_shoff;
  Elf32_Word e_flags;
  Elf32_Half e_ehsize;
  Elf32_Half e_phentsize;
  Elf32_Half e_phnum;
  Elf32_Half e_shentsize;
  Elf32_Half e_shnum;
  Elf32_Half e_shstrndx;
} Elf32_Ehdr;
typedef struct {
  unsigned char e_ident[(16)];
  Elf64_Half e_type;
  Elf64_Half e_machine;
  Elf64_Word e_version;
  Elf64_Addr e_entry;
  Elf64_Off e_phoff;
  Elf64_Off e_shoff;
  Elf64_Word e_flags;
  Elf64_Half e_ehsize;
  Elf64_Half e_phentsize;
  Elf64_Half e_phnum;
  Elf64_Half e_shentsize;
  Elf64_Half e_shnum;
  Elf64_Half e_shstrndx;
} Elf64_Ehdr;
#define EI_MAG0 0
#define ELFMAG0 0x7f
#define EI_MAG1 1
#define ELFMAG1 'E'
#define EI_MAG2 2
#define ELFMAG2 'L'
#define EI_MAG3 3
#define ELFMAG3 'F'
#define ELFMAG "\177ELF"
#define SELFMAG 4
#define EI_CLASS 4
#define ELFCLASSNONE 0
#define ELFCLASS32 1
#define ELFCLASS64 2
#define ELFCLASSNUM 3
#define EI_DATA 5
#define ELFDATANONE 0
#define ELFDATA2LSB 1
#define ELFDATA2MSB 2
#define ELFDATANUM 3
#define EI_VERSION 6
#define EI_OSABI 7
#define ELFOSABI_NONE 0
#define ELFOSABI_SYSV 0
#define ELFOSABI_HPUX 1
#define ELFOSABI_NETBSD 2
#define ELFOSABI_LINUX 3
#define ELFOSABI_GNU 3
#define ELFOSABI_SOLARIS 6
#define ELFOSABI_AIX 7
#define ELFOSABI_IRIX 8
#define ELFOSABI_FREEBSD 9
#define ELFOSABI_TRU64 10
#define ELFOSABI_MODESTO 11
#define ELFOSABI_OPENBSD 12
#define ELFOSABI_ARM 97
#define ELFOSABI_STANDALONE 255
#define EI_ABIVERSION 8
#define EI_PAD 9
#define ET_NONE 0
#define ET_REL 1
#define ET_EXEC 2
#define ET_DYN 3
#define ET_CORE 4
#define ET_NUM 5
#define ET_LOOS 0xfe00
#define ET_HIOS 0xfeff
#define ET_LOPROC 0xff00
#define ET_HIPROC 0xffff
#define EM_NONE 0
#define EM_M32 1
#define EM_SPARC 2
#define EM_386 3
#define EM_68K 4
#define EM_88K 5
#define EM_860 7
#define EM_MIPS 8
#define EM_S370 9
#define EM_MIPS_RS3_LE 10
#define EM_PARISC 15
#define EM_VPP500 17
#define EM_SPARC32PLUS 18
#define EM_960 19
#define EM_PPC 20
#define EM_PPC64 21
#define EM_S390 22
#define EM_V800 36
#define EM_FR20 37
#define EM_RH32 38
#define EM_RCE 39
#define EM_ARM 40
#define EM_FAKE_ALPHA 41
#define EM_SH 42
#define EM_SPARCV9 43
#define EM_TRICORE 44
#define EM_ARC 45
#define EM_H8_300 46
#define EM_H8_300H 47
#define EM_H8S 48
#define EM_H8_500 49
#define EM_IA_64 50
#define EM_MIPS_X 51
#define EM_COLDFIRE 52
#define EM_68HC12 53
#define EM_MMA 54
#define EM_PCP 55
#define EM_NCPU 56
#define EM_NDR1 57
#define EM_STARCORE 58
#define EM_ME16 59
#define EM_ST100 60
#define EM_TINYJ 61
#define EM_X86_64 62
#define EM_PDSP 63
#define EM_FX66 66
#define EM_ST9PLUS 67
#define EM_ST7 68
#define EM_68HC16 69
#define EM_68HC11 70
#define EM_68HC08 71
#define EM_68HC05 72
#define EM_SVX 73
#define EM_ST19 74
#define EM_VAX 75
#define EM_CRIS 76
#define EM_JAVELIN 77
#define EM_FIREPATH 78
#define EM_ZSP 79
#define EM_MMIX 80
#define EM_HUANY 81
#define EM_PRISM 82
#define EM_AVR 83
#define EM_FR30 84
#define EM_D10V 85
#define EM_D30V 86
#define EM_V850 87
#define EM_M32R 88
#define EM_MN10300 89
#define EM_MN10200 90
#define EM_PJ 91
#define EM_OR1K 92
#define EM_OPENRISC 92
#define EM_ARC_A5 93
#define EM_ARC_COMPACT 93
#define EM_XTENSA 94
#define EM_VIDEOCORE 95
#define EM_TMM_GPP 96
#define EM_NS32K 97
#define EM_TPC 98
#define EM_SNP1K 99
#define EM_ST200 100
#define EM_IP2K 101
#define EM_MAX 102
#define EM_CR 103
#define EM_F2MC16 104
#define EM_MSP430 105
#define EM_BLACKFIN 106
#define EM_SE_C33 107
#define EM_SEP 108
#define EM_ARCA 109
#define EM_UNICORE 110
#define EM_EXCESS 111
#define EM_DXP 112
#define EM_ALTERA_NIOS2 113
#define EM_CRX 114
#define EM_XGATE 115
#define EM_C166 116
#define EM_M16C 117
#define EM_DSPIC30F 118
#define EM_CE 119
#define EM_M32C 120
#define EM_TSK3000 131
#define EM_RS08 132
#define EM_SHARC 133
#define EM_ECOG2 134
#define EM_SCORE7 135
#define EM_DSP24 136
#define EM_VIDEOCORE3 137
#define EM_LATTICEMICO32 138
#define EM_SE_C17 139
#define EM_TI_C6000 140
#define EM_TI_C2000 141
#define EM_TI_C5500 142
#define EM_TI_ARP32 143
#define EM_TI_PRU 144
#define EM_MMDSP_PLUS 160
#define EM_CYPRESS_M8C 161
#define EM_R32C 162
#define EM_TRIMEDIA 163
#define EM_QDSP6 164
#define EM_8051 165
#define EM_STXP7X 166
#define EM_NDS32 167
#define EM_ECOG1X 168
#define EM_MAXQ30 169
#define EM_XIMO16 170
#define EM_MANIK 171
#define EM_CRAYNV2 172
#define EM_RX 173
#define EM_METAG 174
#define EM_MCST_ELBRUS 175
#define EM_ECOG16 176
#define EM_CR16 177
#define EM_ETPU 178
#define EM_SLE9X 179
#define EM_L10M 180
#define EM_K10M 181
#define EM_AARCH64 183
#define EM_AVR32 185
#define EM_STM8 186
#define EM_TILE64 187
#define EM_TILEPRO 188
#define EM_MICROBLAZE 189
#define EM_CUDA 190
#define EM_TILEGX 191
#define EM_CLOUDSHIELD 192
#define EM_COREA_1ST 193
#define EM_COREA_2ND 194
#define EM_ARC_COMPACT2 195
#define EM_OPEN8 196
#define EM_RL78 197
#define EM_VIDEOCORE5 198
#define EM_78KOR 199
#define EM_56800EX 200
#define EM_BA1 201
#define EM_BA2 202
#define EM_XCORE 203
#define EM_MCHP_PIC 204
#define EM_KM32 210
#define EM_KMX32 211
#define EM_EMX16 212
#define EM_EMX8 213
#define EM_KVARC 214
#define EM_CDP 215
#define EM_COGE 216
#define EM_COOL 217
#define EM_NORC 218
#define EM_CSR_KALIMBA 219
#define EM_Z80 220
#define EM_VISIUM 221
#define EM_FT32 222
#define EM_MOXIE 223
#define EM_AMDGPU 224
#define EM_RISCV 243
#define EM_BPF 247
#define EM_NUM 248
#define EM_ALPHA 0x9026
#define EV_NONE 0
#define EV_CURRENT 1
#define EV_NUM 2
typedef struct {
  Elf32_Word sh_name;
  Elf32_Word sh_type;
  Elf32_Word sh_flags;
  Elf32_Addr sh_addr;
  Elf32_Off sh_offset;
  Elf32_Word sh_size;
  Elf32_Word sh_link;
  Elf32_Word sh_info;
  Elf32_Word sh_addralign;
  Elf32_Word sh_entsize;
} Elf32_Shdr;
typedef struct {
  Elf64_Word sh_name;
  Elf64_Word sh_type;
  Elf64_Xword sh_flags;
  Elf64_Addr sh_addr;
  Elf64_Off sh_offset;
  Elf64_Xword sh_size;
  Elf64_Word sh_link;
  Elf64_Word sh_info;
  Elf64_Xword sh_addralign;
  Elf64_Xword sh_entsize;
} Elf64_Shdr;
#define SHN_UNDEF 0
#define SHN_LORESERVE 0xff00
#define SHN_LOPROC 0xff00
#define SHN_BEFORE 0xff00
#define SHN_AFTER 0xff01
#define SHN_HIPROC 0xff1f
#define SHN_LOOS 0xff20
#define SHN_HIOS 0xff3f
#define SHN_ABS 0xfff1
#define SHN_COMMON 0xfff2
#define SHN_XINDEX 0xffff
#define SHN_HIRESERVE 0xffff
#define SHT_NULL 0
#define SHT_PROGBITS 1
#define SHT_SYMTAB 2
#define SHT_STRTAB 3
#define SHT_RELA 4
#define SHT_HASH 5
#define SHT_DYNAMIC 6
#define SHT_NOTE 7
#define SHT_NOBITS 8
#define SHT_REL 9
#define SHT_SHLIB 10
#define SHT_DYNSYM 11
#define SHT_INIT_ARRAY 14
#define SHT_FINI_ARRAY 15
#define SHT_PREINIT_ARRAY 16
#define SHT_GROUP 17
#define SHT_SYMTAB_SHNDX 18
#define SHT_NUM 19
#define SHT_LOOS 0x60000000
#define SHT_GNU_ATTRIBUTES 0x6ffffff5
#define SHT_GNU_HASH 0x6ffffff6
#define SHT_GNU_LIBLIST 0x6ffffff7
#define SHT_CHECKSUM 0x6ffffff8
#define SHT_LOSUNW 0x6ffffffa
#define SHT_SUNW_move 0x6ffffffa
#define SHT_SUNW_COMDAT 0x6ffffffb
#define SHT_SUNW_syminfo 0x6ffffffc
#define SHT_GNU_verdef 0x6ffffffd
#define SHT_GNU_verneed 0x6ffffffe
#define SHT_GNU_versym 0x6fffffff
#define SHT_HISUNW 0x6fffffff
#define SHT_HIOS 0x6fffffff
#define SHT_LOPROC 0x70000000
#define SHT_HIPROC 0x7fffffff
#define SHT_LOUSER 0x80000000
#define SHT_HIUSER 0x8fffffff
#define SHF_WRITE (1 << 0)
#define SHF_ALLOC (1 << 1)
#define SHF_EXECINSTR (1 << 2)
#define SHF_MERGE (1 << 4)
#define SHF_STRINGS (1 << 5)
#define SHF_INFO_LINK (1 << 6)
#define SHF_LINK_ORDER (1 << 7)
#define SHF_OS_NONCONFORMING (1 << 8)
#define SHF_GROUP (1 << 9)
#define SHF_TLS (1 << 10)
#define SHF_COMPRESSED (1 << 11)
#define SHF_MASKOS 0x0ff00000
#define SHF_MASKPROC 0xf0000000
#define SHF_ORDERED (1 << 30)
#define SHF_EXCLUDE (1U << 31)
typedef struct {
  Elf32_Word ch_type;
  Elf32_Word ch_size;
  Elf32_Word ch_addralign;
} Elf32_Chdr;
typedef struct {
  Elf64_Word ch_type;
  Elf64_Word ch_reserved;
  Elf64_Xword ch_size;
  Elf64_Xword ch_addralign;
} Elf64_Chdr;
#define ELFCOMPRESS_ZLIB 1
#define ELFCOMPRESS_LOOS 0x60000000
#define ELFCOMPRESS_HIOS 0x6fffffff
#define ELFCOMPRESS_LOPROC 0x70000000
#define ELFCOMPRESS_HIPROC 0x7fffffff
#define GRP_COMDAT 0x1
typedef struct {
  Elf32_Word st_name;
  Elf32_Addr st_value;
  Elf32_Word st_size;
  unsigned char st_info;
  unsigned char st_other;
  Elf32_Section st_shndx;
} Elf32_Sym;
typedef struct {
  Elf64_Word st_name;
  unsigned char st_info;
  unsigned char st_other;
  Elf64_Section st_shndx;
  Elf64_Addr st_value;
  Elf64_Xword st_size;
} Elf64_Sym;
typedef struct {
  Elf32_Half si_boundto;
  Elf32_Half si_flags;
} Elf32_Syminfo;
typedef struct {
  Elf64_Half si_boundto;
  Elf64_Half si_flags;
} Elf64_Syminfo;
#define SYMINFO_BT_SELF 0xffff
#define SYMINFO_BT_PARENT 0xfffe
#define SYMINFO_BT_LOWRESERVE 0xff00
#define SYMINFO_FLG_DIRECT 0x0001
#define SYMINFO_FLG_PASSTHRU 0x0002
#define SYMINFO_FLG_COPY 0x0004
#define SYMINFO_FLG_LAZYLOAD 0x0008
#define SYMINFO_NONE 0
#define SYMINFO_CURRENT 1
#define SYMINFO_NUM 2
#define ELF32_ST_BIND(val) (((unsigned char) (val)) >> 4)
#define ELF32_ST_TYPE(val) ((val) & 0xf)
#define ELF32_ST_INFO(bind,type) (((bind) << 4) + ((type) & 0xf))
#define ELF64_ST_BIND(val) ELF32_ST_BIND (val)
#define ELF64_ST_TYPE(val) ELF32_ST_TYPE (val)
#define ELF64_ST_INFO(bind,type) ELF32_ST_INFO ((bind), (type))
#define STB_LOCAL 0
#define STB_GLOBAL 1
#define STB_WEAK 2
#define STB_NUM 3
#define STB_LOOS 10
#define STB_GNU_UNIQUE 10
#define STB_HIOS 12
#define STB_LOPROC 13
#define STB_HIPROC 15
#define STT_NOTYPE 0
#define STT_OBJECT 1
#define STT_FUNC 2
#define STT_SECTION 3
#define STT_FILE 4
#define STT_COMMON 5
#define STT_TLS 6
#define STT_NUM 7
#define STT_LOOS 10
#define STT_GNU_IFUNC 10
#define STT_HIOS 12
#define STT_LOPROC 13
#define STT_HIPROC 15
#define STN_UNDEF 0
#define ELF32_ST_VISIBILITY(o) ((o) & 0x03)
#define ELF64_ST_VISIBILITY(o) ELF32_ST_VISIBILITY (o)
#define STV_DEFAULT 0
#define STV_INTERNAL 1
#define STV_HIDDEN 2
#define STV_PROTECTED 3
typedef struct {
  Elf32_Addr r_offset;
  Elf32_Word r_info;
} Elf32_Rel;
typedef struct {
  Elf64_Addr r_offset;
  Elf64_Xword r_info;
} Elf64_Rel;
typedef struct {
  Elf32_Addr r_offset;
  Elf32_Word r_info;
  Elf32_Sword r_addend;
} Elf32_Rela;
typedef struct {
  Elf64_Addr r_offset;
  Elf64_Xword r_info;
  Elf64_Sxword r_addend;
} Elf64_Rela;
#define ELF32_R_SYM(val) ((val) >> 8)
#define ELF32_R_TYPE(val) ((val) & 0xff)
#define ELF32_R_INFO(sym,type) (((sym) << 8) + ((type) & 0xff))
#define ELF64_R_SYM(i) ((i) >> 32)
#define ELF64_R_TYPE(i) ((i) & 0xffffffff)
#define ELF64_R_INFO(sym,type) ((((Elf64_Xword) (sym)) << 32) + (type))
typedef struct {
  Elf32_Word p_type;
  Elf32_Off p_offset;
  Elf32_Addr p_vaddr;
  Elf32_Addr p_paddr;
  Elf32_Word p_filesz;
  Elf32_Word p_memsz;
  Elf32_Word p_flags;
  Elf32_Word p_align;
} Elf32_Phdr;
typedef struct {
  Elf64_Word p_type;
  Elf64_Word p_flags;
  Elf64_Off p_offset;
  Elf64_Addr p_vaddr;
  Elf64_Addr p_paddr;
  Elf64_Xword p_filesz;
  Elf64_Xword p_memsz;
  Elf64_Xword p_align;
} Elf64_Phdr;
#define PT_NULL 0
#define PT_LOAD 1
#define PT_DYNAMIC 2
#define PT_INTERP 3
#define PT_NOTE 4
#define PT_SHLIB 5
#define PT_PHDR 6
#define PT_TLS 7
#define PT_NUM 8
#define PT_LOOS 0x60000000
#define PT_GNU_EH_FRAME 0x6474e550
#define PT_GNU_STACK 0x6474e551
#define PT_GNU_RELRO 0x6474e552
#define PT_LOSUNW 0x6ffffffa
#define PT_SUNWBSS 0x6ffffffa
#define PT_SUNWSTACK 0x6ffffffb
#define PT_HISUNW 0x6fffffff
#define PT_HIOS 0x6fffffff
#define PT_LOPROC 0x70000000
#define PT_HIPROC 0x7fffffff
#define PN_XNUM 0xffff
#define PF_X (1 << 0)
#define PF_W (1 << 1)
#define PF_R (1 << 2)
#define PF_MASKOS 0x0ff00000
#define PF_MASKPROC 0xf0000000
#define NT_PRSTATUS 1
#define NT_PRFPREG 2
#define NT_FPREGSET 2
#define NT_PRPSINFO 3
#define NT_PRXREG 4
#define NT_TASKSTRUCT 4
#define NT_PLATFORM 5
#define NT_AUXV 6
#define NT_GWINDOWS 7
#define NT_ASRS 8
#define NT_PSTATUS 10
#define NT_PSINFO 13
#define NT_PRCRED 14
#define NT_UTSNAME 15
#define NT_LWPSTATUS 16
#define NT_LWPSINFO 17
#define NT_PRFPXREG 20
#define NT_SIGINFO 0x53494749
#define NT_FILE 0x46494c45
#define NT_PRXFPREG 0x46e62b7f
#define NT_PPC_VMX 0x100
#define NT_PPC_SPE 0x101
#define NT_PPC_VSX 0x102
#define NT_PPC_TAR 0x103
#define NT_PPC_PPR 0x104
#define NT_PPC_DSCR 0x105
#define NT_PPC_EBB 0x106
#define NT_PPC_PMU 0x107
#define NT_PPC_TM_CGPR 0x108
#define NT_PPC_TM_CFPR 0x109
#define NT_PPC_TM_CVMX 0x10a
#define NT_PPC_TM_CVSX 0x10b
#define NT_PPC_TM_SPR 0x10c
#define NT_PPC_TM_CTAR 0x10d
#define NT_PPC_TM_CPPR 0x10e
#define NT_PPC_TM_CDSCR 0x10f
#define NT_386_TLS 0x200
#define NT_386_IOPERM 0x201
#define NT_X86_XSTATE 0x202
#define NT_S390_HIGH_GPRS 0x300
#define NT_S390_TIMER 0x301
#define NT_S390_TODCMP 0x302
#define NT_S390_TODPREG 0x303
#define NT_S390_CTRS 0x304
#define NT_S390_PREFIX 0x305
#define NT_S390_LAST_BREAK 0x306
#define NT_S390_SYSTEM_CALL 0x307
#define NT_S390_TDB 0x308
#define NT_S390_VXRS_LOW 0x309
#define NT_S390_VXRS_HIGH 0x30a
#define NT_S390_GS_CB 0x30b
#define NT_S390_GS_BC 0x30c
#define NT_S390_RI_CB 0x30d
#define NT_ARM_VFP 0x400
#define NT_ARM_TLS 0x401
#define NT_ARM_HW_BREAK 0x402
#define NT_ARM_HW_WATCH 0x403
#define NT_ARM_SYSTEM_CALL 0x404
#define NT_ARM_SVE 0x405
#define NT_METAG_CBUF 0x500
#define NT_METAG_RPIPE 0x501
#define NT_METAG_TLS 0x502
#define NT_ARC_V2 0x600
#define NT_VMCOREDD 0x700
#define NT_VERSION 1
typedef struct {
  Elf32_Sword d_tag;
  union {
      Elf32_Word d_val;
      Elf32_Addr d_ptr;
  } d_un;
} Elf32_Dyn;
typedef struct {
  Elf64_Sxword d_tag;
  union {
      Elf64_Xword d_val;
      Elf64_Addr d_ptr;
  } d_un;
} Elf64_Dyn;
#define DT_NULL 0
#define DT_NEEDED 1
#define DT_PLTRELSZ 2
#define DT_PLTGOT 3
#define DT_HASH 4
#define DT_STRTAB 5
#define DT_SYMTAB 6
#define DT_RELA 7
#define DT_RELASZ 8
#define DT_RELAENT 9
#define DT_STRSZ 10
#define DT_SYMENT 11
#define DT_INIT 12
#define DT_FINI 13
#define DT_SONAME 14
#define DT_RPATH 15
#define DT_SYMBOLIC 16
#define DT_REL 17
#define DT_RELSZ 18
#define DT_RELENT 19
#define DT_PLTREL 20
#define DT_DEBUG 21
#define DT_TEXTREL 22
#define DT_JMPREL 23
#define DT_BIND_NOW 24
#define DT_INIT_ARRAY 25
#define DT_FINI_ARRAY 26
#define DT_INIT_ARRAYSZ 27
#define DT_FINI_ARRAYSZ 28
#define DT_RUNPATH 29
#define DT_FLAGS 30
#define DT_ENCODING 32
#define DT_PREINIT_ARRAY 32
#define DT_PREINIT_ARRAYSZ 33
#define DT_SYMTAB_SHNDX 34
#define DT_NUM 35
#define DT_LOOS 0x6000000d
#define DT_HIOS 0x6ffff000
#define DT_LOPROC 0x70000000
#define DT_HIPROC 0x7fffffff
#define DT_PROCNUM DT_MIPS_NUM
#define DT_VALRNGLO 0x6ffffd00
#define DT_GNU_PRELINKED 0x6ffffdf5
#define DT_GNU_CONFLICTSZ 0x6ffffdf6
#define DT_GNU_LIBLISTSZ 0x6ffffdf7
#define DT_CHECKSUM 0x6ffffdf8
#define DT_PLTPADSZ 0x6ffffdf9
#define DT_MOVEENT 0x6ffffdfa
#define DT_MOVESZ 0x6ffffdfb
#define DT_FEATURE_1 0x6ffffdfc
#define DT_POSFLAG_1 0x6ffffdfd
#define DT_SYMINSZ 0x6ffffdfe
#define DT_SYMINENT 0x6ffffdff
#define DT_VALRNGHI 0x6ffffdff
#define DT_VALTAGIDX(tag) (DT_VALRNGHI - (tag))
#define DT_VALNUM 12
#define DT_ADDRRNGLO 0x6ffffe00
#define DT_GNU_HASH 0x6ffffef5
#define DT_TLSDESC_PLT 0x6ffffef6
#define DT_TLSDESC_GOT 0x6ffffef7
#define DT_GNU_CONFLICT 0x6ffffef8
#define DT_GNU_LIBLIST 0x6ffffef9
#define DT_CONFIG 0x6ffffefa
#define DT_DEPAUDIT 0x6ffffefb
#define DT_AUDIT 0x6ffffefc
#define DT_PLTPAD 0x6ffffefd
#define DT_MOVETAB 0x6ffffefe
#define DT_SYMINFO 0x6ffffeff
#define DT_ADDRRNGHI 0x6ffffeff
#define DT_ADDRTAGIDX(tag) (DT_ADDRRNGHI - (tag))
#define DT_ADDRNUM 11
#define DT_VERSYM 0x6ffffff0
#define DT_RELACOUNT 0x6ffffff9
#define DT_RELCOUNT 0x6ffffffa
#define DT_FLAGS_1 0x6ffffffb
#define DT_VERDEF 0x6ffffffc
#define DT_VERDEFNUM 0x6ffffffd
#define DT_VERNEED 0x6ffffffe
#define DT_VERNEEDNUM 0x6fffffff
#define DT_VERSIONTAGIDX(tag) (DT_VERNEEDNUM - (tag))
#define DT_VERSIONTAGNUM 16
#define DT_AUXILIARY 0x7ffffffd
#define DT_FILTER 0x7fffffff
#define DT_EXTRATAGIDX(tag) ((Elf32_Word)-((Elf32_Sword) (tag) <<1>>1)-1)
#define DT_EXTRANUM 3
#define DF_ORIGIN 0x00000001
#define DF_SYMBOLIC 0x00000002
#define DF_TEXTREL 0x00000004
#define DF_BIND_NOW 0x00000008
#define DF_STATIC_TLS 0x00000010
#define DF_1_NOW 0x00000001
#define DF_1_GLOBAL 0x00000002
#define DF_1_GROUP 0x00000004
#define DF_1_NODELETE 0x00000008
#define DF_1_LOADFLTR 0x00000010
#define DF_1_INITFIRST 0x00000020
#define DF_1_NOOPEN 0x00000040
#define DF_1_ORIGIN 0x00000080
#define DF_1_DIRECT 0x00000100
#define DF_1_TRANS 0x00000200
#define DF_1_INTERPOSE 0x00000400
#define DF_1_NODEFLIB 0x00000800
#define DF_1_NODUMP 0x00001000
#define DF_1_CONFALT 0x00002000
#define DF_1_ENDFILTEE 0x00004000
#define DF_1_DISPRELDNE 0x00008000
#define DF_1_DISPRELPND 0x00010000
#define DF_1_NODIRECT 0x00020000
#define DF_1_IGNMULDEF 0x00040000
#define DF_1_NOKSYMS 0x00080000
#define DF_1_NOHDR 0x00100000
#define DF_1_EDITED 0x00200000
#define DF_1_NORELOC 0x00400000
#define DF_1_SYMINTPOSE 0x00800000
#define DF_1_GLOBAUDIT 0x01000000
#define DF_1_SINGLETON 0x02000000
#define DF_1_STUB 0x04000000
#define DF_1_PIE 0x08000000
#define DTF_1_PARINIT 0x00000001
#define DTF_1_CONFEXP 0x00000002
#define DF_P1_LAZYLOAD 0x00000001
#define DF_P1_GROUPPERM 0x00000002
typedef struct {
  Elf32_Half vd_version;
  Elf32_Half vd_flags;
  Elf32_Half vd_ndx;
  Elf32_Half vd_cnt;
  Elf32_Word vd_hash;
  Elf32_Word vd_aux;
  Elf32_Word vd_next;
} Elf32_Verdef;
typedef struct {
  Elf64_Half vd_version;
  Elf64_Half vd_flags;
  Elf64_Half vd_ndx;
  Elf64_Half vd_cnt;
  Elf64_Word vd_hash;
  Elf64_Word vd_aux;
  Elf64_Word vd_next;
} Elf64_Verdef;
#define VER_DEF_NONE 0
#define VER_DEF_CURRENT 1
#define VER_DEF_NUM 2
#define VER_FLG_BASE 0x1
#define VER_FLG_WEAK 0x2
#define VER_NDX_LOCAL 0
#define VER_NDX_GLOBAL 1
#define VER_NDX_LORESERVE 0xff00
#define VER_NDX_ELIMINATE 0xff01
typedef struct {
  Elf32_Word vda_name;
  Elf32_Word vda_next;
} Elf32_Verdaux;
typedef struct {
  Elf64_Word vda_name;
  Elf64_Word vda_next;
} Elf64_Verdaux;
typedef struct {
  Elf32_Half vn_version;
  Elf32_Half vn_cnt;
  Elf32_Word vn_file;
  Elf32_Word vn_aux;
  Elf32_Word vn_next;
} Elf32_Verneed;
typedef struct {
  Elf64_Half vn_version;
  Elf64_Half vn_cnt;
  Elf64_Word vn_file;
  Elf64_Word vn_aux;
  Elf64_Word vn_next;
} Elf64_Verneed;
#define VER_NEED_NONE 0
#define VER_NEED_CURRENT 1
#define VER_NEED_NUM 2
typedef struct {
  Elf32_Word vna_hash;
  Elf32_Half vna_flags;
  Elf32_Half vna_other;
  Elf32_Word vna_name;
  Elf32_Word vna_next;
} Elf32_Vernaux;
typedef struct {
  Elf64_Word vna_hash;
  Elf64_Half vna_flags;
  Elf64_Half vna_other;
  Elf64_Word vna_name;
  Elf64_Word vna_next;
} Elf64_Vernaux;
#define VER_FLG_WEAK 0x2
typedef struct {
  uint32_t a_type;
  union {
      uint32_t a_val;
  } a_un;
} Elf32_auxv_t;
typedef struct {
  uint64_t a_type;
  union {
      uint64_t a_val;
  } a_un;
} Elf64_auxv_t;
#define AT_NULL 0
#define AT_IGNORE 1
#define AT_EXECFD 2
#define AT_PHDR 3
#define AT_PHENT 4
#define AT_PHNUM 5
#define AT_PAGESZ 6
#define AT_BASE 7
#define AT_FLAGS 8
#define AT_ENTRY 9
#define AT_NOTELF 10
#define AT_UID 11
#define AT_EUID 12
#define AT_GID 13
#define AT_EGID 14
#define AT_CLKTCK 17
#define AT_PLATFORM 15
#define AT_HWCAP 16
#define AT_FPUCW 18
#define AT_DCACHEBSIZE 19
#define AT_ICACHEBSIZE 20
#define AT_UCACHEBSIZE 21
#define AT_IGNOREPPC 22
#define AT_SECURE 23
#define AT_BASE_PLATFORM 24
#define AT_RANDOM 25
#define AT_HWCAP2 26
#define AT_EXECFN 31
#define AT_SYSINFO 32
#define AT_SYSINFO_EHDR 33
#define AT_L1I_CACHESHAPE 34
#define AT_L1D_CACHESHAPE 35
#define AT_L2_CACHESHAPE 36
#define AT_L3_CACHESHAPE 37
#define AT_L1I_CACHESIZE 40
#define AT_L1I_CACHEGEOMETRY 41
#define AT_L1D_CACHESIZE 42
#define AT_L1D_CACHEGEOMETRY 43
#define AT_L2_CACHESIZE 44
#define AT_L2_CACHEGEOMETRY 45
#define AT_L3_CACHESIZE 46
#define AT_L3_CACHEGEOMETRY 47
#define AT_MINSIGSTKSZ 51
typedef struct {
  Elf32_Word n_namesz;
  Elf32_Word n_descsz;
  Elf32_Word n_type;
} Elf32_Nhdr;
typedef struct {
  Elf64_Word n_namesz;
  Elf64_Word n_descsz;
  Elf64_Word n_type;
} Elf64_Nhdr;
#define ELF_NOTE_SOLARIS "SUNW Solaris"
#define ELF_NOTE_GNU "GNU"
#define ELF_NOTE_PAGESIZE_HINT 1
#define NT_GNU_ABI_TAG 1
#define ELF_NOTE_ABI NT_GNU_ABI_TAG
#define ELF_NOTE_OS_LINUX 0
#define ELF_NOTE_OS_GNU 1
#define ELF_NOTE_OS_SOLARIS2 2
#define ELF_NOTE_OS_FREEBSD 3
#define NT_GNU_BUILD_ID 3
#define NT_GNU_GOLD_VERSION 4
typedef struct {
  Elf32_Xword m_value;
  Elf32_Word m_info;
  Elf32_Word m_poffset;
  Elf32_Half m_repeat;
  Elf32_Half m_stride;
} Elf32_Move;
typedef struct {
  Elf64_Xword m_value;
  Elf64_Xword m_info;
  Elf64_Xword m_poffset;
  Elf64_Half m_repeat;
  Elf64_Half m_stride;
} Elf64_Move;
#define ELF32_M_SYM(info) ((info) >> 8)
#define ELF32_M_SIZE(info) ((unsigned char) (info))
#define ELF32_M_INFO(sym,size) (((sym) << 8) + (unsigned char) (size))
#define ELF64_M_SYM(info) ELF32_M_SYM (info)
#define ELF64_M_SIZE(info) ELF32_M_SIZE (info)
#define ELF64_M_INFO(sym,size) ELF32_M_INFO (sym, size)
#define EF_CPU32 0x00810000
#define R_386_NONE 0
#define R_386_32 1
#define R_386_PC32 2
#define R_386_GOT32 3
#define R_386_PLT32 4
#define R_386_COPY 5
#define R_386_GLOB_DAT 6
#define R_386_JMP_SLOT 7
#define R_386_RELATIVE 8
#define R_386_GOTOFF 9
#define R_386_GOTPC 10
#define R_386_32PLT 11
#define R_386_TLS_TPOFF 14
#define R_386_TLS_IE 15
#define R_386_TLS_GOTIE 16
#define R_386_TLS_LE 17
#define R_386_TLS_GD 18
#define R_386_TLS_LDM 19
#define R_386_16 20
#define R_386_PC16 21
#define R_386_8 22
#define R_386_PC8 23
#define R_386_TLS_GD_32 24
#define R_386_TLS_GD_PUSH 25
#define R_386_TLS_GD_CALL 26
#define R_386_TLS_GD_POP 27
#define R_386_TLS_LDM_32 28
#define R_386_TLS_LDM_PUSH 29
#define R_386_TLS_LDM_CALL 30
#define R_386_TLS_LDM_POP 31
#define R_386_TLS_LDO_32 32
#define R_386_TLS_IE_32 33
#define R_386_TLS_LE_32 34
#define R_386_TLS_DTPMOD32 35
#define R_386_TLS_DTPOFF32 36
#define R_386_TLS_TPOFF32 37
#define R_386_SIZE32 38
#define R_386_TLS_GOTDESC 39
#define R_386_TLS_DESC_CALL 40
#define R_386_TLS_DESC 41
#define R_386_IRELATIVE 42
#define R_386_GOT32X 43
#define R_386_NUM 44
typedef union {
  struct {
      Elf32_Word gt_current_g_value;
      Elf32_Word gt_unused;
  } gt_header;
  struct {
      Elf32_Word gt_g_value;
      Elf32_Word gt_bytes;
  } gt_entry;
} Elf32_gptab;
typedef struct {
  Elf32_Word ri_gprmask;
  Elf32_Word ri_cprmask[4];
  Elf32_Sword ri_gp_value;
} Elf32_RegInfo;
typedef struct {
  unsigned char kind;
  unsigned char size;
  Elf32_Section section;
  Elf32_Word info;
} Elf_Options;
#define ODK_NULL 0
#define ODK_REGINFO 1
#define ODK_EXCEPTIONS 2
#define ODK_PAD 3
#define ODK_HWPATCH 4
#define ODK_FILL 5
#define ODK_TAGS 6
#define ODK_HWAND 7
#define ODK_HWOR 8
#define OEX_FPU_MIN 0x1f
#define OEX_FPU_MAX 0x1f00
#define OEX_PAGE0 0x10000
#define OEX_SMM 0x20000
#define OEX_FPDBUG 0x40000
#define OEX_PRECISEFP OEX_FPDBUG
#define OEX_DISMISS 0x80000
#define OEX_FPU_INVAL 0x10
#define OEX_FPU_DIV0 0x08
#define OEX_FPU_OFLO 0x04
#define OEX_FPU_UFLO 0x02
#define OEX_FPU_INEX 0x01
#define OHW_R4KEOP 0x1
#define OHW_R8KPFETCH 0x2
#define OHW_R5KEOP 0x4
#define OHW_R5KCVTL 0x8
#define OPAD_PREFIX 0x1
#define OPAD_POSTFIX 0x2
#define OPAD_SYMBOL 0x4
typedef struct {
  Elf32_Word hwp_flags1;
  Elf32_Word hwp_flags2;
} Elf_Options_Hw;
typedef struct {
  Elf32_Word l_name;
  Elf32_Word l_time_stamp;
  Elf32_Word l_checksum;
  Elf32_Word l_version;
  Elf32_Word l_flags;
} Elf32_Lib;
typedef struct {
  Elf64_Word l_name;
  Elf64_Word l_time_stamp;
  Elf64_Word l_checksum;
  Elf64_Word l_version;
  Elf64_Word l_flags;
} Elf64_Lib;
#define LL_NONE 0
#define LL_EXACT_MATCH (1 << 0)
#define LL_IGNORE_INT_VER (1 << 1)
#define LL_REQUIRE_MINOR (1 << 2)
#define LL_EXPORTS (1 << 3)
#define LL_DELAY_LOAD (1 << 4)
#define LL_DELTA (1 << 5)
typedef Elf32_Addr Elf32_Conflict;
#define EF_ARM_RELEXEC 0x01
#define EF_ARM_HASENTRY 0x02
#define EF_ARM_INTERWORK 0x04
#define EF_ARM_APCS_26 0x08
#define EF_ARM_APCS_FLOAT 0x10
#define EF_ARM_PIC 0x20
#define EF_ARM_ALIGN8 0x40
#define EF_ARM_NEW_ABI 0x80
#define EF_ARM_OLD_ABI 0x100
#define EF_ARM_SOFT_FLOAT 0x200
#define EF_ARM_VFP_FLOAT 0x400
#define EF_ARM_MAVERICK_FLOAT 0x800
#define EF_ARM_ABI_FLOAT_SOFT 0x200
#define EF_ARM_ABI_FLOAT_HARD 0x400
#define EF_ARM_SYMSARESORTED 0x04
#define EF_ARM_DYNSYMSUSESEGIDX 0x08
#define EF_ARM_MAPSYMSFIRST 0x10
#define EF_ARM_EABIMASK 0XFF000000
#define EF_ARM_BE8 0x00800000
#define EF_ARM_LE8 0x00400000
#define EF_ARM_EABI_VERSION(flags) ((flags) & EF_ARM_EABIMASK)
#define EF_ARM_EABI_UNKNOWN 0x00000000
#define EF_ARM_EABI_VER1 0x01000000
#define EF_ARM_EABI_VER2 0x02000000
#define EF_ARM_EABI_VER3 0x03000000
#define EF_ARM_EABI_VER4 0x04000000
#define EF_ARM_EABI_VER5 0x05000000
#define STT_ARM_TFUNC STT_LOPROC
#define STT_ARM_16BIT STT_HIPROC
#define SHF_ARM_ENTRYSECT 0x10000000
#define SHF_ARM_COMDEF 0x80000000
#define PF_ARM_SB 0x10000000
#define PF_ARM_PI 0x20000000
#define PF_ARM_ABS 0x40000000
#define PT_ARM_EXIDX (PT_LOPROC + 1)
#define SHT_ARM_EXIDX (SHT_LOPROC + 1)
#define SHT_ARM_PREEMPTMAP (SHT_LOPROC + 2)
#define SHT_ARM_ATTRIBUTES (SHT_LOPROC + 3)
#define R_AARCH64_NONE 0
#define R_AARCH64_P32_ABS32 1
#define R_AARCH64_P32_COPY 180
#define R_AARCH64_P32_GLOB_DAT 181
#define R_AARCH64_P32_JUMP_SLOT 182
#define R_AARCH64_P32_RELATIVE 183
#define R_AARCH64_P32_TLS_DTPMOD 184
#define R_AARCH64_P32_TLS_DTPREL 185
#define R_AARCH64_P32_TLS_TPREL 186
#define R_AARCH64_P32_TLSDESC 187
#define R_AARCH64_P32_IRELATIVE 188
#define R_AARCH64_ABS64 257
#define R_AARCH64_ABS32 258
#define R_AARCH64_ABS16 259
#define R_AARCH64_PREL64 260
#define R_AARCH64_PREL32 261
#define R_AARCH64_PREL16 262
#define R_AARCH64_MOVW_UABS_G0 263
#define R_AARCH64_MOVW_UABS_G0_NC 264
#define R_AARCH64_MOVW_UABS_G1 265
#define R_AARCH64_MOVW_UABS_G1_NC 266
#define R_AARCH64_MOVW_UABS_G2 267
#define R_AARCH64_MOVW_UABS_G2_NC 268
#define R_AARCH64_MOVW_UABS_G3 269
#define R_AARCH64_MOVW_SABS_G0 270
#define R_AARCH64_MOVW_SABS_G1 271
#define R_AARCH64_MOVW_SABS_G2 272
#define R_AARCH64_LD_PREL_LO19 273
#define R_AARCH64_ADR_PREL_LO21 274
#define R_AARCH64_ADR_PREL_PG_HI21 275
#define R_AARCH64_ADR_PREL_PG_HI21_NC 276
#define R_AARCH64_ADD_ABS_LO12_NC 277
#define R_AARCH64_LDST8_ABS_LO12_NC 278
#define R_AARCH64_TSTBR14 279
#define R_AARCH64_CONDBR19 280
#define R_AARCH64_JUMP26 282
#define R_AARCH64_CALL26 283
#define R_AARCH64_LDST16_ABS_LO12_NC 284
#define R_AARCH64_LDST32_ABS_LO12_NC 285
#define R_AARCH64_LDST64_ABS_LO12_NC 286
#define R_AARCH64_MOVW_PREL_G0 287
#define R_AARCH64_MOVW_PREL_G0_NC 288
#define R_AARCH64_MOVW_PREL_G1 289
#define R_AARCH64_MOVW_PREL_G1_NC 290
#define R_AARCH64_MOVW_PREL_G2 291
#define R_AARCH64_MOVW_PREL_G2_NC 292
#define R_AARCH64_MOVW_PREL_G3 293
#define R_AARCH64_LDST128_ABS_LO12_NC 299
#define R_AARCH64_MOVW_GOTOFF_G0 300
#define R_AARCH64_MOVW_GOTOFF_G0_NC 301
#define R_AARCH64_MOVW_GOTOFF_G1 302
#define R_AARCH64_MOVW_GOTOFF_G1_NC 303
#define R_AARCH64_MOVW_GOTOFF_G2 304
#define R_AARCH64_MOVW_GOTOFF_G2_NC 305
#define R_AARCH64_MOVW_GOTOFF_G3 306
#define R_AARCH64_GOTREL64 307
#define R_AARCH64_GOTREL32 308
#define R_AARCH64_GOT_LD_PREL19 309
#define R_AARCH64_LD64_GOTOFF_LO15 310
#define R_AARCH64_ADR_GOT_PAGE 311
#define R_AARCH64_LD64_GOT_LO12_NC 312
#define R_AARCH64_LD64_GOTPAGE_LO15 313
#define R_AARCH64_TLSGD_ADR_PREL21 512
#define R_AARCH64_TLSGD_ADR_PAGE21 513
#define R_AARCH64_TLSGD_ADD_LO12_NC 514
#define R_AARCH64_TLSGD_MOVW_G1 515
#define R_AARCH64_TLSGD_MOVW_G0_NC 516
#define R_AARCH64_TLSLD_ADR_PREL21 517
#define R_AARCH64_TLSLD_ADR_PAGE21 518
#define R_AARCH64_TLSLD_ADD_LO12_NC 519
#define R_AARCH64_TLSLD_MOVW_G1 520
#define R_AARCH64_TLSLD_MOVW_G0_NC 521
#define R_AARCH64_TLSLD_LD_PREL19 522
#define R_AARCH64_TLSLD_MOVW_DTPREL_G2 523
#define R_AARCH64_TLSLD_MOVW_DTPREL_G1 524
#define R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC 525
#define R_AARCH64_TLSLD_MOVW_DTPREL_G0 526
#define R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC 527
#define R_AARCH64_TLSLD_ADD_DTPREL_HI12 528
#define R_AARCH64_TLSLD_ADD_DTPREL_LO12 529
#define R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC 530
#define R_AARCH64_TLSLD_LDST8_DTPREL_LO12 531
#define R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC 532
#define R_AARCH64_TLSLD_LDST16_DTPREL_LO12 533
#define R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC 534
#define R_AARCH64_TLSLD_LDST32_DTPREL_LO12 535
#define R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC 536
#define R_AARCH64_TLSLD_LDST64_DTPREL_LO12 537
#define R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC 538
#define R_AARCH64_TLSIE_MOVW_GOTTPREL_G1 539
#define R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC 540
#define R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21 541
#define R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC 542
#define R_AARCH64_TLSIE_LD_GOTTPREL_PREL19 543
#define R_AARCH64_TLSLE_MOVW_TPREL_G2 544
#define R_AARCH64_TLSLE_MOVW_TPREL_G1 545
#define R_AARCH64_TLSLE_MOVW_TPREL_G1_NC 546
#define R_AARCH64_TLSLE_MOVW_TPREL_G0 547
#define R_AARCH64_TLSLE_MOVW_TPREL_G0_NC 548
#define R_AARCH64_TLSLE_ADD_TPREL_HI12 549
#define R_AARCH64_TLSLE_ADD_TPREL_LO12 550
#define R_AARCH64_TLSLE_ADD_TPREL_LO12_NC 551
#define R_AARCH64_TLSLE_LDST8_TPREL_LO12 552
#define R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC 553
#define R_AARCH64_TLSLE_LDST16_TPREL_LO12 554
#define R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC 555
#define R_AARCH64_TLSLE_LDST32_TPREL_LO12 556
#define R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC 557
#define R_AARCH64_TLSLE_LDST64_TPREL_LO12 558
#define R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC 559
#define R_AARCH64_TLSDESC_LD_PREL19 560
#define R_AARCH64_TLSDESC_ADR_PREL21 561
#define R_AARCH64_TLSDESC_ADR_PAGE21 562
#define R_AARCH64_TLSDESC_LD64_LO12 563
#define R_AARCH64_TLSDESC_ADD_LO12 564
#define R_AARCH64_TLSDESC_OFF_G1 565
#define R_AARCH64_TLSDESC_OFF_G0_NC 566
#define R_AARCH64_TLSDESC_LDR 567
#define R_AARCH64_TLSDESC_ADD 568
#define R_AARCH64_TLSDESC_CALL 569
#define R_AARCH64_TLSLE_LDST128_TPREL_LO12 570
#define R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC 571
#define R_AARCH64_TLSLD_LDST128_DTPREL_LO12 572
#define R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC 573
#define R_AARCH64_COPY 1024
#define R_AARCH64_GLOB_DAT 1025
#define R_AARCH64_JUMP_SLOT 1026
#define R_AARCH64_RELATIVE 1027
#define R_AARCH64_TLS_DTPMOD 1028
#define R_AARCH64_TLS_DTPMOD64 1028
#define R_AARCH64_TLS_DTPREL 1029
#define R_AARCH64_TLS_DTPREL64 1029
#define R_AARCH64_TLS_TPREL 1030
#define R_AARCH64_TLS_TPREL64 1030
#define R_AARCH64_TLSDESC 1031
#define R_ARM_NONE 0
#define R_ARM_PC24 1
#define R_ARM_ABS32 2
#define R_ARM_REL32 3
#define R_ARM_PC13 4
#define R_ARM_ABS16 5
#define R_ARM_ABS12 6
#define R_ARM_THM_ABS5 7
#define R_ARM_ABS8 8
#define R_ARM_SBREL32 9
#define R_ARM_THM_PC22 10
#define R_ARM_THM_PC8 11
#define R_ARM_AMP_VCALL9 12
#define R_ARM_TLS_DESC 13
#define R_ARM_THM_SWI8 14
#define R_ARM_XPC25 15
#define R_ARM_THM_XPC22 16
#define R_ARM_TLS_DTPMOD32 17
#define R_ARM_TLS_DTPOFF32 18
#define R_ARM_TLS_TPOFF32 19
#define R_ARM_COPY 20
#define R_ARM_GLOB_DAT 21
#define R_ARM_JUMP_SLOT 22
#define R_ARM_RELATIVE 23
#define R_ARM_GOTOFF 24
#define R_ARM_GOTPC 25
#define R_ARM_GOT32 26
#define R_ARM_PLT32 27
#define R_ARM_CALL 28
#define R_ARM_JUMP24 29
#define R_ARM_THM_JUMP24 30
#define R_ARM_BASE_ABS 31
#define R_ARM_ALU_PCREL_7_0 32
#define R_ARM_ALU_PCREL_15_8 33
#define R_ARM_ALU_PCREL_23_15 34
#define R_ARM_LDR_SBREL_11_0 35
#define R_ARM_ALU_SBREL_19_12 36
#define R_ARM_ALU_SBREL_27_20 37
#define R_ARM_TARGET1 38
#define R_ARM_SBREL31 39
#define R_ARM_V4BX 40
#define R_ARM_TARGET2 41
#define R_ARM_PREL31 42
#define R_ARM_MOVW_ABS_NC 43
#define R_ARM_MOVT_ABS 44
#define R_ARM_MOVW_PREL_NC 45
#define R_ARM_MOVT_PREL 46
#define R_ARM_THM_MOVW_ABS_NC 47
#define R_ARM_THM_MOVT_ABS 48
#define R_ARM_THM_MOVW_PREL_NC 49
#define R_ARM_THM_MOVT_PREL 50
#define R_ARM_THM_JUMP19 51
#define R_ARM_THM_JUMP6 52
#define R_ARM_THM_ALU_PREL_11_0 53
#define R_ARM_THM_PC12 54
#define R_ARM_ABS32_NOI 55
#define R_ARM_REL32_NOI 56
#define R_ARM_ALU_PC_G0_NC 57
#define R_ARM_ALU_PC_G0 58
#define R_ARM_ALU_PC_G1_NC 59
#define R_ARM_ALU_PC_G1 60
#define R_ARM_ALU_PC_G2 61
#define R_ARM_LDR_PC_G1 62
#define R_ARM_LDR_PC_G2 63
#define R_ARM_LDRS_PC_G0 64
#define R_ARM_LDRS_PC_G1 65
#define R_ARM_LDRS_PC_G2 66
#define R_ARM_LDC_PC_G0 67
#define R_ARM_LDC_PC_G1 68
#define R_ARM_LDC_PC_G2 69
#define R_ARM_ALU_SB_G0_NC 70
#define R_ARM_ALU_SB_G0 71
#define R_ARM_ALU_SB_G1_NC 72
#define R_ARM_ALU_SB_G1 73
#define R_ARM_ALU_SB_G2 74
#define R_ARM_LDR_SB_G0 75
#define R_ARM_LDR_SB_G1 76
#define R_ARM_LDR_SB_G2 77
#define R_ARM_LDRS_SB_G0 78
#define R_ARM_LDRS_SB_G1 79
#define R_ARM_LDRS_SB_G2 80
#define R_ARM_LDC_SB_G0 81
#define R_ARM_LDC_SB_G1 82
#define R_ARM_LDC_SB_G2 83
#define R_ARM_MOVW_BREL_NC 84
#define R_ARM_MOVT_BREL 85
#define R_ARM_MOVW_BREL 86
#define R_ARM_THM_MOVW_BREL_NC 87
#define R_ARM_THM_MOVT_BREL 88
#define R_ARM_THM_MOVW_BREL 89
#define R_ARM_TLS_GOTDESC 90
#define R_ARM_TLS_CALL 91
#define R_ARM_TLS_DESCSEQ 92
#define R_ARM_THM_TLS_CALL 93
#define R_ARM_PLT32_ABS 94
#define R_ARM_GOT_ABS 95
#define R_ARM_GOT_PREL 96
#define R_ARM_GOT_BREL12 97
#define R_ARM_GOTOFF12 98
#define R_ARM_GOTRELAX 99
#define R_ARM_GNU_VTENTRY 100
#define R_ARM_GNU_VTINHERIT 101
#define R_ARM_THM_PC11 102
#define R_ARM_THM_PC9 103
#define R_ARM_TLS_GD32 104
#define R_ARM_TLS_LDM32 105
#define R_ARM_TLS_LDO32 106
#define R_ARM_TLS_IE32 107
#define R_ARM_TLS_LE32 108
#define R_ARM_TLS_LDO12 109
#define R_ARM_TLS_LE12 110
#define R_ARM_TLS_IE12GP 111
#define R_ARM_ME_TOO 128
#define R_ARM_THM_TLS_DESCSEQ 129
#define R_ARM_THM_TLS_DESCSEQ16 129
#define R_ARM_THM_TLS_DESCSEQ32 130
#define R_ARM_THM_GOT_BREL12 131
#define R_ARM_IRELATIVE 160
#define R_ARM_RXPC25 249
#define R_ARM_RSBREL32 250
#define R_ARM_THM_RPC22 251
#define R_ARM_RREL32 252
#define R_ARM_RABS22 253
#define R_ARM_RPC24 254
#define R_ARM_RBASE 255
#define R_ARM_NUM 256
#define EF_IA_64_MASKOS 0x0000000f
#define EF_IA_64_ABI64 0x00000010
#define EF_IA_64_ARCH 0xff000000
#define PT_IA_64_ARCHEXT (PT_LOPROC + 0)
#define PT_IA_64_UNWIND (PT_LOPROC + 1)
#define PT_IA_64_HP_OPT_ANOT (PT_LOOS + 0x12)
#define PT_IA_64_HP_HSL_ANOT (PT_LOOS + 0x13)
#define PT_IA_64_HP_STACK (PT_LOOS + 0x14)
#define PF_IA_64_NORECOV 0x80000000
#define SHT_IA_64_EXT (SHT_LOPROC + 0)
#define SHT_IA_64_UNWIND (SHT_LOPROC + 1)
#define SHF_IA_64_SHORT 0x10000000
#define SHF_IA_64_NORECOV 0x20000000
#define DT_IA_64_PLT_RESERVE (DT_LOPROC + 0)
#define DT_IA_64_NUM 1
#define R_IA64_NONE 0x00
#define R_IA64_IMM14 0x21
#define R_IA64_IMM22 0x22
#define R_IA64_IMM64 0x23
#define R_IA64_DIR32MSB 0x24
#define R_IA64_DIR32LSB 0x25
#define R_IA64_DIR64MSB 0x26
#define R_IA64_DIR64LSB 0x27
#define R_IA64_GPREL22 0x2a
#define R_IA64_GPREL64I 0x2b
#define R_IA64_GPREL32MSB 0x2c
#define R_IA64_GPREL32LSB 0x2d
#define R_IA64_GPREL64MSB 0x2e
#define R_IA64_GPREL64LSB 0x2f
#define R_IA64_LTOFF22 0x32
#define R_IA64_LTOFF64I 0x33
#define R_IA64_PLTOFF22 0x3a
#define R_IA64_PLTOFF64I 0x3b
#define R_IA64_PLTOFF64MSB 0x3e
#define R_IA64_PLTOFF64LSB 0x3f
#define R_IA64_FPTR64I 0x43
#define R_IA64_FPTR32MSB 0x44
#define R_IA64_FPTR32LSB 0x45
#define R_IA64_FPTR64MSB 0x46
#define R_IA64_FPTR64LSB 0x47
#define R_IA64_PCREL60B 0x48
#define R_IA64_PCREL21B 0x49
#define R_IA64_PCREL21M 0x4a
#define R_IA64_PCREL21F 0x4b
#define R_IA64_PCREL32MSB 0x4c
#define R_IA64_PCREL32LSB 0x4d
#define R_IA64_PCREL64MSB 0x4e
#define R_IA64_PCREL64LSB 0x4f
#define R_IA64_LTOFF_FPTR22 0x52
#define R_IA64_LTOFF_FPTR64I 0x53
#define R_IA64_LTOFF_FPTR32MSB 0x54
#define R_IA64_LTOFF_FPTR32LSB 0x55
#define R_IA64_LTOFF_FPTR64MSB 0x56
#define R_IA64_LTOFF_FPTR64LSB 0x57
#define R_IA64_SEGREL32MSB 0x5c
#define R_IA64_SEGREL32LSB 0x5d
#define R_IA64_SEGREL64MSB 0x5e
#define R_IA64_SEGREL64LSB 0x5f
#define R_IA64_SECREL32MSB 0x64
#define R_IA64_SECREL32LSB 0x65
#define R_IA64_SECREL64MSB 0x66
#define R_IA64_SECREL64LSB 0x67
#define R_IA64_REL32MSB 0x6c
#define R_IA64_REL32LSB 0x6d
#define R_IA64_REL64MSB 0x6e
#define R_IA64_REL64LSB 0x6f
#define R_IA64_LTV32MSB 0x74
#define R_IA64_LTV32LSB 0x75
#define R_IA64_LTV64MSB 0x76
#define R_IA64_LTV64LSB 0x77
#define R_IA64_PCREL21BI 0x79
#define R_IA64_PCREL22 0x7a
#define R_IA64_PCREL64I 0x7b
#define R_IA64_IPLTMSB 0x80
#define R_IA64_IPLTLSB 0x81
#define R_IA64_COPY 0x84
#define R_IA64_SUB 0x85
#define R_IA64_LTOFF22X 0x86
#define R_IA64_LDXMOV 0x87
#define R_IA64_TPREL14 0x91
#define R_IA64_TPREL22 0x92
#define R_IA64_TPREL64I 0x93
#define R_IA64_TPREL64MSB 0x96
#define R_IA64_TPREL64LSB 0x97
#define R_IA64_LTOFF_TPREL22 0x9a
#define R_IA64_DTPMOD64MSB 0xa6
#define R_IA64_DTPMOD64LSB 0xa7
#define R_IA64_LTOFF_DTPMOD22 0xaa
#define R_IA64_DTPREL14 0xb1
#define R_IA64_DTPREL22 0xb2
#define R_IA64_DTPREL64I 0xb3
#define R_IA64_DTPREL32MSB 0xb4
#define R_IA64_DTPREL32LSB 0xb5
#define R_IA64_DTPREL64MSB 0xb6
#define R_IA64_DTPREL64LSB 0xb7
#define R_IA64_LTOFF_DTPREL22 0xba
#define R_X86_64_NONE 0
#define R_X86_64_64 1
#define R_X86_64_PC32 2
#define R_X86_64_GOT32 3
#define R_X86_64_PLT32 4
#define R_X86_64_COPY 5
#define R_X86_64_GLOB_DAT 6
#define R_X86_64_JUMP_SLOT 7
#define R_X86_64_RELATIVE 8
#define R_X86_64_GOTPCREL 9
#define R_X86_64_32 10
#define R_X86_64_32S 11
#define R_X86_64_16 12
#define R_X86_64_PC16 13
#define R_X86_64_8 14
#define R_X86_64_PC8 15
#define R_X86_64_DTPMOD64 16
#define R_X86_64_DTPOFF64 17
#define R_X86_64_TPOFF64 18
#define R_X86_64_TLSGD 19
#define R_X86_64_TLSLD 20
#define R_X86_64_DTPOFF32 21
#define R_X86_64_GOTTPOFF 22
#define R_X86_64_TPOFF32 23
#define R_X86_64_PC64 24
#define R_X86_64_GOTOFF64 25
#define R_X86_64_GOTPC32 26
#define R_X86_64_GOT64 27
#define R_X86_64_GOTPCREL64 28
#define R_X86_64_GOTPC64 29
#define R_X86_64_GOTPLT64 30
#define R_X86_64_PLTOFF64 31
#define R_X86_64_SIZE32 32
#define R_X86_64_SIZE64 33
#define R_X86_64_GOTPC32_TLSDESC 34
#define R_X86_64_TLSDESC_CALL 35
#define R_X86_64_TLSDESC 36
#define R_X86_64_IRELATIVE 37
#define R_X86_64_RELATIVE64 38
#define R_X86_64_GOTPCRELX 41
#define R_X86_64_REX_GOTPCRELX 42
#define R_X86_64_NUM 43
// 13 "./minilib/headers/common/allheaders.h" 2
// 1 "./minilib/headers/common/./signal.h" 1
#define signal_h 
// 1 "./headers/linux_x64/sys/signal.h" 1
#define linux_x64_signal_h 
typedef long __band_t;
typedef union sigval {
  int sival_int;
  void *sival_ptr;
} sigval_t;
typedef struct siginfo {
  int32_t si_signo;
  int32_t si_errno;
  int32_t si_code;
  union {
    char __pad[128 - 2*sizeof(int) - sizeof(long)];
    struct {
      pid_t _pid;
      uid_t _uid;
    } _kill;
    struct {
      uint32_t _timer1;
      uint32_t _timer2;
    } _timer;
    struct {
      pid_t _pid;
      uid_t _uid;
      sigval_t _sigval;
    } _rt;
    struct {
      pid_t _pid;
      uid_t _uid;
      int32_t _status;
      clock_t _utime;
      clock_t _stime;
    } _sigchld;
    struct {
      void *_addr;
    } _sigfault;
    struct {
      __band_t _band;
      int32_t _fd;
    } _sigpoll;
  } _sifields;
} siginfo_t;
typedef struct __sigset_t { unsigned long sig; } sigset_t;
struct sigaction {
  void (*sa_handler)(int);
  unsigned long sa_flags;
  void (*restorer)(void);
  sigset_t sa_mask;
};
// 5 "./minilib/headers/common/./signal.h" 2
#define SIG_ERR ((void (*)(int))-1)
#define SIG_DFL ((void (*)(int)) 0)
#define SIG_IGN ((void (*)(int)) 1)
// 14 "./minilib/headers/common/allheaders.h" 2
// 1 "./minilib/headers/common/./dirent.h" 1
#define _DIRENT_H 
// 1 "./headers/common/features.h" 1
// 9 "./minilib/headers/common/./dirent.h" 2
#define __NEED_ino_t 
#define __NEED_off_t 
struct __dirstream
{
 off_t tell;
 int fd;
 int buf_pos;
 int buf_end;
 volatile int lock[1];
 char buf[2048];
};
typedef struct __dirstream DIR;
#define _DIRENT_HAVE_D_RECLEN 
#define _DIRENT_HAVE_D_OFF 
#define _DIRENT_HAVE_D_TYPE 
struct dirent {
 ino_t d_ino;
 off_t d_off;
 unsigned short d_reclen;
 char d_name[256];
};
#define d_fileno d_ino
// 15 "./minilib/headers/common/allheaders.h" 2
// 1 "./minilib/headers/common/./endian.h" 1
// 16 "./minilib/headers/common/allheaders.h" 2
// 1 "./minilib/headers/common/./termios.h" 1
// 17 "./minilib/headers/common/allheaders.h" 2
// 1 "./minilib/headers/common/./stdint.h" 1
// 18 "./minilib/headers/common/allheaders.h" 2
// 1 "./minilib/headers/common/./features.h" 1
// 19 "./minilib/headers/common/allheaders.h" 2
// 52 "./minilib.h" 2
// 1 "./minilib/headers/linux_x64/allheaders.h" 1
#define linux_x64_allheaders_h 
// 1 "./minilib/headers/linux_x64/./sys/syscall.h" 1
#define _ASM_X86_UNISTD_64_H 1
#define __NR_read 0
#define __NR_write 1
#define __NR_open 2
#define __NR_close 3
#define __NR_stat 4
#define __NR_fstat 5
#define __NR_lstat 6
#define __NR_poll 7
#define __NR_lseek 8
#define __NR_mmap 9
#define __NR_mprotect 10
#define __NR_munmap 11
#define __NR_brk 12
#define __NR_rt_sigaction 13
#define __NR_rt_sigprocmask 14
#define __NR_rt_sigreturn 15
#define __NR_ioctl 16
#define __NR_pread64 17
#define __NR_pwrite64 18
#define __NR_readv 19
#define __NR_writev 20
#define __NR_access 21
#define __NR_pipe 22
#define __NR_select 23
#define __NR_sched_yield 24
#define __NR_mremap 25
#define __NR_msync 26
#define __NR_mincore 27
#define __NR_madvise 28
#define __NR_shmget 29
#define __NR_shmat 30
#define __NR_shmctl 31
#define __NR_dup 32
#define __NR_dup2 33
#define __NR_pause 34
#define __NR_nanosleep 35
#define __NR_getitimer 36
#define __NR_alarm 37
#define __NR_setitimer 38
#define __NR_getpid 39
#define __NR_sendfile 40
#define __NR_socket 41
#define __NR_connect 42
#define __NR_accept 43
#define __NR_sendto 44
#define __NR_recvfrom 45
#define __NR_sendmsg 46
#define __NR_recvmsg 47
#define __NR_shutdown 48
#define __NR_bind 49
#define __NR_listen 50
#define __NR_getsockname 51
#define __NR_getpeername 52
#define __NR_socketpair 53
#define __NR_setsockopt 54
#define __NR_getsockopt 55
#define __NR_clone 56
#define __NR_fork 57
#define __NR_vfork 58
#define __NR_execve 59
#define __NR_exit 60
#define __NR_wait4 61
#define __NR_kill 62
#define __NR_uname 63
#define __NR_semget 64
#define __NR_semop 65
#define __NR_semctl 66
#define __NR_shmdt 67
#define __NR_msgget 68
#define __NR_msgsnd 69
#define __NR_msgrcv 70
#define __NR_msgctl 71
#define __NR_fcntl 72
#define __NR_flock 73
#define __NR_fsync 74
#define __NR_fdatasync 75
#define __NR_truncate 76
#define __NR_ftruncate 77
#define __NR_getdents 78
#define __NR_getcwd 79
#define __NR_chdir 80
#define __NR_fchdir 81
#define __NR_rename 82
#define __NR_mkdir 83
#define __NR_rmdir 84
#define __NR_creat 85
#define __NR_link 86
#define __NR_unlink 87
#define __NR_symlink 88
#define __NR_readlink 89
#define __NR_chmod 90
#define __NR_fchmod 91
#define __NR_chown 92
#define __NR_fchown 93
#define __NR_lchown 94
#define __NR_umask 95
#define __NR_gettimeofday 96
#define __NR_getrlimit 97
#define __NR_getrusage 98
#define __NR_sysinfo 99
#define __NR_times 100
#define __NR_ptrace 101
#define __NR_getuid 102
#define __NR_syslog 103
#define __NR_getgid 104
#define __NR_setuid 105
#define __NR_setgid 106
#define __NR_geteuid 107
#define __NR_getegid 108
#define __NR_setpgid 109
#define __NR_getppid 110
#define __NR_getpgrp 111
#define __NR_setsid 112
#define __NR_setreuid 113
#define __NR_setregid 114
#define __NR_getgroups 115
#define __NR_setgroups 116
#define __NR_setresuid 117
#define __NR_getresuid 118
#define __NR_setresgid 119
#define __NR_getresgid 120
#define __NR_getpgid 121
#define __NR_setfsuid 122
#define __NR_setfsgid 123
#define __NR_getsid 124
#define __NR_capget 125
#define __NR_capset 126
#define __NR_rt_sigpending 127
#define __NR_rt_sigtimedwait 128
#define __NR_rt_sigqueueinfo 129
#define __NR_rt_sigsuspend 130
#define __NR_sigaltstack 131
#define __NR_utime 132
#define __NR_mknod 133
#define __NR_uselib 134
#define __NR_personality 135
#define __NR_ustat 136
#define __NR_statfs 137
#define __NR_fstatfs 138
#define __NR_sysfs 139
#define __NR_getpriority 140
#define __NR_setpriority 141
#define __NR_sched_setparam 142
#define __NR_sched_getparam 143
#define __NR_sched_setscheduler 144
#define __NR_sched_getscheduler 145
#define __NR_sched_get_priority_max 146
#define __NR_sched_get_priority_min 147
#define __NR_sched_rr_get_interval 148
#define __NR_mlock 149
#define __NR_munlock 150
#define __NR_mlockall 151
#define __NR_munlockall 152
#define __NR_vhangup 153
#define __NR_modify_ldt 154
#define __NR_pivot_root 155
#define __NR__sysctl 156
#define __NR_prctl 157
#define __NR_arch_prctl 158
#define __NR_adjtimex 159
#define __NR_setrlimit 160
#define __NR_chroot 161
#define __NR_sync 162
#define __NR_acct 163
#define __NR_settimeofday 164
#define __NR_mount 165
#define __NR_umount2 166
#define __NR_swapon 167
#define __NR_swapoff 168
#define __NR_reboot 169
#define __NR_sethostname 170
#define __NR_setdomainname 171
#define __NR_iopl 172
#define __NR_ioperm 173
#define __NR_create_module 174
#define __NR_init_module 175
#define __NR_delete_module 176
#define __NR_get_kernel_syms 177
#define __NR_query_module 178
#define __NR_quotactl 179
#define __NR_nfsservctl 180
#define __NR_getpmsg 181
#define __NR_putpmsg 182
#define __NR_afs_syscall 183
#define __NR_tuxcall 184
#define __NR_security 185
#define __NR_gettid 186
#define __NR_readahead 187
#define __NR_setxattr 188
#define __NR_lsetxattr 189
#define __NR_fsetxattr 190
#define __NR_getxattr 191
#define __NR_lgetxattr 192
#define __NR_fgetxattr 193
#define __NR_listxattr 194
#define __NR_llistxattr 195
#define __NR_flistxattr 196
#define __NR_removexattr 197
#define __NR_lremovexattr 198
#define __NR_fremovexattr 199
#define __NR_tkill 200
#define __NR_time 201
#define __NR_futex 202
#define __NR_sched_setaffinity 203
#define __NR_sched_getaffinity 204
#define __NR_set_thread_area 205
#define __NR_io_setup 206
#define __NR_io_destroy 207
#define __NR_io_getevents 208
#define __NR_io_submit 209
#define __NR_io_cancel 210
#define __NR_get_thread_area 211
#define __NR_lookup_dcookie 212
#define __NR_epoll_create 213
#define __NR_epoll_ctl_old 214
#define __NR_epoll_wait_old 215
#define __NR_remap_file_pages 216
#define __NR_getdents64 217
#define __NR_set_tid_address 218
#define __NR_restart_syscall 219
#define __NR_semtimedop 220
#define __NR_fadvise64 221
#define __NR_timer_create 222
#define __NR_timer_settime 223
#define __NR_timer_gettime 224
#define __NR_timer_getoverrun 225
#define __NR_timer_delete 226
#define __NR_clock_settime 227
#define __NR_clock_gettime 228
#define __NR_clock_getres 229
#define __NR_clock_nanosleep 230
#define __NR_exit_group 231
#define __NR_epoll_wait 232
#define __NR_epoll_ctl 233
#define __NR_tgkill 234
#define __NR_utimes 235
#define __NR_vserver 236
#define __NR_mbind 237
#define __NR_set_mempolicy 238
#define __NR_get_mempolicy 239
#define __NR_mq_open 240
#define __NR_mq_unlink 241
#define __NR_mq_timedsend 242
#define __NR_mq_timedreceive 243
#define __NR_mq_notify 244
#define __NR_mq_getsetattr 245
#define __NR_kexec_load 246
#define __NR_waitid 247
#define __NR_add_key 248
#define __NR_request_key 249
#define __NR_keyctl 250
#define __NR_ioprio_set 251
#define __NR_ioprio_get 252
#define __NR_inotify_init 253
#define __NR_inotify_add_watch 254
#define __NR_inotify_rm_watch 255
#define __NR_migrate_pages 256
#define __NR_openat 257
#define __NR_mkdirat 258
#define __NR_mknodat 259
#define __NR_fchownat 260
#define __NR_futimesat 261
#define __NR_newfstatat 262
#define __NR_unlinkat 263
#define __NR_renameat 264
#define __NR_linkat 265
#define __NR_symlinkat 266
#define __NR_readlinkat 267
#define __NR_fchmodat 268
#define __NR_faccessat 269
#define __NR_pselect6 270
#define __NR_ppoll 271
#define __NR_unshare 272
#define __NR_set_robust_list 273
#define __NR_get_robust_list 274
#define __NR_splice 275
#define __NR_tee 276
#define __NR_sync_file_range 277
#define __NR_vmsplice 278
#define __NR_move_pages 279
#define __NR_utimensat 280
#define __NR_epoll_pwait 281
#define __NR_signalfd 282
#define __NR_timerfd_create 283
#define __NR_eventfd 284
#define __NR_fallocate 285
#define __NR_timerfd_settime 286
#define __NR_timerfd_gettime 287
#define __NR_accept4 288
#define __NR_signalfd4 289
#define __NR_eventfd2 290
#define __NR_epoll_create1 291
#define __NR_dup3 292
#define __NR_pipe2 293
#define __NR_inotify_init1 294
#define __NR_preadv 295
#define __NR_pwritev 296
#define __NR_rt_tgsigqueueinfo 297
#define __NR_perf_event_open 298
#define __NR_recvmmsg 299
#define __NR_fanotify_init 300
#define __NR_fanotify_mark 301
#define __NR_prlimit64 302
#define __NR_name_to_handle_at 303
#define __NR_open_by_handle_at 304
#define __NR_clock_adjtime 305
#define __NR_syncfs 306
#define __NR_sendmmsg 307
#define __NR_setns 308
#define __NR_getcpu 309
#define __NR_process_vm_readv 310
#define __NR_process_vm_writev 311
#define __NR_kcmp 312
#define __NR_finit_module 313
#define __NR_sched_setattr 314
#define __NR_sched_getattr 315
#define __NR_renameat2 316
#define __NR_seccomp 317
#define __NR_getrandom 318
#define __NR_memfd_create 319
#define __NR_kexec_file_load 320
#define __NR_bpf 321
#define __NR_execveat 322
#define __NR_userfaultfd 323
#define __NR_membarrier 324
#define __NR_mlock2 325
#define __NR_copy_file_range 326
#define __NR_preadv2 327
#define __NR_pwritev2 328
#define __NR_pkey_mprotect 329
#define __NR_pkey_alloc 330
#define __NR_pkey_free 331
#define __NR_statx 332
// 4 "./minilib/headers/linux_x64/allheaders.h" 2
// 1 "./minilib/headers/linux_x64/./sys/signal.h" 1
// 5 "./minilib/headers/linux_x64/allheaders.h" 2
// 1 "./minilib/headers/linux_x64/./sys/utsname.h" 1
#define _LINUX_UTSNAME_H 
#define __OLD_UTS_LEN 8
struct oldold_utsname {
        char sysname[9];
        char nodename[9];
        char release[9];
        char version[9];
        char machine[9];
};
#define __NEW_UTS_LEN 64
struct old_utsname {
        char sysname[65];
        char nodename[65];
        char release[65];
        char version[65];
        char machine[65];
};
struct new_utsname {
        char sysname[64 + 1];
        char nodename[64 + 1];
        char release[64 + 1];
        char version[64 + 1];
        char machine[64 + 1];
        char domainname[64 + 1];
};
// 6 "./minilib/headers/linux_x64/allheaders.h" 2
// 1 "./minilib/headers/linux_x64/./bits/stat.h" 1
// 7 "./minilib/headers/linux_x64/allheaders.h" 2
// 1 "./minilib/headers/linux_x64/./fcntl.h" 1
#define linux_fcntl_h 
#define DN_ACCESS 0x00000001
#define DN_MODIFY 0x00000002
#define DN_CREATE 0x00000004
#define DN_DELETE 0x00000008
#define DN_RENAME 0x00000010
#define DN_ATTRIB 0x00000020
#define DN_MULTISHOT 0x80000000
#define AT_FDCWD -100
#define AT_SYMLINK_NOFOLLOW 0x100
#define AT_REMOVEDIR 0x200
#define AT_SYMLINK_FOLLOW 0x400
#define AT_NO_AUTOMOUNT 0x800
#define AT_EMPTY_PATH 0x1000
#define AT_STATX_SYNC_TYPE 0x6000
#define AT_STATX_SYNC_AS_STAT 0x0000
#define AT_STATX_FORCE_SYNC 0x2000
#define AT_STATX_DONT_SYNC 0x4000
#define AT_RECURSIVE 0x8000
// 8 "./minilib/headers/linux_x64/allheaders.h" 2
// 1 "./minilib/headers/linux_x64/./mount.h" 1
#define _LINUX_MOUNT_H 
// 11 "./minilib/headers/linux_x64/./mount.h"
#define MS_RDONLY 1
#define MS_NOSUID 2
#define MS_NODEV 4
#define MS_NOEXEC 8
#define MS_SYNCHRONOUS 16
#define MS_REMOUNT 32
#define MS_MANDLOCK 64
#define MS_DIRSYNC 128
#define MS_NOATIME 1024
#define MS_NODIRATIME 2048
#define MS_BIND 4096
#define MS_MOVE 8192
#define MS_REC 16384
#define MS_VERBOSE 32768
#define MS_SILENT 32768
#define MS_POSIXACL (1<<16)
#define MS_UNBINDABLE (1<<17)
#define MS_PRIVATE (1<<18)
#define MS_SLAVE (1<<19)
#define MS_SHARED (1<<20)
#define MS_RELATIME (1<<21)
#define MS_KERNMOUNT (1<<22)
#define MS_I_VERSION (1<<23)
#define MS_STRICTATIME (1<<24)
#define MS_LAZYTIME (1<<25)
#define MS_SUBMOUNT (1<<26)
#define MS_NOREMOTELOCK (1<<27)
#define MS_NOSEC (1<<28)
#define MS_BORN (1<<29)
#define MS_ACTIVE (1<<30)
#define MS_NOUSER (1<<31)
#define MS_RMT_MASK (MS_RDONLY|MS_SYNCHRONOUS|MS_MANDLOCK|MS_I_VERSION| MS_LAZYTIME)
#define MS_MGC_VAL 0xC0ED0000
#define MS_MGC_MSK 0xffff0000
#define OPEN_TREE_CLONE 1
#define OPEN_TREE_CLOEXEC O_CLOEXEC
#define MOVE_MOUNT_F_SYMLINKS 0x00000001
#define MOVE_MOUNT_F_AUTOMOUNTS 0x00000002
#define MOVE_MOUNT_F_EMPTY_PATH 0x00000004
#define MOVE_MOUNT_T_SYMLINKS 0x00000010
#define MOVE_MOUNT_T_AUTOMOUNTS 0x00000020
#define MOVE_MOUNT_T_EMPTY_PATH 0x00000040
#define MOVE_MOUNT__MASK 0x00000077
#define FSOPEN_CLOEXEC 0x00000001
#define FSPICK_CLOEXEC 0x00000001
#define FSPICK_SYMLINK_NOFOLLOW 0x00000002
#define FSPICK_NO_AUTOMOUNT 0x00000004
#define FSPICK_EMPTY_PATH 0x00000008
enum fsconfig_command {
 FSCONFIG_SET_FLAG = 0,
 FSCONFIG_SET_STRING = 1,
 FSCONFIG_SET_BINARY = 2,
 FSCONFIG_SET_PATH = 3,
 FSCONFIG_SET_PATH_EMPTY = 4,
 FSCONFIG_SET_FD = 5,
 FSCONFIG_CMD_CREATE = 6,
 FSCONFIG_CMD_RECONFIGURE = 7,
};
#define FSMOUNT_CLOEXEC 0x00000001
#define MOUNT_ATTR_RDONLY 0x00000001
#define MOUNT_ATTR_NOSUID 0x00000002
#define MOUNT_ATTR_NODEV 0x00000004
#define MOUNT_ATTR_NOEXEC 0x00000008
#define MOUNT_ATTR__ATIME 0x00000070
#define MOUNT_ATTR_RELATIME 0x00000000
#define MOUNT_ATTR_NOATIME 0x00000010
#define MOUNT_ATTR_STRICTATIME 0x00000020
#define MOUNT_ATTR_NODIRATIME 0x00000080
#define MNT_FORCE 1
#define MNT_DETACH 2
#define MNT_EXPIRE 4
#define UMOUNT_NOFOLLOW 8
// 9 "./minilib/headers/linux_x64/allheaders.h" 2
// 1 "./minilib/headers/linux_x64/./reboot.h" 1
#define _LINUX_REBOOT_H 
#define LINUX_REBOOT_MAGIC1 0xfee1dead
#define LINUX_REBOOT_MAGIC2 672274793
#define LINUX_REBOOT_MAGIC2A 85072278
#define LINUX_REBOOT_MAGIC2B 369367448
#define LINUX_REBOOT_MAGIC2C 537993216
// 29 "./minilib/headers/linux_x64/./reboot.h"
#define LINUX_REBOOT_CMD_RESTART 0x01234567
#define LINUX_REBOOT_CMD_HALT 0xCDEF0123
#define LINUX_REBOOT_CMD_CAD_ON 0x89ABCDEF
#define LINUX_REBOOT_CMD_CAD_OFF 0x00000000
#define LINUX_REBOOT_CMD_POWER_OFF 0x4321FEDC
#define LINUX_REBOOT_CMD_RESTART2 0xA1B2C3D4
#define LINUX_REBOOT_CMD_SW_SUSPEND 0xD000FCE2
#define LINUX_REBOOT_CMD_KEXEC 0x45584543
// 10 "./minilib/headers/linux_x64/allheaders.h" 2
// 53 "./minilib.h" 2
// 1 "./minilib/include/globaldefs.h" 1
#define globaldefs_h 
#define POINTER unsigned long int
#define uint32_t unsigned int
#define uint8_t unsigned char
#define PATH_MAX 4096
#define FOPEN_MAX 16
#define SEEK_SET 0
#define SEEK_CUR 1
#define SEEK_END 2
#define SEEK_MAX SEEK_END
#define ENOENT 2
#define SIG_BLOCK 0
#define SIG_UNBLOCK 1
#define SIG_SETMASK 2
#define mini_FOPEN_MAX 16
#define NULL 0
// 57 "./minilib/include/globaldefs.h"
struct utimbuf{
  time_t actime;
  time_t modtime;
};
#define AT_STATX_SYNC_AS_STAT 0x0000
#define AT_NO_AUTOMOUNT 0x800
#define AT_EMPTY_PATH 0x1000
#define AT_STATX_SYNC_TYPE 0x6000
#define AT_STATX_FORCE_SYNC 0x2000
#define AT_STATX_DONT_SYNC 0x4000
#define AT_RECURSIVE 0x8000
#define BUFSIZ 1024
typedef int FILE;
// 91 "./minilib/include/globaldefs.h"
#define FEOF_FLAG 0x800000
#define ERR_FLAG 0x400000
#define FLAG_MASK 0xc00000
#define FD_MASK 0x3fffff
#define UNGETC_MASK 0xff000000
typedef union { FILE *F; int i, fd;} mfl_union;
// 110 "./minilib/include/globaldefs.h"
#define EOF (-1)
#define stdin &mlgl->stream[0]
#define stdout &mlgl->stream[1]
#define stderr &mlgl->stream[2]
// 137 "./minilib/include/globaldefs.h"
#define STDIN_FILENO 0
#define STDOUT_FILENO 1
#define STDERR_FILENO 2
// 1 "./headers/common/bits/ioctl.h" 1
// 144 "./minilib/include/globaldefs.h" 2
// 1 "./headers/linux_x64/sys/utsname.h" 1
// 145 "./minilib/include/globaldefs.h" 2
// 1 "./headers/common/sys/termios.h" 1
// 146 "./minilib/include/globaldefs.h" 2
typedef struct { int quot; int rem; } div_t;
typedef struct { long int quot; long int rem; } ldiv_t;
typedef void (*sighandler_t)(int);
// 172 "./minilib/include/globaldefs.h"
#define FD_SETSIZE 1024
  typedef unsigned long fd_mask;
  typedef struct
  {
      unsigned long fds_bits[1024 / 8 / sizeof(long)];
  } fd_set;
#define FD_ZERO(s) do { int __i; unsigned long *__b=(s)->fds_bits; for(__i=sizeof (fd_set)/sizeof (long); __i; __i--) *__b++=0; } while(0)
#define FD_SET(d,s) ((s)->fds_bits[(d)/(8*sizeof(long))] |= (1UL<<((d)%(8*sizeof(long)))))
#define FD_CLR(d,s) ((s)->fds_bits[(d)/(8*sizeof(long))] &= ~(1UL<<((d)%(8*sizeof(long)))))
#define FD_ISSET(d,s) !!((s)->fds_bits[(d)/(8*sizeof(long))] & (1UL<<((d)%(8*sizeof(long)))))
#define LOGIN_NAME_MAX 256
#define HOST_NAME_MAX 64
#define EXIT_SUCCESS 0
#define EXIT_FAILURE 1
#define F_OK 0
#define X_OK 1
#define W_OK 2
#define R_OK 4
#define WNOHANG 1
#define WUNTRACED 2
#define WSTOPPED 2
#define WEXITED 4
#define WCONTINUED 8
#define WNOWAIT 0x1000000
#define WEXITSTATUS(s) (((s) & 0xff00) >> 8)
#define WTERMSIG(s) ((s) & 0x7f)
#define WSTOPSIG(s) WEXITSTATUS(s)
#define WCOREDUMP(s) ((s) & 0x80)
#define WIFEXITED(s) (!WTERMSIG(s))
#define WIFSTOPPED(s) ((short)((((s)&0xffff)*0x10001)>>8) > 0x7f00)
#define WIFSIGNALED(s) (((s)&0xffff)-1U < 0xffu)
#define WIFCONTINUED(s) ((s) == 0xffff)
// 55 "./minilib.h" 2
// 1 "./minilib/include/minilib_global.h" 1
#define minilib_global_h 
// 14 "./minilib/include/minilib_global.h"
#define mini_bufsize mini_buf
typedef struct {
  int errno;
  int sysret;
  int srand;
  int pstream;
  int mbufsize;
  int align[1];
  char **environ;
  int stream[16];
  union {
    int ibuf[(4096>>2)];
    char mbuf[4096];
  };
} minilib_globals;
// 56 "./minilib/include/minilib_global.h"
static void __attribute__((noipa))optimization_fence(void*p){
};
extern minilib_globals *mlgl;
extern minilib_globals __mlgl;
// 90 "./minilib/include/minilib_global.h"
extern char **environ;
// 56 "./minilib.h" 2
// 1 "./minilib/include/ctype.h" 1
#define ctype_h 
// 15 "./minilib/include/ctype.h"
#define isalpha(a) (0 ? 1 : (((unsigned)(a)|32)-'a') < 26)
#define isdigit(a) (0 ? 1 : ((unsigned)(a)-'0') < 10)
#define islower(a) (0 ? 1 : ((unsigned)(a)-'a') < 26)
#define isupper(a) (0 ? 1 : ((unsigned)(a)-'A') < 26)
#define isgraph(a) (0 ? 1 : ((unsigned)(a)-0x21) < 0x5e)
#define _tolower(a) ((a)|0x20)
#define tolower(a) ((a)|0x20)
#define _toupper(a) ((a)&0x5f)
#define toupper(a) ((a)&0x5f)
#define isascii(a) (0 ? isascii(a) : (unsigned)(a) < 128)
// 57 "./minilib.h" 2
// 1 "./minilib/include/syscall.h" 1
#define minilib_syscall_h 
// 25 "./minilib/include/syscall.h"
#define NCONST 0
#define SCALL(call) __NR_ ##call
#define __SYSCALL(call) __NR ##call
// 1 "./headers/linux_x64/sys/syscall.h" 1
// 31 "./minilib/include/syscall.h" 2
// 56 "./minilib/include/syscall.h"
#define __callend : "memory","rcx", "r11" )
#define __SYSCALL_ASM(ret,call) asm volatile ("syscall" : "=a" (ret) : "a" ( (call | NCONST ) )
// 72 "./minilib/include/syscall.h"
#define syscall1(ret,call,a1) __SYSCALL_ASM(ret,call) , "D" (a1) __callend
#define syscall2(ret,call,a1,a2) __SYSCALL_ASM(ret,call) , "D" (a1), "S" (a2) __callend
#define syscall3(ret,call,a1,a2,a3) __SYSCALL_ASM(ret,call) , "D" (a1), "S" (a2), "d" (a3) __callend
#define syscall4(ret,call,a1,a2,a3,a4) register long int r10 asm ("r10") = a4 ; __SYSCALL_ASM(ret,call) , "D" (a1), "S" (a2), "d" (a3), "r" (r10) __callend
#define syscall5(ret,call,a1,a2,a3,a4,a5) register long int r10 asm ("r10") = a4 ; register long int r8 asm ("r8") = a5 ; __SYSCALL_ASM(ret,call) , "D" (a1), "S" (a2), "d" (a3), "r" (r10), "r" (r8) __callend
#define syscall6(ret,call,a1,a2,a3,a4,a5,a6) register long int r10 asm ("r10") = a4 ; register long int r8 asm ("r8") = a5 ; register long int r9 asm ("r9") = a6; __SYSCALL_ASM(ret,call) , "D" (a1), "S" (a2), "d" (a3), "r" (r10), "r" (r8), "r" (r9) __callend
#define syscall0_ret(call) __SYSCALL_ASM(sysret,call)
#define syscall1_ret(call) syscall0_ret(call) , "D" (a1)
#define syscall2_ret(call) syscall1_ret(call) , "S" (a2)
#define syscall3_ret(call) syscall2_ret(call) , "d" (a3)
#define syscall4_ret(call) register long int r10 asm("r10")= a4; syscall3_ret(call) , "r" (r10)
#define syscall5_ret(call) register long int r10 asm("r10")= a4; register long int r8 asm("r8")= a5 ; syscall3_ret(call) , "r" (r8)
#define syscall6_ret(call) register long int r10 asm("r10")= a4; register long int r8 asm("r8")= a5 ; register long int r9 asm("r9")=a6; syscall3_ret(call) , "r" (r8)
// 139 "./minilib/include/syscall.h"
#define __DO_syscall(n,...) syscall ##n ##_ret( __VA_ARGS__ ) __callend
// 225 "./minilib/include/syscall.h"
#define REAL_define_syscall(name,argcount,...) int volatile name( __VA_ARGS__ );
#define SYSREAL_define_syscall(name,argcount,...) int volatile ksys ##name( __VA_ARGS__ );
// 256 "./minilib/include/syscall.h"
#define REAL_define_syscallret(name,ret,argcount,...) inline int volatile __attribute__((always_inline)) name( __VA_ARGS__ ){ __DO_syscall( argcount, SCALL(name)); if ( sysret<0 ){ errno = -sysret; return(-1);} return(ret); }
// 266 "./minilib/include/syscall.h"
#define DEF_syscall(...) 
#define DEF_syscallret(...) 
// 58 "./minilib.h" 2
// 1 "./minilib/include/syscall_stubs.h" 1
#define syscall_stubs_h 
// 18 "./minilib/include/syscall_stubs.h"
extern int errno;
extern int sysret;
struct stat;
struct timeval;
struct timezone;
typedef unsigned long u64;
typedef unsigned long __u64;
typedef unsigned int u32;
typedef unsigned char __s32;
typedef long aio_context_t;
typedef long key_serial_t;
typedef long loff_t;
typedef long qid_t;
typedef long mqd_t;
typedef long stack_t;
typedef long umode_t;
typedef long cap_user_data_t;
typedef long cap_user_header_t;
typedef long semun_u;
struct sockaddr;
struct iovcc;
struct rusage;
struct file_handle;
struct utimbuf;
struct sched_attr;
struct sched_param;
struct itimerspec;
struct kexec_segment;
struct task_struct;
struct msghdr;
struct iocb;
struct io_event;
struct linux_dirent64;
struct pt_regs;
struct perf_event_attr;
struct __sysctl_args;
struct timex;
struct msgbuf;
struct pollfd;
struct getcpu_cache;
struct bpf_attr;
struct shmid_ds;
struct epoll_event;
struct mq_attr;
struct poll_fd;
struct mq_attr;
struct sembuf;
struct statfs;
struct sysinfo;
struct rlimit;
struct ustat;
struct itimerval;
struct linux_dirent;
struct robust_list_head;
struct sigevent;
struct siginfo;
struct bpf_attr;
struct msqid_ds;
struct rlimit64;
struct sigaction;
struct mmsghdr;
struct msqid_ds;
// 97 "./minilib/include/syscall_stubs.h"
// 202 "./minilib/include/syscall_stubs.h"
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wint-conversion"
int volatile umount2( const char *a1, int a2 );
int volatile fchmod( unsigned int a1, mode_t a2 );
int volatile setitimer( int a1, struct itimerval *a2, struct itimerval *a3 );
int volatile fcntl( unsigned int a1, unsigned int a2, unsigned long a3 );
int volatile getpgrp( );
REAL_define_syscall_noopt(rt_sigaction,4, int a1, const struct sigaction *a2, struct sigaction *a3, long a4)
int volatile brk( unsigned long a1 );
int volatile close( int a1 );
int volatile setgid( gid_t a1 );
int volatile dup2( int a1, int a2 );
int volatile stat( const char* a1, struct stat* a2 );
int volatile read( int a1, void *a2, int a3 );
int volatile rename( const char* a1, const char* a2 );
int volatile kill( pid_t a1, int a2 );
int volatile getcwd( char *a1, unsigned long a2 );
int volatile mknod( const char *a1, umode_t a2, unsigned a3 );
int volatile write( int a1, const void *a2, int a3 );
int volatile symlink( const char *a1, const char *a2 );
int volatile chroot( const char *a1 );
int volatile pipe( int *a1 );
REAL_define_syscall_noopt(reboot,4, int a1, int a2, unsigned int a3, void *a4)
int volatile dup( int a1 );
int volatile vhangup( );
int volatile rmdir( const char *a1 );
int volatile getpid( );
int volatile setuid( uid_t a1 );
int volatile fchown( unsigned int a1, uid_t a2, gid_t a3 );
int volatile gettimeofday( struct timeval *a1, struct timezone *a2 );
int volatile dup3( int a1, int a2, int a3 );
int volatile pivot_root( const char *a1, const char *a2 );
int volatile setpgid( pid_t a1, pid_t a2 );
int volatile utime( const char *a1, struct utimbuf *a2 );
int volatile fsync( int a1 );
int volatile access( const char *a1, int a2 );
int volatile readahead( int a1, loff_t a2, long a3 );
int volatile lseek( unsigned int a1, int a2, int a3 );
int volatile chmod( const char *a1, mode_t a2 );
int volatile getppid( );
int volatile unlink( const char* a1 );
inline int volatile __attribute__((always_inline)) mprotect( unsigned long int *a1, unsigned long int a2, int a3 ){ asm volatile ("syscall" : "=a" (sysret) : "a" ( (10 | 0 ) ) , "D" (a1) , "S" (a2) , "d" (a3) : "memory","rcx", "r11" ); if ( sysret<0 ){ errno = -sysret; return(-1);} return(*a1); }
REAL_define_syscall_noopt(wait4,4, pid_t a1, int *a2, int a3, struct rusage *a4)
int volatile vfork( );
int volatile link( const char *a1, const char *a2 );
int volatile getitimer( int a1, struct itimerval *a2 );
int volatile umask( int a1 );
int volatile chdir( const char* a1 );
REAL_define_syscall_noopt(mount,5, char *a1, char *a2, char *a3, unsigned long a4, void *a5)
int volatile getgid( );
REAL_define_syscall_noopt(sendfile,4, int a1, int a2, off_t *a3, long a4)
int volatile fstat( int a1, struct stat* a2 );
int volatile rt_sigreturn( unsigned long a1 );
int volatile ftruncate( unsigned int a1, unsigned int a2 );
int volatile execve( const char *a1, char* const* a2, char* const* a3 );
int volatile setsid( );
int volatile mkdir( const char *a1, int a2 );
REAL_define_syscall_noopt(rt_sigprocmask,4, int a1, sigset_t *a2, sigset_t *a3, long a4)
int volatile chown( const char *a1, uid_t a2, gid_t a3 );
int volatile uname( struct old_utsname *a1 );
int volatile getdents( unsigned int a1, struct dirent *a2, unsigned int a3 );
int volatile time( unsigned int *a1 );
int volatile fork( );
REAL_define_syscall_noopt(execveat,5, int a1, const char *a2, char* const* a3, char* const* a4, int a5)
int volatile getuid( );
int volatile sync( );
int volatile nanosleep( struct timespec *a1, struct timespec *a2 );
SYSREAL_define_syscall_noopt(_rt_sigaction,4, int a1, const struct sigaction *a2, struct sigaction *a3, long a4)
SYSREAL_define_syscall_noopt(_reboot,4, int a1, int a2, unsigned int a3, void *a4)
SYSREAL_define_syscall_noopt(_mknodat,4, int a1, const char *a2, int a3, unsigned a4)
int volatile ksys_dup( unsigned int a1 );
int volatile ksys_fstatfs( unsigned int a1, struct statfs *a2 );
int volatile ksys_vfork( );
int volatile ksys_setitimer( int a1, struct itimerval *a2, struct itimerval *a3 );
int volatile ksys_sched_setparam( pid_t a1, struct sched_param *a2 );
int volatile ksys_open( const char *a1, int a2, int a3 );
int volatile ksys_inotify_add_watch( int a1, const char *a2, u32 a3 );
int volatile ksys_getcpu( unsigned *a1, unsigned *a2, struct getcpu_cache *a3 );
int volatile ksys_link( const char *a1, const char *a2 );
SYSREAL_define_syscall_noopt(_lsetxattr,5, const char *a1, const char *a2, const void *a3, long a4, int a5)
int volatile ksys_pipe2( int *a1, int a2 );
SYSREAL_define_syscall_noopt(_sync_file_range,4, long a1, loff_t a2, loff_t a3, long a4)
SYSREAL_define_syscall_noopt(_rt_sigtimedwait,4, const sigset_t *a1, siginfo_t *a2, const struct timespec *a3, long a4)
int volatile ksys_clock_adjtime( clockid_t a1, struct timex *a2 );
int volatile ksys_mknod( const char *a1, umode_t a2, unsigned a3 );
int volatile ksys_accept( int a1, struct sockaddr *a2, int *a3 );
SYSREAL_define_syscall_noopt(_sendmmsg,4, int a1, struct mmsghdr *a2, unsigned int a3, unsigned int a4)
int volatile ksys_acct( const char *a1 );
int volatile ksys_syncfs( int a1 );
int volatile ksys_sched_rr_get_interval( pid_t a1, struct timespec *a2 );
int volatile ksys_unlinkat( int a1, const char *a2, int a3 );
int volatile ksys_fork( );
SYSREAL_define_syscall_noopt(_sendto,6, int a1, void *a2, long a3, unsigned a4, struct sockaddr *a5, int a6)
int volatile ksys_iopl( unsigned int a1, struct pt_regs *a2 );
SYSREAL_define_syscall_noopt(_splice,6, int a1, loff_t *a2, int a3, loff_t *a4, long a5, unsigned int a6)
int volatile ksys_munlock( unsigned long a1, long a2 );
int volatile ksys_fanotify_init( unsigned int a1, unsigned int a2 );
int volatile ksys_adjtimex( struct timex *a1 );
int volatile ksys_sched_setattr( pid_t a1, struct sched_attr *a2, unsigned int a3 );
int volatile ksys_rmdir( const char *a1 );
int volatile ksys_setrlimit( unsigned int a1, struct rlimit *a2 );
int volatile ksys_getsockname( int a1, struct sockaddr *a2, int *a3 );
int volatile ksys_statfs( const char *a1, struct statfs *a2 );
int volatile ksys_creat( const char *a1, int a2 );
int volatile ksys_rt_sigreturn( unsigned long a1 );
int volatile ksys_uname( struct old_utsname *a1 );
int volatile ksys_readlink( const char *a1, char *a2, int a3 );
int volatile ksys_madvise( unsigned long a1, long a2, int a3 );
int volatile ksys_seccomp( unsigned int a1, unsigned int a2, const char *a3 );
SYSREAL_define_syscall_noopt(_kexec_load,4, unsigned long a1, unsigned long a2, struct kexec_segment *a3, unsigned long a4)
int volatile ksys_socket( int a1, int a2, int a3 );
SYSREAL_define_syscall_noopt(_fsetxattr,5, int a1, const char *a2, const void *a3, long a4, int a5)
int volatile ksys_inotify_init1( int a1 );
SYSREAL_define_syscall_noopt(_pread64,4, unsigned long a1, char *a2, long a3, loff_t a4)
SYSREAL_define_syscall_noopt(_sched_getattr,4, pid_t a1, struct sched_attr *a2, unsigned int a3, unsigned int a4)
int volatile ksys_munlockall( );
SYSREAL_define_syscall_noopt(_mq_timedsend,5, mqd_t a1, const char *a2, long a3, unsigned int a4, const struct timespec *a5)
int volatile ksys_set_robust_list( struct robust_list_head *a1, long a2 );
int volatile ksys_lseek( unsigned int a1, off_t a2, unsigned int a3 );
SYSREAL_define_syscall_noopt(_fchownat,5, int a1, const char *a2, uid_t a3, gid_t a4, int a5)
int volatile ksys_memfd_create( const char *a1, unsigned int a2 );
int volatile ksys_sysfs( int a1, unsigned long a2, unsigned long a3 );
int volatile ksys_sched_getparam( pid_t a1, struct sched_param *a2 );
int volatile ksys_getresgid( gid_t *a1, gid_t *a2, gid_t *a3 );
int volatile ksys_mlockall( int a1 );
int volatile ksys_timer_create( const clockid_t a1, struct sigevent *a2, timer_t *a3 );
int volatile ksys_settimeofday( struct timeval *a1, struct timezone *a2 );
SYSREAL_define_syscall_noopt(_name_to_handle_at,5, int a1, const char *a2, struct file_handle *a3, int *a4, int a5)
int volatile ksys_setuid( uid_t a1 );
SYSREAL_define_syscall_noopt(_futex,6, u32 *a1, int a2, u32 a3, struct timespec *a4, u32 *a5, u32 a6)
SYSREAL_define_syscall_noopt(_mount,5, char *a1, char *a2, char *a3, unsigned long a4, void *a5)
SYSREAL_define_syscall_noopt(_mq_timedreceive,5, mqd_t a1, char *a2, long a3, unsigned int *a4, const struct timespec *a5)
int volatile ksys_getdents64( unsigned int a1, struct linux_dirent64 *a2, unsigned int a3 );
int volatile ksys_sched_setaffinity( pid_t a1, unsigned int a2, unsigned long *a3 );
int volatile ksys_io_submit( aio_context_t a1, long a2, struct iocb **a3 );
int volatile ksys_listen( int a1, int a2 );
int volatile ksys_swapon( const char *a1, int a2 );
int volatile ksys_setsid( );
int volatile ksys_getdents( unsigned int a1, struct linux_dirent *a2, unsigned int a3 );
int volatile ksys_close( unsigned int a1 );
int volatile ksys_setdomainname( char *a1, int a2 );
SYSREAL_define_syscall_noopt(_setsockopt,5, int a1, int a2, int a3, char *a4, int a5)
int volatile ksys_setfsuid( uid_t a1 );
SYSREAL_define_syscall_noopt(_renameat2,5, int a1, const char *a2, int a3, const char *a4, unsigned int a5)
int volatile ksys_getrusage( int a1, struct rusage *a2 );
int volatile ksys_getegid( );
int volatile ksys_fchmod( unsigned int a1, mode_t a2 );
SYSREAL_define_syscall_noopt(_kcmp,5, pid_t a1, pid_t a2, int a3, unsigned long a4, unsigned long a5)
int volatile ksys_getresuid( uid_t *a1, uid_t *a2, uid_t *a3 );
SYSREAL_define_syscall_noopt(_rt_sigprocmask,4, int a1, sigset_t *a2, sigset_t *a3, long a4)
int volatile ksys_times( struct sysinfo *a1 );
SYSREAL_define_syscall_noopt(_process_vm_readv,6, pid_t a1, const struct iovec *a2, unsigned long a3, const struct iovec *a4, unsigned long a5, unsigned long a6)
int volatile ksys_chown( const char *a1, uid_t a2, gid_t a3 );
int volatile ksys_sendmsg( int a1, struct msghdr *a2, unsigned a3 );
int volatile ksys_lookup_dcookie( u64 a1, long a2, long a3 );
int volatile ksys_flock( unsigned int a1, unsigned int a2 );
SYSREAL_define_syscall_noopt(_prctl,5, int a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5)
SYSREAL_define_syscall_noopt(_ppoll,5, struct pollfd *a1, unsigned int a2, struct timespec *a3, const sigset_t *a4, long a5)
int volatile ksys_semget( key_t a1, int a2, int a3 );
SYSREAL_define_syscall_noopt(_mbind,6, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long *a4, unsigned long a5, unsigned a6)
SYSREAL_define_syscall_noopt(_renameat,4, int a1, const char *a2, int a3, const char *a4)
int volatile ksys_getppid( );
int volatile ksys_sync( );
SYSREAL_define_syscall_noopt(_tee,4, int a1, int a2, long a3, unsigned int a4)
int volatile ksys_gettid( );
SYSREAL_define_syscall_noopt(_epoll_pwait,6, int a1, struct epoll_event *a2, int a3, int a4, const sigset_t *a5, long a6)
int volatile ksys_pivot_root( const char *a1, const char *a2 );
int volatile ksys_getpriority( int a1, int a2 );
int volatile ksys_dup2( unsigned int a1, unsigned int a2 );
int volatile ksys_lstat( const char *a1, struct stat *a2 );
int volatile ksys_tgkill( pid_t a1, pid_t a2, int a3 );
int volatile ksys_setgid( gid_t a1 );
int volatile ksys_listxattr( const char *a1, char *a2, long a3 );
int volatile ksys_sched_yield( );
SYSREAL_define_syscall_noopt(_epoll_wait,4, int a1, struct epoll_event *a2, int a3, int a4)
SYSREAL_define_syscall_noopt(_quotactl,4, unsigned int a1, const char *a2, qid_t a3, void *a4)
int volatile ksys_umount2( const char *a1, int a2 );
int volatile ksys_msgctl( int a1, int a2, struct msqid_ds *a3 );
SYSREAL_define_syscall_noopt(_perf_event_open,5, struct perf_event_attr *a1, pid_t a2, int a3, int a4, unsigned long a5)
int volatile ksys_delete_module( const char *a1, unsigned int a2 );
int volatile ksys_alarm( unsigned int a1 );
SYSREAL_define_syscall_noopt(_epoll_ctl,4, int a1, int a2, int a3, struct epoll_event *a4)
SYSREAL_define_syscall_noopt(_select,5, int a1, fd_set *a2, fd_set *a3, fd_set *a4, struct timeval *a5)
SYSREAL_define_syscall_noopt(_getxattr,4, const char *a1, const char *a2, void *a3, long a4)
int volatile ksys_stat( const char *a1, struct stat *a2 );
int volatile ksys_mq_notify( mqd_t a1, const struct sigevent *a2 );
int volatile ksys_getpeername( int a1, struct sockaddr *a2, int *a3 );
int volatile ksys_ioprio_get( int a1, int a2 );
int volatile ksys_eventfd( unsigned int a1 );
int volatile ksys_faccessat( int a1, const char *a2, int a3 );
int volatile ksys_io_destroy( aio_context_t a1 );
int volatile ksys_sethostname( char *a1, int a2 );
int volatile ksys_msync( unsigned long a1, long a2, int a3 );
int volatile ksys_getpgrp( );
SYSREAL_define_syscall_noopt(_sendfile,4, int a1, int a2, off_t *a3, long a4)
int volatile ksys_getgroups( int a1, gid_t *a2 );
int volatile ksys_time( time_t *a1 );
int volatile ksys_readahead( int a1, loff_t a2, long a3 );
SYSREAL_define_syscall_noopt(_msgrcv,5, int a1, struct msgbuf *a2, long a3, long a4, int a5)
int volatile ksys_finit_module( int a1, const char *a2, int a3 );
int volatile ksys_sched_getaffinity( pid_t a1, unsigned int a2, unsigned long *a3 );
int volatile ksys_mq_getsetattr( mqd_t a1, const struct mq_attr *a2, struct mq_attr *a3 );
SYSREAL_define_syscall_noopt(_mq_open,4, const char *a1, int a2, mode_t a3, struct mq_attr *a4)
SYSREAL_define_syscall_noopt(_get_mempolicy,5, int *a1, unsigned long *a2, unsigned long a3, unsigned long a4, unsigned long a5)
int volatile ksys_poll( struct poll_fd *a1, unsigned int a2, long a3 );
int volatile ksys_shmctl( int a1, int a2, struct shmid_ds *a3 );
SYSREAL_define_syscall_noopt(_fadvise64,4, int a1, loff_t a2, long a3, int a4)
int volatile ksys_init_module( void *a1, unsigned long a2, const char *a3 );
SYSREAL_define_syscall_noopt(_socketpair,4, int a1, int a2, int a3, int *a4)
SYSREAL_define_syscall_noopt(_add_key,4, const char *a1, const char *a2, const void *a3, long a4)
int volatile ksys_write( unsigned int a1, const char *a2, long a3 );
int volatile ksys_munmap( unsigned long a1, long a2 );
int volatile ksys_vhangup( );
int volatile ksys_inotify_init( );
int volatile ksys_getpgid( pid_t a1 );
int volatile ksys_setregid( gid_t a1, gid_t a2 );
int volatile ksys_fstat( unsigned int a1, struct stat *a2 );
int volatile ksys_ioprio_set( int a1, int a2, int a3 );
int volatile ksys_utime( char *a1, struct utimbuf *a2 );
int volatile ksys_exit_group( int a1 );
SYSREAL_define_syscall_noopt(_rt_tgsigqueueinfo,4, pid_t a1, pid_t a2, int a3, siginfo_t *a4)
int volatile ksys_timerfd_gettime( int a1, struct itimerspec *a2 );
int volatile ksys_chmod( const char *a1, mode_t a2 );
int volatile ksys__sysctl( struct __sysctl_args *a1 );
int volatile ksys_semop( int a1, struct sembuf *a2, unsigned a3 );
int volatile ksys_rt_sigqueueinfo( pid_t a1, int a2, siginfo_t *a3 );
int volatile ksys_lremovexattr( const char *a1, const char *a2 );
int volatile ksys_epoll_create( int a1 );
SYSREAL_define_syscall_noopt(_migrate_pages,4, pid_t a1, unsigned long a2, const unsigned long *a3, const unsigned long *a4)
int volatile ksys_arch_prctl( struct task_struct *a1, int a2, unsigned long *a3 );
int volatile ksys_msgget( key_t a1, int a2 );
int volatile ksys_sched_setscheduler( pid_t a1, int a2, struct sched_param *a3 );
int volatile ksys_symlink( const char *a1, const char *a2 );
int volatile ksys_lchown( const char *a1, uid_t a2, gid_t a3 );
SYSREAL_define_syscall_noopt(_keyctl,5, int a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5)
SYSREAL_define_syscall_noopt(_request_key,4, const char *a1, const char *a2, const char *a3, key_serial_t a4)
SYSREAL_define_syscall_noopt(_pwrite64,4, unsigned int a1, const char *a2, long a3, loff_t a4)
int volatile ksys_capset( cap_user_header_t a1, const cap_user_data_t a2 );
int volatile ksys_mkdir( const char *a1, int a2 );
SYSREAL_define_syscall_noopt(_lgetxattr,4, const char *a1, const char *a2, void *a3, long a4)
SYSREAL_define_syscall_noopt(_remap_file_pages,5, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5)
int volatile ksys_unlink( const char *a1 );
int volatile ksys_mlock( unsigned long a1, long a2 );
int volatile ksys_rt_sigpending( sigset_t *a1, long a2 );
int volatile ksys_brk( unsigned long a1 );
SYSREAL_define_syscall_noopt(_fanotify_mark,5, long a1, long a2, __u64 a3, long a4, long a5)
int volatile ksys_nanosleep( struct timespec *a1, struct timespec *a2 );
SYSREAL_define_syscall_noopt(_signalfd4,4, int a1, sigset_t *a2, long a3, int a4)
SYSREAL_define_syscall_noopt(_fallocate,4, long a1, long a2, loff_t a3, loff_t a4)
int volatile ksys_ustat( unsigned a1, struct ustat *a2 );
SYSREAL_define_syscall_noopt(_wait4,4, pid_t a1, int *a2, int a3, struct rusage *a4)
int volatile ksys_dup3( unsigned int a1, unsigned int a2, int a3 );
int volatile ksys_mkdirat( int a1, const char *a2, int a3 );
int volatile ksys_shmget( key_t a1, long a2, int a3 );
int volatile ksys_eventfd2( unsigned int a1, int a2 );
int volatile ksys_mq_unlink( const char *a1 );
int volatile ksys_getitimer( int a1, struct itimerval *a2 );
int volatile ksys_getuid( );
int volatile ksys_pause( );
int volatile ksys_gettimeofday( struct timeval *a1, struct timezone *a2 );
int volatile ksys_shmdt( char *a1 );
int volatile ksys_restart_syscall( );
SYSREAL_define_syscall_noopt(_utimensat,4, int a1, const char *a2, struct timespec *a3, int a4)
int volatile ksys_fremovexattr( int a1, const char *a2 );
int volatile ksys_fsync( unsigned int a1 );
int volatile ksys_sigaltstack( const stack_t *a1, stack_t *a2 );
int volatile ksys_sched_get_priority_min( int a1 );
int volatile ksys_setns( int a1, int a2 );
int volatile ksys_writev( unsigned long a1, const struct iovec *a2, unsigned long a3 );
int volatile ksys_setresgid( gid_t a1, gid_t a2, gid_t a3 );
SYSREAL_define_syscall_noopt(_newfstatat,4, int a1, const char *a2, struct stat *a3, int a4)
int volatile ksys_timer_getoverrun( timer_t a1 );
int volatile ksys_fchown( unsigned int a1, uid_t a2, gid_t a3 );
int volatile ksys_capget( cap_user_header_t a1, cap_user_data_t a2 );
int volatile ksys_signalfd( int a1, sigset_t *a2, long a3 );
int volatile ksys_personality( unsigned int a1 );
SYSREAL_define_syscall_noopt(_open_by_handle_at,5, int a1, const char *a2, struct file_handle *a3, int *a4, int a5)
SYSREAL_define_syscall_noopt(_prlimit64,4, pid_t a1, unsigned int a2, const struct rlimit64 *a3, struct rlimit64 *a4)
int volatile ksys_io_cancel( aio_context_t a1, struct iocb *a2, struct io_event *a3 );
int volatile ksys_ftruncate( unsigned int a1, unsigned long a2 );
SYSREAL_define_syscall_noopt(_fgetxattr,4, int a1, const char *a2, void *a3, long a4)
int volatile ksys_geteuid( );
int volatile ksys_get_robust_list( int a1, struct robust_list_head **a2, long *a3 );
int volatile ksys_modify_ldt( int a1, void *a2, unsigned long a3 );
int volatile ksys_bind( int a1, struct sockaddr *a2, int a3 );
SYSREAL_define_syscall_noopt(_process_vm_writev,6, pid_t a1, const struct iovec *a2, unsigned long a3, const struct iovcc *a4, unsigned long a5, unsigned long a6)
int volatile ksys_getrandom( char *a1, long a2, unsigned int a3 );
int volatile ksys_getrlimit( unsigned int a1, struct rlimit *a2 );
int volatile ksys_sched_getscheduler( pid_t a1 );
SYSREAL_define_syscall_noopt(_recvmmsg,5, int a1, struct msghdr *a2, unsigned int a3, unsigned int a4, struct timespec *a5)
SYSREAL_define_syscall_noopt(_semctl,4, int a1, int a2, int a3, semun_u a4)
int volatile ksys_shutdown( int a1, int a2 );
int volatile ksys_sched_get_priority_max( int a1 );
int volatile ksys_mprotect( unsigned long a1, long a2, unsigned long a3 );
SYSREAL_define_syscall_noopt(_pselect6,6, int a1, fd_set *a2, fd_set *a3, fd_set *a4, struct timespec *a5, void *a6)
int volatile ksys_clock_gettime( const clockid_t a1, struct timespec *a2 );
int volatile ksys_kill( pid_t a1, int a2 );
SYSREAL_define_syscall_noopt(_clock_nanosleep,4, const clockid_t a1, int a2, const struct timespec *a3, struct timespec *a4)
SYSREAL_define_syscall_noopt(_semtimedop,4, int a1, struct sembuf *a2, unsigned a3, const struct timespec *a4)
int volatile ksys_setpriority( int a1, int a2, int a3 );
int volatile ksys_fdatasync( unsigned int a1 );
SYSREAL_define_syscall_noopt(_msgsnd,4, int a1, struct msgbuf *a2, long a3, int a4)
int volatile ksys_fchmodat( int a1, const char *a2, mode_t a3 );
int volatile ksys_fchdir( unsigned int a1 );
SYSREAL_define_syscall_noopt(_mremap,5, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5)
int volatile ksys_umask( int a1 );
int volatile ksys_ioctl( unsigned int a1, unsigned int a2, unsigned long a3 );
int volatile ksys_setreuid( uid_t a1, uid_t a2 );
SYSREAL_define_syscall_noopt(_recvfrom,6, int a1, void *a2, long a3, unsigned a4, struct sockaddr *a5, int *a6)
int volatile ksys_utimes( char *a1, struct timeval *a2 );
int volatile ksys_exit( int a1 );
int volatile ksys_timerfd_create( int a1, int a2 );
int volatile ksys_timer_gettime( timer_t a1, struct itimerspec *a2 );
int volatile ksys_setresuid( uid_t *a1, uid_t *a2, uid_t *a3 );
int volatile ksys_execve( const char *a1, const char *const a2, const char *const a3 );
SYSREAL_define_syscall_noopt(_vmsplice,4, int a1, const struct iovec *a2, unsigned long a3, unsigned int a4)
int volatile ksys_connect( int a1, struct sockaddr *a2, int a3 );
int volatile ksys_clock_getres( const clockid_t a1, struct timespec *a2 );
int volatile ksys_getsid( pid_t a1 );
int volatile ksys_mincore( unsigned long a1, long a2, unsigned char *a3 );
SYSREAL_define_syscall_noopt(_mmap,6, unsigned long a1, unsigned long a2, unsigned long a3, unsigned long a4, unsigned long a5, unsigned long a6)
SYSREAL_define_syscall_noopt(_getsockopt,5, int a1, int a2, int a3, char *a4, int *a5)
int volatile ksys_rename( const char *a1, const char *a2 );
int volatile ksys_flistxattr( int a1, char *a2, long a3 );
int volatile ksys_symlinkat( const char *a1, int a2, const char *a3 );
int volatile ksys_epoll_create1( int a1 );
int volatile ksys_read( unsigned int a1, char *a2, long a3 );
int volatile ksys_readv( unsigned long a1, const struct iovec *a2, unsigned long a3 );
SYSREAL_define_syscall_noopt(_preadv,5, unsigned long a1, const struct iovec *a2, unsigned long a3, unsigned long a4, unsigned long a5)
SYSREAL_define_syscall_noopt(_move_pages,6, pid_t a1, unsigned long a2, const void *a3, const int *a4, int *a5, int a6)
SYSREAL_define_syscall_noopt(_accept4,4, int a1, struct sockaddr *a2, int *a3, int a4)
SYSREAL_define_syscall_noopt(_timer_settime,4, timer_t a1, int a2, const struct itimerspec *a3, struct itimerspec *a4)
int volatile ksys_timer_delete( timer_t a1 );
int volatile ksys_tkill( pid_t a1, int a2 );
SYSREAL_define_syscall_noopt(_clone,4, unsigned long a1, unsigned long a2, void *a3, void *a4)
int volatile ksys_recvmsg( int a1, struct msghdr *a2, unsigned int a3 );
int volatile ksys_setpgid( pid_t a1, pid_t a2 );
int volatile ksys_getpid( );
int volatile ksys_rt_sigsuspend( sigset_t *a1, long a2 );
int volatile ksys_pipe( int *a1 );
int volatile ksys_chroot( const char *a1 );
int volatile ksys_chdir( const char *a1 );
int volatile ksys_inotify_rm_watch( int a1, __s32 a2 );
int volatile ksys_futimesat( int a1, const char *a2, struct timeval *a3 );
int volatile ksys_fcntl( unsigned int a1, unsigned int a2, unsigned long a3 );
int volatile ksys_syslog( int a1, char *a2, int a3 );
SYSREAL_define_syscall_noopt(_timerfd_settime,4, int a1, int a2, const struct itimerspec *a3, struct itimerspec *a4)
int volatile ksys_set_mempolicy( int a1, unsigned long *a2, unsigned long a3 );
SYSREAL_define_syscall_noopt(_setxattr,5, const char *a1, const char *a2, const void *a3, long a4, int a5)
SYSREAL_define_syscall_noopt(_waitid,5, int a1, pid_t a2, struct siginfo *a3, int a4, struct rusage *a5)
int volatile ksys_unshare( unsigned long a1 );
SYSREAL_define_syscall_noopt(_kexec_file_load,5, int a1, int a2, unsigned long a3, const char *a4, unsigned long a5)
int volatile ksys_truncate( const char *a1, long a2 );
int volatile ksys_removexattr( const char *a1, const char *a2 );
int volatile ksys_ioperm( unsigned long a1, unsigned long a2, int a3 );
int volatile ksys_access( const char *a1, int a2 );
int volatile ksys_sysinfo( struct sysinfo *a1 );
int volatile ksys_clock_settime( const clockid_t a1, const struct timespec *a2 );
int volatile ksys_setfsgid( gid_t a1 );
SYSREAL_define_syscall_noopt(_openat,4, int a1, const char *a2, int a3, int a4)
int volatile ksys_io_setup( unsigned a1, aio_context_t *a2 );
SYSREAL_define_syscall_noopt(_ptrace,4, long a1, long a2, unsigned long a3, unsigned long a4)
SYSREAL_define_syscall_noopt(_linkat,5, int a1, const char *a2, int a3, const char *a4, int a5)
int volatile ksys_setgroups( int a1, gid_t *a2 );
SYSREAL_define_syscall_noopt(_pwritev,5, unsigned long a1, const struct iovec *a2, unsigned long a3, unsigned long a4, unsigned long a5)
int volatile ksys_getgid( );
int volatile ksys_set_tid_address( int *a1 );
int volatile ksys_getcwd( char *a1, unsigned long a2 );
int volatile ksys_shmat( int a1, char *a2, int a3 );
SYSREAL_define_syscall_noopt(_readlinkat,4, int a1, const char *a2, char *a3, int a4)
int volatile ksys_llistxattr( const char *a1, char *a2, long a3 );
int volatile ksys_swapoff( const char *a1 );
SYSREAL_define_syscall_noopt(_io_getevents,4, aio_context_t a1, long a2, long a3, struct io_event *a4)
#pragma GCC diagnostic pop
// 59 "./minilib.h" 2
// 68 "./minilib.h"
// 1 "./minilib/include//utils.h" 1
// 23 "./minilib/include//utils.h"
#define dbg(s) {}
#define dbgf(...) {}
#define dbgwarnf(...) {}
#define dbgwarn(s) {}
#define dbgwarnfif(a,...) {}
#define dbgwarnif(a,s) {}
#define dbgerr(s) {}
#define dbgerrf(...) {}
#define dbgerrif(a,s) {}
#define dbgerrfif(a,...) {}
#define AC_BLACK "\033[0;30m"
#define AC_RED "\033[0;31m"
#define AC_GREEN "\033[32;0m"
#define AC_BROWN "\033[0;33m"
#define AC_BLUE "\033[0;34m"
#define AC_MAGENTA "\033[0;35m"
#define AC_MARINE "\033[0;36m"
#define AC_LGREY "\033[0;37m"
#define AC_WHITE "\033[0;38m"
#define AC_GREY "\033[1;30m"
#define AC_LRED "\033[1;31m"
#define AC_LGREEN "\033[1;32m"
#define AC_YELLOW "\033[1;33m"
#define AC_LBLUE "\033[1;34m"
#define AC_LMAGENTA "\033[1;35m"
#define AC_LMARINE "\033[1;36m"
#define AC_LWHITE "\033[1;37m"
// 69 "./minilib.h" 2
// 1 "./minilib/macros/vararg.h" 1
#define vararg_h 
#define VARARG(A,B) ((A+0) ?: B )
#define SHIFT(A,...) A
#define ARG(A,...) __VA_ARGS__
// 71 "./minilib.h" 2
// 1 "./minilib/include/stdarg.h" 1
#define stdarg_h 
typedef __builtin_va_list va_list;
#define va_start(v,l) __builtin_va_start(v,l)
#define va_end(v) __builtin_va_end(v)
#define va_arg(v,l) __builtin_va_arg(v,l)
#define va_copy(d,s) __builtin_va_copy(d,s)
// 74 "./minilib.h" 2
// 1 "./minilib/include/exit.h" 1
#define minilib_exit_h 
#define exit(ret) asm("jmp _exit"::"D"(ret))
// 78 "./minilib.h" 2
// 1 "./minilib/include/filemodes.h" 1
#define mini_filemodes_h 
// 41 "./minilib/include/filemodes.h"
#define O_ACCMODE 00000003
#define O_RDONLY 00000000
#define O_WRONLY 00000001
#define O_RDWR 00000002
#define O_CREAT 00000100
#define O_EXCL 00000200
#define O_NOCTTY 00000400
#define O_TRUNC 00001000
#define O_APPEND 00002000
#define O_NONBLOCK 00004000
#define O_DSYNC 00010000
#define FASYNC 00020000
#define O_ASYNC 020000
#define O_DIRECT 00040000
#define O_LARGEFILE 00100000
#define O_DIRECTORY 00200000
#define O_NOFOLLOW 00400000
#define O_NOATIME 01000000
#define O_CLOEXEC 02000000
#define O_PATH 010000000
#define O_SYNC 04010000
#define O_RSYNC 04010000
// 80 "./minilib.h" 2
struct udiv_t { unsigned int quot, rem; };
// 114 "./minilib.h"
// 1 "./include/errno.h" 1
#define mini_errno_h 
#define EPERM 1
#define ESRCH 3
#define EINTR 4
#define EIO 5
#define ENXIO 6
#define E2BIG 7
#define ENOEXEC 8
#define EBADF 9
#define ECHILD 10
#define EAGAIN 11
#define ENOMEM 12
#define EACCES 13
#define EFAULT 14
#define ENOTBLK 15
#define EBUSY 16
#define EEXIST 17
#define EXDEV 18
#define ENODEV 19
#define ENOTDIR 20
#define EISDIR 21
#define EINVAL 22
#define ENFILE 23
#define EMFILE 24
#define ENOTTY 25
#define ETXTBSY 26
#define EFBIG 27
#define ENOSPC 28
#define ESPIPE 29
#define EROFS 30
#define EMLINK 31
#define EPIPE 32
#define EDOM 33
#define ERANGE 34
#define EDEADLK 35
#define ENAMETOOLONG 36
#define ENOLCK 37
#define ENOSYS 38
#define ENOTEMPTY 39
#define ELOOP 40
#define EWOULDBLOCK EAGAIN
#define ENOMSG 42
#define EIDRM 43
#define ECHRNG 44
#define EL2NSYNC 45
#define EL3HLT 46
#define EL3RST 47
#define ELNRNG 48
#define EUNATCH 49
#define ENOCSI 50
#define EL2HLT 51
#define EBADE 52
#define EBADR 53
#define EXFULL 54
#define ENOANO 55
#define EBADRQC 56
#define EBADSLT 57
#define EDEADLOCK EDEADLK
#define EBFONT 59
#define ENOSTR 60
#define ENODATA 61
#define ETIME 62
#define ENOSR 63
#define ENONET 64
#define ENOPKG 65
#define EREMOTE 66
#define ENOLINK 67
#define EADV 68
#define ESRMNT 69
#define ECOMM 70
#define EPROTO 71
#define EMULTIHOP 72
#define EDOTDOT 73
#define EBADMSG 74
#define EOVERFLOW 75
#define ENOTUNIQ 76
#define EBADFD 77
#define EREMCHG 78
#define ELIBACC 79
#define ELIBBAD 80
#define ELIBSCN 81
#define ELIBMAX 82
#define ELIBEXEC 83
#define EILSEQ 84
#define ERESTART 85
#define ESTRPIPE 86
#define EUSERS 87
#define ENOTSOCK 88
#define EDESTADDRREQ 89
#define EMSGSIZE 90
#define EPROTOTYPE 91
#define ENOPROTOOPT 92
#define EPROTONOSUPPORT 93
#define ESOCKTNOSUPPORT 94
#define EOPNOTSUPP 95
#define ENOTSUP EOPNOTSUPP
#define EPFNOSUPPORT 96
#define EAFNOSUPPORT 97
#define EADDRINUSE 98
#define EADDRNOTAVAIL 99
#define ENETDOWN 100
#define ENETUNREACH 101
#define ENETRESET 102
#define ECONNABORTED 103
#define ECONNRESET 104
#define ENOBUFS 105
#define EISCONN 106
#define ENOTCONN 107
#define ESHUTDOWN 108
#define ETOOMANYREFS 109
#define ETIMEDOUT 110
#define ECONNREFUSED 111
#define EHOSTDOWN 112
#define EHOSTUNREACH 113
#define EALREADY 114
#define EINPROGRESS 115
#define ESTALE 116
#define EUCLEAN 117
#define ENOTNAM 118
#define ENAVAIL 119
#define EISNAM 120
#define EREMOTEIO 121
#define EDQUOT 122
#define ENOMEDIUM 123
#define EMEDIUMTYPE 124
#define ECANCELED 125
#define ENOKEY 126
#define EKEYEXPIRED 127
#define EKEYREVOKED 128
#define EKEYREJECTED 129
#define EOWNERDEAD 130
#define ENOTRECOVERABLE 131
#define ERFKILL 132
extern int errno;
// 115 "./minilib.h" 2
// 435 "./minilib.h"
#define mini_0 
// 537 "./minilib.h"
#define mini_dprints 
// 806 "./minilib.h"
#define mini_tolower 
// 904 "./minilib.h"
void volatile free(void* p);
int snprintf( char *buf, long size, const char *fmt, ... );
// 919 "./minilib.h"
// 1 "./include/mini_fstream.h" 1
#define mini_fstream_h 
// 1 "./include/stdarg.h" 1
// 5 "./include/mini_fstream.h" 2
// 16 "./include/mini_fstream.h"
#define mini_fstream 
// 28 "./include/mini_fstream.h"
static inline int __attribute__((always_inline)) fflush( FILE *F ){
  return(0);
}
// 52 "./include/mini_fstream.h"
int snprintf( char *buf, long size, const char *fmt, ... );
static int fileno( FILE *f ){
  return( (f==0) ? 0 : (*f & 0x3fffff) );
}
static inline int __attribute__((always_inline)) fclose( FILE* f ){
  int fd = fileno(f);
  *f = -1;
  if ( f[1] == mlgl->stream[mlgl->pstream] )
    for ( mlgl->pstream--; mlgl->stream[mlgl->pstream-1] == -1; mlgl->pstream-- );
  return( close(fd) );
}
// 91 "./include/mini_fstream.h"
#define printf(...) fprintf(stdout,__VA_ARGS__)
#define fprint(...) fprintf(__VA_ARGS__)
#define vfprintf(...) fprintf(__VA_ARGS__)
static inline long fwrite(const void *ptr, long size, long nmemb, FILE *f){
  const void *p = ptr;
  int a;
  for ( a = 0; a<nmemb; a++ ){
    if ( write( fileno(f), p, size ) != size ){
      *f = *f | 0x400000;
      return(a);
    }
    p = p + size;
  }
  return(a);
}
static inline long ftell(FILE *f){
   return(lseek( fileno(f), 0, 1 ));
}
static inline void fgetpos(FILE *f, long *pos ){
   *pos = ftell(f);
}
static inline int fsetpos(FILE *f, int pos ){
   int r = lseek( fileno(f), pos, 0 );
  if ( r==pos ){
    *f = *f & 0x3fffff;
    return(r);
  }
  return(r);
}
static inline int fseek(FILE *f, long offset, int whence ){
   int r = lseek( fileno(f), offset, whence );
  if ( r>0 )
    *f = *f & 0x3fffff;
  return(r);
}
static inline void rewind( FILE *f ){
  fseek(f, 0, 0);
}
static inline long fread(void *ptr, long size, long nmemb, FILE *f){
  void *p = ptr;
  int a;
  for ( a = 0; a<nmemb; a++ ){
    if ( read( fileno(f), p, size ) != size ){
      *f = *f | 0x800000 ;
      return(a);
    }
    p = p + size;
  }
  return(a);
}
// 184 "./include/mini_fstream.h"
static inline int feof(FILE *f){
  if ( *f & 0xc00000 )
    return(1);
  return(0);
}
static inline int ferror(FILE *f){
  if ( *f & 0xc00000 )
    return(1);
  return(0);
}
static inline void clearerr(FILE *f){
  *f = *f & 0x3fffff;
}
static inline void clearerror(FILE *f){
  *f = *f & 0x3fffff;
}
static void setbuf(FILE *stream, char *buf){
}
static int setvbuf(FILE *stream, char *buf, int mode, long size){
  return(0);
}
// 920 "./minilib.h" 2
// 1 "./minilib/include/fputc.h" 1
#define fputc_c 
static inline int volatile fputc(int c, FILE* F){
  write(fileno(F), &c, 1);
  return(c);
}
// 921 "./minilib.h" 2
int dprintf( int fd, const char *fmt, ... );
// 1 "./minilib/include/tcgetattr.h" 1
#define tcgetattr_h 
// 13 "./minilib/include/tcgetattr.h"
int ioctl( int fd, unsigned long int request, ... );
static inline int __attribute__((always_inline)) tcgetattr(int fd, struct termios *io){
 return(ioctl(fd, 0x5401, io));
}
// 931 "./minilib.h" 2
int vsnprintf(char *buf, long size, const char* fmt, va_list args );
#define print(str) write(STDOUT_FILENO,str,strlen(str))
// 950 "./minilib.h"
char* getenv(const char* name);
// 1 "./minilib/include/mini_fstream.h" 1
// 956 "./minilib.h" 2
// 965 "./minilib.h"
int itodec(int i, char *buf, int prec, char limiter );
// 975 "./minilib.h"
#define eprintl() write(STDERR_FILENO,"\n",1)
int strlen(const char*str);
static int volatile sigaction(int sig, const struct sigaction *act, struct sigaction *oact);
// 1 "./minilib/include/lseek.h" 1
#define mini_lseek_h 
// 15 "./minilib/include/lseek.h"
extern int sysret;
extern int errno;
// 991 "./minilib.h" 2
// 1000 "./minilib.h"
#define _mprints(...) dprints(STDOUT_FILENO, __VA_ARGS__)
int volatile open( const char *s, int flags, ... );
// 1 "./minilib/include/fgetc.h" 1
#define fgetc_h 
// 11 "./minilib/include/fgetc.h"
static inline int fgetc(FILE *F){
  unsigned long int buf = 0;
  if ( *F >> 24 ){
    int r = *F >> 24;
    *F = *F & (~0xff000000);
    return(r);
  }
  read(fileno(F), &buf, 1 );
  return((int)buf);
}
// 35 "./minilib/include/fgetc.h"
static int ungetc(int c, FILE *F){
  *F = (*F & ~0xff000000) | (c<<24);
  return(c);
}
// 1012 "./minilib.h" 2
char *strchrnul(const char *s, int c);
// 1035 "./minilib.h"
char* strerror( int errnum );
int ptsname_r(int fd, char *buf, long len);
void* volatile malloc(int size);
#define fprintf(stream,...) write(fileno(stream),mlgl->mbuf,sprintf(mlgl->mbuf,__VA_ARGS__))
// 1 "./minilib/include/fputs.h" 1
#define fputs_h 
// 11 "./minilib/include/fputs.h"
int strlen(const char*str);
static int fileno(FILE*);
static inline int volatile fputs(const char *c, FILE *F){
  return(write(fileno(F), c, strlen(c)));
}
// 1057 "./minilib.h" 2
// 1065 "./minilib.h"
int _strcasecmp(const char*c1,const char*c2,int len);
int _strcmp(const char*c1,const char*c2,int len);
int _itohex(int i,char* buf,int padding, int capitals);
void *memcpy( void *d, const void *s, int n );
#define prints(...) _mprints(__VA_ARGS__,0)
pid_t waitpid(pid_t pid, int *wstatus, int options);
int fprintfs( FILE* F, char *fmt, ...);
int uitodec(unsigned int i, char *buf, int prec, char limiter );
char *strcpy(char *dest, const char *src);
#define printl() write(STDOUT_FILENO,"\n",1)
// 1124 "./minilib.h"
#define sprintf(str,...) snprintf( str, 4096, __VA_ARGS__)
int volatile __attribute__((optimize("O0"))) ioctl( int fd, unsigned long int request, ... );
int _itobin(int i, char*buf, int prec, int groups );
FILE *_fopen(int fd, const char* filename, const char* mode, FILE *f);
#define fwrites(fd,str) write(fd,str,sizeof(str))
char* fgets(char *buf, int size, FILE* F);
#define eprint(str) write(STDERR_FILENO,str,strlen(str))
// 1165 "./minilib.h"
#define fprints(F,str) write(fileno(F),str,strlen(str))
// 1 "./minilib/include/syscalls_x64.h" 1
#define syscalls_x64_h 
// 1171 "./minilib.h" 2
void perror(const char *msg);
// 1215 "./minilib.h"
#define vfprintf(...) fprintf(__VA_ARGS__)
// 1230 "./minilib.h"
// 1 "./minilib/include/math.h" 1
#define mini_math_h 
static div_t div(int numerator, int denominator){
  div_t ret;
  ret.quot = numerator/denominator;
  ret.rem = numerator-(ret.quot*denominator);
  return(ret);
}
static ldiv_t ldiv(long int numerator, long int denominator){
  ldiv_t ret;
  ret.quot = numerator/denominator;
  ret.rem = numerator-(ret.quot*denominator);
  return(ret);
}
static int abs(int i){
    return( (i >= 0) ? i : -i);
}
static long int labs(long int i){
    return( (i >= 0) ? i : -i);
}
// 1231 "./minilib.h" 2
void* realloc(void *p, int size);
// 1270 "./minilib.h"
int isatty(int fd);
// 1310 "./minilib.h"
void* memmove(void *dest, const void *src, int n);
// 1350 "./minilib.h"
int itoHEX(int i,char* buf,int padding);
int memcmp(const void* c1,const void* c2,int len);
// 1365 "./minilib.h"
char *strchr(const char *s, int c);
// 1375 "./minilib.h"
// 1 "./minilib/include/errstr.h" 1
#define ERRNO_MAX 133
const char* verbose_errstr(int num){
  if ( num > 133 || num < 0 ){
    return("Errno unknown");
  }
char *errstr[] = { "Internal error (errno=0)",
  "Operation not permitted",
"No such file or directory",
"No such process",
"Interrupted system call",
"I/O error",
"No such device or address",
"Argument list too long",
"Exec format error",
"Bad file number",
"No child processes",
"Try again",
"Out of memory",
"Permission denied",
"Bad address",
"Block device required",
"Device or resource busy",
"File exists",
"Cross-device link",
"No such device",
"Not a directory",
"Is a directory",
"Invalid argument",
"File table overflow",
"Too many open files",
"Not a typewriter",
"Text file busy",
"File too large",
"No space left on device",
"Illegal seek",
"Read-only file system",
"Too many links",
"Broken pipe",
"Math argument out of domain of func",
"Math result not representable",
"Resource deadlock would occur",
"File name too long",
"No record locks available",
"Invalid system call number",
"Directory not empty",
"Too many symbolic links encountered",
"Operation would block",
"No message of desired type",
"Identifier removed",
"Channel number out of range",
"Level 2 not synchronized",
"Level 3 halted",
"Level 3 reset",
"Link number out of range",
"Protocol driver not attached",
"No CSI structure available",
"Level 2 halted",
"Invalid exchange",
"Invalid request descriptor",
"Exchange full",
"No anode",
"Invalid request code",
"Invalid slot",
"Resource deadlock would occur",
"Bad font file format",
"Device not a stream",
"No data available",
"Timer expired",
"Out of streams resources",
"Machine is not on the network",
"Package not installed",
"Object is remote",
"Link has been severed",
"Advertise error",
"Srmount error",
"Communication error on send",
"Protocol error",
"Multihop attempted",
"RFS specific error",
"Not a data message",
"Value too large for defined data type",
"Name not unique on network",
"File descriptor in bad state",
"Remote address changed",
"Can not access a needed shared library",
"Accessing a corrupted shared library",
".lib section in a.out corrupted",
"Attempting to link in too many shared libraries",
"Cannot exec a shared library directly",
"Illegal byte sequence",
"Interrupted system call should be restarted",
"Streams pipe error",
"Too many users",
"Socket operation on non-socket",
"Destination address required",
"Message too long",
"Protocol wrong type for socket",
"Protocol not available",
"Protocol not supported",
"Socket type not supported",
"Operation not supported on transport endpoint",
"Protocol family not supported",
"Address family not supported by protocol",
"Address already in use",
"Cannot assign requested address",
"Network is down",
"Network is unreachable",
"Network dropped connection because of reset",
"Software caused connection abort",
"Connection reset by peer",
"No buffer space available",
"Transport endpoint is already connected",
"Transport endpoint is not connected",
"Cannot send after transport endpoint shutdown",
"Too many references: cannot splice",
"Connection timed out",
"Connection refused",
"Host is down",
"No route to host",
"Operation already in progress",
"Operation now in progress",
"Stale file handle",
"Structure needs cleaning",
"Not a XENIX named type file",
"No XENIX semaphores available",
"Is a named type file",
"Remote I/O error",
"Quota exceeded",
"No medium found",
"Wrong medium type",
"Operation Canceled",
"Required key not available",
"Key has expired",
"Key has been revoked",
"Key was rejected by service",
"Owner died",
"State not recoverable",
"Operation not possible due to RF-kill",
"Memory page has hardware error" };
return(errstr[num]);
}
// 1376 "./minilib.h" 2
// 1395 "./minilib.h"
// 1 "./minilib/macros/getoptm.h" 1
#define mini_getoptm_h 
#define DEF_OPTIONS_ENUM_short enum MINI_OPTIONS_short { a=0x1,b=0x2,c=0x4,d=0x8,e=0x10,f=0x20,g=0x40,h=0x80,i=0x100,j=0x200, k=0x400,l=0x800,m=0x1000,n=0x2000,o=0x4000,p=0x8000,q=0x10000,r=0x20000,s=0x40000, t=0x80000,u=0x100000,v=0x200000,w=0x400000,x=0x800000,y=0x1000000,z=0x2000000 };
// 23 "./minilib/macros/getoptm.h"
#define PARSEOPTS_short(opts,argv,options,unrecognized) ({ DEF_OPTIONS_ENUM_short; int argp=1; for ( int ap=1; argv[ap]; ap++ ){ if ( argv[ap][0] == '-' ){ argp = ap+1; for ( int b=1; argv[ap][b]; b++ ){ int ti; char option; opts |= (ti=1<< ((option=argv[ap][b])-97) ); if ( ! ( (options) & ti ) ){ unrecognized; } } } } argp; } )
// 44 "./minilib/macros/getoptm.h"
#define GETOPT_short(opts,option) ({ DEF_OPTIONS_ENUM_short; opts & option; } )
#define SETOPT_short(opts,option) ({ DEF_OPTIONS_ENUM_short; opts = (opts | option); } )
// 1396 "./minilib.h" 2
// 1425 "./minilib.h"
unsigned int rand();
// 1450 "./minilib.h"
int atoi(const char *c);
// 1470 "./minilib.h"
#define ewrites(str) write(STDERR_FILENO,str,sizeof(str))
// 1535 "./minilib.h"
static int sigemptyset(sigset_t *set);
// 1550 "./minilib.h"
char *dirname(char *s);
static inline int fexecveat(int fd, char *const argv[], char *const envp[]);
// 1630 "./minilib.h"
int closedir(DIR *dir);
// 1650 "./minilib.h"
int strcasecmp(const char*c1,const char*c2);
// 1675 "./minilib.h"
void* memfrob(void* s, unsigned int len);
// 1695 "./minilib.h"
int dtodec(double d, char* buf, int precision);
// 1745 "./minilib.h"
char* strstr(const char *big, const char *little);
// 1760 "./minilib.h"
DIR *opendir(const char *name);
#define putc(c,stream) fputc(c,stream)
// 1795 "./minilib.h"
struct dirent *readdir(DIR *dir);
// 1810 "./minilib.h"
FILE *freopen(const char* filename, const char* mode, FILE *F);
// 1835 "./minilib.h"
int grantpt(int fd);
// 1845 "./minilib.h"
// 1 "./minilib/include/isprint.h" 1
#define mini_isprint_h 
#define misprint(A) isprint(A)
static inline int __attribute__((always_inline)) isprint(const char c){
  if ( (c>31) && ( c<127 ))
    return(1);
  return(0);
}
// 1846 "./minilib.h" 2
int ultodec(unsigned long ui, char *buf, int prec, char limiter );
// 1870 "./minilib.h"
int sigdelset(sigset_t *set, int sig);
// 1880 "./minilib.h"
long atol(const char *c);
// 1910 "./minilib.h"
// 1 "./minilib/include/mkfifo.h" 1
static int mkfifo( const char* path, mode_t mode ){
  return( mknod(path, mode | 0010000, 0 ) );
}
// 1911 "./minilib.h" 2
// 1930 "./minilib.h"
// 1 "./minilib/include/select.h" 1
#define select_h 
static int volatile __attribute__((optimize("O0"))) select(int fd, volatile fd_set* readfd, volatile fd_set *writefd, volatile fd_set *exceptfd, volatile struct timeval *wait){
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wint-conversion"
  int sysret = fd;
  register long int r10 asm ("r10") = exceptfd;
  register long int r8 asm ("r8") = wait;
  asm volatile ("syscall" : "=a" (sysret) : "a" ( (23 | 0 ) ) , "D" (sysret), "S" (readfd), "d" (writefd), "r" (r10), "r" (r8) : "memory","rcx", "r11" );
  if ( sysret<0){
    errno = -sysret;
    return(-1);}
  return(sysret);
#pragma GCC diagnostic pop
}
// 1931 "./minilib.h" 2
// 1995 "./minilib.h"
#define printfs(fmt,...) fprintfs(stdout, fmt, __VA_ARGS__)
// 2015 "./minilib.h"
#define puts(msg) ( print(msg) + printl() )
// 2095 "./minilib.h"
static int execvpe(const char *file, char *const argv[], char *const envp[]);
// 2110 "./minilib.h"
int strncmp(const char*c1,const char*c2,int len);
// 2120 "./minilib.h"
unsigned long djb2_hash(const unsigned char *str);
// 2140 "./minilib.h"
#define getchar() fgetc(0)
// 2160 "./minilib.h"
static int sigfillset(sigset_t *set);
// 2175 "./minilib.h"
int volatile creat( const char *s, int mode );
int system( const char* command );
// 2200 "./minilib.h"
int strcmp(const char*c1,const char*c2);
// 2265 "./minilib.h"
int unlockpt(int fd);
// 2290 "./minilib.h"
int itohex(int i,char* buf,int padding);
// 2325 "./minilib.h"
#define printsl(...) _mprints(__VA_ARGS__,"\n",0)
FILE *fopen(const char* filename, const char* mode);
// 2345 "./minilib.h"
char *ptsname(int fd);
// 2360 "./minilib.h"
char *strcat(char *dest, const char *src );
// 2397 "./minilib.h"
// 1 "./minilib/include/tcsetattr.h" 1
#define tcsetattr_h 
int ioctl( int fd, unsigned long int request, ... );
// 20 "./minilib/include/tcsetattr.h"
static inline int __attribute__((always_inline)) tcsetattr(int fd, int opt, const struct termios *io){
 return(ioctl(fd, 0x5402 +opt, io));
}
// 2398 "./minilib.h" 2
// 2412 "./minilib.h"
void *memset( void *s, int c, int n);
sighandler_t signal(int sig, sighandler_t func );
// 2432 "./minilib.h"
int strncasecmp(const char*c1,const char*c2,int len);
// 2457 "./minilib.h"
unsigned int volatile usleep(unsigned int useconds);
// 2472 "./minilib.h"
int isspace(int c);
// 2542 "./minilib.h"
#define itobin(A,B,...) _itobin(A,B,VARARG(SHIFT(__VA_ARGS__),0), VARARG(SHIFT(ARG( __VA_ARGS__ )),32) )
// 2562 "./minilib.h"
#define getc(F) fgetc(F)
// 2617 "./minilib.h"
int sigaddset(sigset_t *set, int sig);
// 2672 "./minilib.h"
#define putchar(c) fputc(c,stdout)
// 2687 "./minilib.h"
#define eprintfs(fmt,...) fprintfs(stderr, fmt, __VA_ARGS__)
// 2707 "./minilib.h"
#define fprint(...) fprintf(__VA_ARGS__)
unsigned int volatile sleep(unsigned int seconds);
// 2727 "./minilib.h"
int sigprocmask(int how, const sigset_t *set, sigset_t *oldset);
// 2737 "./minilib.h"
#define eputs(msg) ( eprint(msg) + eprintl() )
// 2797 "./minilib.h"
long int strtol(const char *c, char **endp, int base);
// 2812 "./minilib.h"
#define writes(str) write(STDOUT_FILENO,str,sizeof(str))
// 2822 "./minilib.h"
#define gets(F) fgets(F,0xfffffff,stdin)
// 2862 "./minilib.h"
FILE *fdopen(int fd, const char* mode);
// 2872 "./minilib.h"
int todo_putenv( char *s );
// 2882 "./minilib.h"
pid_t wait(int *wstatus);
// 2937 "./minilib.h"
#define printf(...) fprintf(stdout,__VA_ARGS__)
char *basename(char *path);
// 2972 "./minilib.h"
const char *errno_str(int err);
// 2997 "./minilib.h"
char *strncpy(char *dest, const char *src, int n);
// 3032 "./minilib.h"
char *strrchr(const char *s, int c);
// 3142 "./minilib.h"
static inline int raise(int signr);
// 3162 "./minilib.h"
unsigned long sdbm_hash(const unsigned char *str);
// 3202 "./minilib.h"
void srand( unsigned int i );
// 3282 "./minilib.h"
int posix_openpt(int flags);
// 3307 "./minilib.h"
int sigismember(sigset_t *set, int sig);
// 3317 "./minilib.h"
static inline int execv(const char *pathname, char *const argv[]);
// 3332 "./minilib.h"
static inline int execvp(const char *file, char *const argv[]);
// 3347 "./minilib.h"
int ltodec(long i, char *buf, int prec, char limiter );
// 3442 "./minilib.h"
char *strdup(const char *source);
// 519 "/dev/fd/63" 2
// 1 "<command-line>" 2
// 1 "minilib.h"
#endif
#endif
