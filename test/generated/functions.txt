memset:void *memset( void *s, int c, int n);

strerror:char* strerror( int errnum );

rand:unsigned int rand();

snprintf:int snprintf( char *buf, size_t size, const char *fmt, ... );

creat: int  ) creat( const char *s, int mode );

memcpy:void *memcpy( void *d, const void *s, int n );

uname:uname(struct old_utsname *name )

opendir:DIR *opendir(const char *name);

_itohex:int _itohex(int i,char* buf,int padding, int capitals);

dup2:dup2(int a1, int a2)		

fstat:fstat(int a1,struct stat* a2)		

srand:void srand( unsigned int i );

strncmp:int strncmp(const char*c1,const char*c2,int len);

fgetc:  int fgetc(FILE *F);

tcsetattr:  int ) tcsetattr(int fd, int opt, const struct termios *io);

itohex:int itohex(int i,char* buf,int padding);

setgid:setgid( gid_t gid)

unlink:unlink( const char* a1)		

feof:  int feof(FILE *f);

ltodec:int ltodec(long i, char *buf, int prec, char limiter );

strcpy:char *strcpy(char *dest, const char *src);

getcwd:getcwd(char *buf,long size)		

itoHEX:int itoHEX(int i,char* buf,int padding);

dup3:dup3(int a1, int a2, int a3)		

fflush:  int ) fflush( FILE *F );

fchown:fchown( unsigned int fd,  uid_t user,  gid_t group)

open:int  open( const char *s, int flags, ... );

isatty:int isatty(int fd);

fread:  size_t fread(void *ptr, size_t size, size_t nmemb, FILE *f);

fopen:FILE *fopen(const char* filename, const char* mode);

basename:char *basename(char *path);

setsid:DEF_syscall(setsid,0 )

ferror:  int ferror(FILE *f);

fwrite:  size_t fwrite(const void *ptr, size_t size, size_t nmemb, FILE *f);

isspace:int isspace(int c);

mprotect:mprotect( POINTER *a1, POINTER a2, int a3 )

_strcmp:int _strcmp(const char*c1,const char*c2,int len);

dprintf:int dprintf( int fd, const char *fmt, ... );

fputs:  int  fputs(const char *c, FILE *F);

fseek:  int fseek(FILE *f, long offset, int whence );

select:  int  ) select(int fd,  fd_set* readfd,  fd_set *writefd,  fd_set *exceptfd,  struct timeval *wait);

ultodec:int ultodec(unsigned long i, char *buf, int prec, char limiter );

rewind:  void rewind( FILE *f );

lseek:lseek(unsigned int a1, int a2, int a3 )

strcat:char *strcat(char *dest, const char *src );

stat:stat(const char* filename,struct stat* a2)		

free:void  free(void* p);

close:close( int fd )

dup:dup(int a1)		

fgetpos:  void fgetpos(FILE *f, long *pos );

strcmp:int strcmp(const char*c1,const char*c2);

read:read( int fd, POINTER *buf, int len )

rename:rename( const char* oldpath, const char* newpath )		

perror:void perror(char *msg);

write:write(int fd,const void *buf, int len )

atoi:int atoi(char *c);

tcgetattr:  int ) tcgetattr(int fd, struct termios *io);

ftruncate:ftruncate(unsigned int a1, unsigned int a2 )

getpid:DEF_syscall(getpid,0 )

vhangup:DEF_syscall(vhangup,0 )

time:time(unsigned int *a1 )

uitodec:int uitodec(unsigned int i, char *buf, int prec, char limiter );

_itobin:int _itobin(int i, char*buf, int prec, int groups );

fsync:fsync(int a1 )

fchmod:fchmod( unsigned int fd,  mode_t mode)

fileno:  int ) fileno( FILE *f );

vsnprintf:int vsnprintf(char *buf, size_t size, const char* fmt, va_list args );

setvbuf:int setvbuf(FILE *stream, char *buf, int mode, size_t size);

fclose:  int ) fclose( FILE* f );

isprint:  int ) isprint(const char c);

memfrob:void* memfrob(void* s, unsigned int len);

malloc:void*  malloc(int size);

closedir:int closedir(DIR *dir);

memcmp:int memcmp(const void* c1,const void* c2,int len);

setbuf:void setbuf(FILE *stream, char *buf);

strncpy:char *strncpy(char *dest, const char *src, int n);

fputc:  int  fputc(int c, FILE* F);

gettimeofday:gettimeofday( struct timeval *a1, struct timezone *a2)

readdir:struct dirent *readdir(DIR *dir);

fprintfs:int fprintfs( FILE* F, char *fmt, ...);

getdents:getdents( unsigned int fd, struct dirent *direntry, unsigned int count )

dtodec:int dtodec(double d, char* buf, int precision);

getenv:char *getenv(const char* name);

clearerror:  void clearerror(FILE *f);

ftell:  long ftell(FILE *f);

setuid:setuid( uid_t uid)

chdir:chdir(const char* path)		

fsetpos:  int fsetpos(FILE *f, int pos );

ioctl:int ioctl( int fd, unsigned long int request, ... );

itodec:int itodec(int i, char *buf, int prec, char limiter );

strlen:int strlen(const char*str);

