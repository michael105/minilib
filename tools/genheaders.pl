#!/bin/perl -w
#
my $fhhash;
my $ansidir = shift;


sub ansifh{
		my $ansi = shift;
		if ( ! exists($fhhash->{fh}->{$ansi}) ){
				open( $fhhash->{fh}->{$ansi}, ">", "$ansidir/$ansi" ) or die;
				my $h = $ansi;
				$h =~ s/\./_/g;
				print {$fhhash->{fh}->{$ansi}} "// Header generated by tools/genheaders.pl\n".
								"// Put changes into $ansi.in\n\n#ifndef ansi_$h\n#define ansi_$h\n\n";

				if ( -e "$ansidir/$ansi.in" ){
						open(FH,"<", "$ansidir/$ansi.in" ) or die;
						while ( <FH> ){
								print {$fhhash->{fh}->{$ansi}} $_;
						}
						print {$fhhash->{fh}->{$ansi}} "\n\n";
						close FH;
				} 

		}
		return( $fhhash->{fh}->{$ansi} );
}


while ( my $f = shift ){
		open (F, "<", $f) or die;

		my $ansi = 0;

		while ( my $l= <F>){
				my $def = 0;
				my $tag = 0;

				if ($l=~ /^\/\/\+/){
						do {
								$l=~ /^\/\/\+(\S*)/;
								$tag = $1;
								print "tag: $tag\n";

								if ( $tag eq 'ansi' ){
										print "l: $l";
										$l =~ /^\/\/\+ansi (\S*)/;
										$ansi = $1 or die;
								} elsif ( $tag eq 'def' ){
										$def = <F>;
										print "def: $def, l: $l";
										$def =~ s/\{.*$/;/;
								} elsif ( $tag eq 'inc' ){
										print {ansifh($ansi)} "// file: $f\n#include \"$f\"\n";
								}
								$l = <F>;
								$tag = 0;
						} while (defined($l) && ($l=~ /^\/\/\+(\S*)/) );
						if ( $ansi && $def ){
								print "ansi: $ansi\n def: $def\n";
								print {ansifh($ansi)} "// file: $f\n$def\n";
								$fhhash->{sources}->{$ansi}->{$f} = 1;
						}
				}
		}

}


foreach my $key ( keys(%{$fhhash->{fh}}) ){
		print "key: $key\n";
		print {$fhhash->{fh}->{$key}} "\n\nextern int mbufsize;\n";
		print {$fhhash->{fh}->{$key}} "\n\n#ifdef mini_INCLUDESRC\n";
		foreach my $s ( keys(%{$fhhash->{sources}->{$key}}) ){
				print "source key: $s\n";
				print {$fhhash->{fh}->{$key}} "#include \"$s\"\n";
		}
		print {$fhhash->{fh}->{$key}} "// Need mbuf.c included. Doesn't matter by which file.\n#include \"src/mbuf.c\"\n";
		print {$fhhash->{fh}->{$key}} "// Need start.c included. Doesn't matter by which file.\n#include \"asm/start.c\"\n";
		print {$fhhash->{fh}->{$key}} "#endif\n\n";

		print {$fhhash->{fh}->{$key}} "#endif\n";
		close( $fhhash->{fh}->{$key} );
}

