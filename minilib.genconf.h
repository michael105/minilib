// This file is part of minilib, (c) 2012-2019 Michael Misc Myer.
// misc.myer@zoho.com / www.github.com/michael105
// Licensed under BSD License.
// Please see the files LICENSE and NOTICE for the exact conditions. 



// Everything below will be silently overwritten,
// when make header ist invoked

// --- define_macros-start: generate --- //
#define strcat(...) _M_MLIB_strcat_M_(__VA_ARGS__)
#define _itobin(...) _M_MLIB__itobin_M_(__VA_ARGS__)
#define ioctl(...) _M_MLIB_ioctl_M_(__VA_ARGS__)
#define fprintf(...) _M_MLIB_fprintf_M_(__VA_ARGS__)
#define creat(...) _M_MLIB_creat_M_(__VA_ARGS__)
#define fileno(...) _M_MLIB_fileno_M_(__VA_ARGS__)
#define memset(...) _M_MLIB_memset_M_(__VA_ARGS__)
#define dup(...) _M_MLIB_dup_M_(__VA_ARGS__)
#define getenv(...) _M_MLIB_getenv_M_(__VA_ARGS__)
#define time(...) _M_MLIB_time_M_(__VA_ARGS__)
#define snprintf(...) _M_MLIB_snprintf_M_(__VA_ARGS__)
#define strcmp(...) _M_MLIB_strcmp_M_(__VA_ARGS__)
#define gettimeofday(...) _M_MLIB_gettimeofday_M_(__VA_ARGS__)
#define stat(...) _M_MLIB_stat_M_(__VA_ARGS__)
#define open(...) _M_MLIB_open_M_(__VA_ARGS__)
#define strncmp(...) _M_MLIB_strncmp_M_(__VA_ARGS__)
#define getpid(...) _M_MLIB_getpid_M_(__VA_ARGS__)
#define fclose(...) _M_MLIB_fclose_M_(__VA_ARGS__)
#define write(...) _M_MLIB_write_M_(__VA_ARGS__)
#define strncpy(...) _M_MLIB_strncpy_M_(__VA_ARGS__)
#define dup2(...) _M_MLIB_dup2_M_(__VA_ARGS__)
#define fstat(...) _M_MLIB_fstat_M_(__VA_ARGS__)
#define unlink(...) _M_MLIB_unlink_M_(__VA_ARGS__)
#define print(...) _M_MLIB_print_M_(__VA_ARGS__)
#define memcmp(...) _M_MLIB_memcmp_M_(__VA_ARGS__)
#define isprint(...) _M_MLIB_isprint_M_(__VA_ARGS__)
#define def(...) _M_MLIB_def_M_(__VA_ARGS__)
#define isspace(...) _M_MLIB_isspace_M_(__VA_ARGS__)
#define rewind(...) _M_MLIB_rewind_M_(__VA_ARGS__)
#define tcgetattr(...) _M_MLIB_tcgetattr_M_(__VA_ARGS__)
#define strlen(...) _M_MLIB_strlen_M_(__VA_ARGS__)
#define rand(...) _M_MLIB_rand_M_(__VA_ARGS__)
#define fgetpos(...) _M_MLIB_fgetpos_M_(__VA_ARGS__)
#define atoi(...) _M_MLIB_atoi_M_(__VA_ARGS__)
#define fputc(...) _M_MLIB_fputc_M_(__VA_ARGS__)
#define feof(...) _M_MLIB_feof_M_(__VA_ARGS__)
#define vsnprintf(...) _M_MLIB_vsnprintf_M_(__VA_ARGS__)
#define read(...) _M_MLIB_read_M_(__VA_ARGS__)
#define fwrite(...) _M_MLIB_fwrite_M_(__VA_ARGS__)
#define uitodec(...) _M_MLIB_uitodec_M_(__VA_ARGS__)
#define getcwd(...) _M_MLIB_getcwd_M_(__VA_ARGS__)
#define sprintf(...) _M_MLIB_sprintf_M_(__VA_ARGS__)
#define fseek(...) _M_MLIB_fseek_M_(__VA_ARGS__)
#define puts(...) _M_MLIB_puts_M_(__VA_ARGS__)
#define ftruncate(...) _M_MLIB_ftruncate_M_(__VA_ARGS__)
#define dprintf(...) _M_MLIB_dprintf_M_(__VA_ARGS__)
#define memcpy(...) _M_MLIB_memcpy_M_(__VA_ARGS__)
#define fread(...) _M_MLIB_fread_M_(__VA_ARGS__)
#define itodec(...) _M_MLIB_itodec_M_(__VA_ARGS__)
#define free(...) _M_MLIB_free_M_(__VA_ARGS__)
#define dtodec(...) _M_MLIB_dtodec_M_(__VA_ARGS__)
#define printf(...) _M_MLIB_printf_M_(__VA_ARGS__)
#define rename(...) _M_MLIB_rename_M_(__VA_ARGS__)
#define fsync(...) _M_MLIB_fsync_M_(__VA_ARGS__)
#define printl(...) _M_MLIB_printl_M_(__VA_ARGS__)
#define dup3(...) _M_MLIB_dup3_M_(__VA_ARGS__)
#define _itohex(...) _M_MLIB__itohex_M_(__VA_ARGS__)
#define prints(...) _M_MLIB_prints_M_(__VA_ARGS__)
#define tcsetattr(...) _M_MLIB_tcsetattr_M_(__VA_ARGS__)
#define lseek(...) _M_MLIB_lseek_M_(__VA_ARGS__)
#define putchar(...) _M_MLIB_putchar_M_(__VA_ARGS__)
#define fputs(...) _M_MLIB_fputs_M_(__VA_ARGS__)
#define malloc(...) _M_MLIB_malloc_M_(__VA_ARGS__)
#define memfrob(...) _M_MLIB_memfrob_M_(__VA_ARGS__)
#define ftell(...) _M_MLIB_ftell_M_(__VA_ARGS__)
#define fopen(...) _M_MLIB_fopen_M_(__VA_ARGS__)
#define strerror(...) _M_MLIB_strerror_M_(__VA_ARGS__)
#define srand(...) _M_MLIB_srand_M_(__VA_ARGS__)
#define strcpy(...) _M_MLIB_strcpy_M_(__VA_ARGS__)
#define select(...) _M_MLIB_select_M_(__VA_ARGS__)
#define fsetpos(...) _M_MLIB_fsetpos_M_(__VA_ARGS__)
#define mprotect(...) _M_MLIB_mprotect_M_(__VA_ARGS__)
#define close(...) _M_MLIB_close_M_(__VA_ARGS__)
#define itoHEX(...) _M_MLIB_itoHEX_M_(__VA_ARGS__)
#define itohex(...) _M_MLIB_itohex_M_(__VA_ARGS__)
// --- define_macros-end: generate --- //
