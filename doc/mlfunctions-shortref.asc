 implemented functions
=======================

short ref, links to source files.

Only functions defined are going to be built.

To define them, either do (for, e.g. puts) `#define mini_puts`
before you include minilib.h

Or, use the config script.: `mini_puts`

Some functions define other functions, these will be listed in the line,
starting with `Define:`


An example, using the scripting config, is given below:
(miniputs.c)
----
#if 0
mini_start
mini_puts

LDSCRIPT text_and_bss
INCLUDESRC
shrinkelf

return
#endif

int main(){
  puts("Hello, world!");
  return(0);
}
----

compile with ./mini-gcc --config miniputs.c -o miniputs miniputs.c

(what compiles to an annoying size of 251 Bytes here. Something again bloats.
replacing the puts with writes, there still are 208 Bytes. This used to
be 151 Bytes. Have to sort this out.)

:toc:






 ctype.h
---------

def::

  #define SETOPT_short( opts, option ) (;
 +
  (link:../macros/getoptm.h[../macros/getoptm.h] l.52)  +
Set a option flag(s) (bit(s))  manually. +
 		param options: e.g. just a, or ( a+h+l) to check for several flags at once +
 

isascii::

  #define isascii(a) (0 ? isascii(a) : (unsigned)(a) < 128)
 +
  (link:../include/ctype.h[../include/ctype.h] l.37) manpage: link:manpages/locale/isascii.3.rst[isascii] +


isprint::

  static inline int __attribute__((always_inline)) isprint(const char c);
 +
  (link:../include/isprint.h[../include/isprint.h] l.8) manpage: link:manpages/locale/isprint.3.rst[isprint] +


isspace::

  #define isspace(a) __isspace(a)
 +
  (link:../include/ctype.h[../include/ctype.h] l.25) manpage: link:manpages/locale/isspace.3.rst[isspace] +




 declarations.h
----------------

brk::

  brk( unsigned long brk)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.154) manpage: link:manpages/sys/brk.2.rst[brk] +


chmod::

  chmod( const char *filename, mode_t mode)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.145) manpage: link:manpages/sys/chmod.2.rst[chmod] +


dup3::

  dup3(int a1, int a2, int a3)		
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.122) manpage: link:manpages/gen/dup3.3.rst[dup3] +


fchmod::

  fchmod( unsigned int fd, mode_t mode)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.118) manpage: link:manpages/sys/chmod.2.rst[fchmod] +


fchown::

  fchown( unsigned int fd, uid_t user, gid_t group)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.117) manpage: link:manpages/sys/chown.2.rst[fchown] +


fcntl::

  fcntl( unsigned int fd, unsigned int cmd, unsigned long arg)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.142) manpage: link:manpages/sys/fcntl.2.rst[fcntl] +


fstat::

  fstat(int a1,struct stat* a2)		
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.113) manpage: link:manpages/sys/stat.2.rst[fstat] +


getcwd::

  getcwd( char *buf,  unsigned long size)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.157) manpage: link:manpages/gen/getcwd.3.rst[getcwd] +


getdents::

  getdents( unsigned int fd, struct dirent *direntry, unsigned int count )
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.107) manpage: link:manpages/sys/getdirentries.2.rst[getdents] +


getppid::

  DEF_syscall(getppid,0)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.150) manpage: link:manpages/sys/getpid.2.rst[getppid] +


gettimeofday::

  gettimeofday( struct timeval *a1, struct timezone *a2)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.91) manpage: link:manpages/sys/gettimeofday.2.rst[gettimeofday] +


kill::

  kill( pid_t pid,  int sig)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.155) manpage: link:manpages/sys/kill.2.rst[kill] +


mount::

  mount( char *dev_name,  char *dir_name,  char *type,  unsigned long flags,  void *data)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.159) manpage: link:manpages/sys/mount.2.rst[mount] +


mprotect::

  mprotect( POINTER *a1, POINTER a2, int a3 )
 +
 Returns: *a1 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.99) manpage: link:manpages/sys/mprotect.2.rst[mprotect] +


nanosleep::

  nanosleep( struct timespec *rqtp, struct timespec *rmtp)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.130) manpage: link:manpages/sys/nanosleep.2.rst[nanosleep] +


pivot_root::

  pivot_root( const char *new_root,  const char *put_old)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.133)  +


readahead::

  readahead( int fd,  loff_t offset,  size_t count)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.160)  +


reboot::

  reboot( int magic1,  int magic2,  unsigned int cmd,  void *arg)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.161) manpage: link:manpages/sys/reboot.2.rst[reboot] +


rt_sigaction::

  rt_sigaction( int sig,  const struct sigaction *act,  struct sigaction *oact,  size_t sigsetsize)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.131)  +


sendfile::

  sendfile( int out_fd,  int in_fd,  off_t *offset,  size_t count)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.156) manpage: link:manpages/sys/sendfile.2.rst[sendfile] +


stat::

  stat(const char* filename,struct stat* a2)		
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.114) manpage: link:manpages/sys/stat.2.rst[stat] +


sync::

  DEF_syscall(sync,0)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.158) manpage: link:manpages/sys/sync.2.rst[sync] +


umask::

  umask( int mask)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.144) manpage: link:manpages/sys/umask.2.rst[umask] +


uname::

  uname(struct old_utsname *name )
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.105) manpage: link:manpages/gen/uname.3.rst[uname] +


utime::

  utime( char *filename, struct utimbuf *times)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.149) manpage: link:manpages/gen/utime.3.rst[utime] +


vfork::

  DEF_syscall(vfork,0)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.129) manpage: link:manpages/sys/vfork.2.rst[vfork] +


vhangup::

  DEF_syscall(vhangup,0 )
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.98)  +


wait4::

  wait4( pid_t upid,  int *stat_addr,  int options,  struct rusage *ru)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.163) manpage: link:manpages/sys/wait.2.rst[wait4] +




 dirent.h
----------

closedir::

  int closedir(DIR *dir);
 +
  Defines: free +
 (link:../src/dirent/closedir.c[../src/dirent/closedir.c] l.6) manpage: link:manpages/gen/directory.3.rst[closedir] +


opendir::

  DIR *opendir(const char *name);
 +
  Defines: malloc open close +
 (link:../src/dirent/opendir.c[../src/dirent/opendir.c] l.10) manpage: link:manpages/gen/directory.3.rst[opendir] +


readdir::

  struct dirent *readdir(DIR *dir);
 +
  (link:../src/dirent/readdir.c[../src/dirent/readdir.c] l.9) manpage: link:manpages/gen/directory.3.rst[readdir] +




 fcntl.h
---------

creat::

  inline int volatile __attribute__((always_inline)) creat( const char *s, int mode );
 +
  (link:../src/open.c[../src/open.c] l.30) manpage: link:manpages/compat-43/creat.2.rst[creat] +




 ioctl.h
---------

ioctl::

  int ioctl( int fd, unsigned long int request, ... );
 +
  (link:../src/ioctl.c[../src/ioctl.c] l.11) manpage: link:manpages/sys/ioctl.2.rst[ioctl] +




 mini_addons.h
---------------

__sysctl::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.315)  +


_accept::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.91)  +


_accept4::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.551)  +


_access::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.47)  +


_acct::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.329)  +


_add_key::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.471)  +


_adjtimex::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.321)  +


_alarm::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.79)  +


_arch_prctl::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.319)  +


_bind::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.103)  +


_bpf::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.617)  +


_brk::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.29)  +


_capget::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.255)  +


_capset::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.257)  +


_chdir::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.165)  +


_chmod::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.185)  +


_chown::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.189)  +


_chroot::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.325)  +


_clock_adjtime::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.585)  +


_clock_getres::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.435)  +


_clock_gettime::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.433)  +


_clock_nanosleep::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.437)  +


_clock_settime::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.431)  +


_clone::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.117)  +


_close::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.11)  +


_connect::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.89)  +


_creat::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.175)  +


_delete_module::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.353)  +


_dup::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.69)  +


_dup2::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.71)  +


_dup3::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.559)  +


_epoll_create::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.407)  +


_epoll_create1::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.557)  +


_epoll_ctl::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.443)  +


_epoll_pwait::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.537)  +


_epoll_wait::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.441)  +


_eventfd::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.543)  +


_eventfd2::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.555)  +


_execve::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.123)  +


_exit::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.125) manpage: link:manpages/sys/_exit.2.rst[_exit] +


_exit_group::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.439)  +


_faccessat::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.513)  +


_fadvise64::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.419)  +


_fallocate::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.545)  +


_fanotify_init::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.575)  +


_fanotify_mark::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.577)  +


_fchdir::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.167)  +


_fchmod::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.187)  +


_fchmodat::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.511)  +


_fchown::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.191)  +


_fchownat::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.495)  +


_fcntl::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.149)  +


_fdatasync::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.155)  +


_fgetxattr::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.371)  +


_finit_module::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.601)  +


_flistxattr::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.377)  +


_flock::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.151)  +


_fork::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.119)  +


_fremovexattr::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.383)  +


_fsetxattr::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.365)  +


_fstat::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.15)  +


_fstatfs::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.279)  +


_fsync::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.153)  +


_ftruncate::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.159)  +


_futex::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.389)  +


_futimesat::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.497)  +


_get_mempolicy::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.453)  +


_get_robust_list::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.523)  +


_getcpu::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.593)  +


_getcwd::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.163)  +


_getdents::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.161)  +


_getdents64::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.411)  +


_getegid::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.221)  +


_geteuid::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.219)  +


_getgid::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.213)  +


_getgroups::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.235)  +


_getitimer::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.77)  +


_getpeername::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.109)  +


_getpgid::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.247)  +


_getpgrp::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.227)  +


_getpid::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.83)  +


_getppid::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.225)  +


_getpriority::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.283)  +


_getrandom::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.611)  +


_getresgid::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.245)  +


_getresuid::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.241)  +


_getrlimit::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.199)  +


_getrusage::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.201)  +


_getsid::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.253)  +


_getsockname::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.107)  +


_getsockopt::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.115)  +


_gettid::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.357)  +


_gettimeofday::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.197)  +


_getuid::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.209)  +


_getxattr::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.367)  +


_init_module::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.351)  +


_inotify_add_watch::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.483)  +


_inotify_init::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.481)  +


_inotify_init1::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.563)  +


_inotify_rm_watch::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.485)  +


_io_cancel::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.403)  +


_io_destroy::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.397)  +


_io_getevents::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.399)  +


_io_setup::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.395)  +


_io_submit::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.401)  +


_ioctl::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.37)  +


_ioperm::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.349)  +


_iopl::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.347)  +


_ioprio_get::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.479)  +


_ioprio_set::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.477)  +


_itobin::

  int _itobin(int i, char*buf, int prec, int groups );
 +
  (link:../src/itobin.c[../src/itobin.c] l.8)  +


_kcmp::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.599)  +


_kexec_file_load::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.615)  +


_kexec_load::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.467)  +


_keyctl::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.475)  +


_kill::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.129)  +


_lchown::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.193)  +


_lgetxattr::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.369)  +


_link::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.177)  +


_linkat::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.505)  +


_listen::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.105)  +


_listxattr::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.373)  +


_llistxattr::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.375)  +


_lookup_dcookie::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.405)  +


_lremovexattr::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.381)  +


_lseek::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.21)  +


_lsetxattr::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.363)  +


_lstat::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.17)  +


_madvise::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.61)  +


_mbind::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.449)  +


_memfd_create::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.613)  +


_migrate_pages::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.487)  +


_mincore::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.59)  +


_mkdir::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.171)  +


_mkdirat::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.491)  +


_mknod::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.271)  +


_mknodat::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.493)  +


_mlock::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.301)  +


_mlockall::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.305)  +


_mmap::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.23)  +


_modify_ldt::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.311)  +


_mount::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.333)  +


_move_pages::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.533)  +


_mprints::

  #define _mprints(...) dprints(STDOUT_FILENO, __VA_ARGS__)
 +
  Defines: dprints +
 (link:../src/prints.c[../src/prints.c] l.68)  +


_mprotect::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.25)  +


_mq_getsetattr::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.465)  +


_mq_notify::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.463)  +


_mq_open::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.455)  +


_mq_timedreceive::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.461)  +


_mq_timedsend::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.459)  +


_mq_unlink::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.457)  +


_mremap::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.55)  +


_msgctl::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.147)  +


_msgget::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.141)  +


_msgrcv::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.145)  +


_msgsnd::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.143)  +


_msync::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.57)  +


_munlock::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.303)  +


_munlockall::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.307)  +


_munmap::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.27)  +


_name_to_handle_at::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.581)  +


_nanosleep::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.75)  +


_newfstatat::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.499)  +


_open::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.9)  +


_open_by_handle_at::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.583)  +


_openat::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.489)  +


_pause::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.73)  +


_perf_event_open::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.571)  +


_personality::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.273)  +


_pipe::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.49)  +


_pipe2::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.561)  +


_pivot_root::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.313)  +


_poll::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.19)  +


_ppoll::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.517)  +


_prctl::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.317)  +


_pread64::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.39)  +


_preadv::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.565)  +


_prlimit64::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.579)  +


_process_vm_readv::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.595)  +


_process_vm_writev::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.597)  +


_pselect6::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.515)  +


_ptrace::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.207)  +


_pwrite64::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.41)  +


_pwritev::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.567)  +


_quotactl::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.355)  +


_read::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.5)  +


_readahead::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.359)  +


_readlink::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.183)  +


_readlinkat::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.509)  +


_readv::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.43)  +


_reboot::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.341)  +


_recvfrom::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.95)  +


_recvmmsg::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.573)  +


_recvmsg::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.99)  +


_remap_file_pages::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.409)  +


_removexattr::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.379)  +


_rename::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.169)  +


_renameat::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.503)  +


_renameat2::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.607)  +


_request_key::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.473)  +


_restart_syscall::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.415)  +


_rmdir::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.173)  +


_rt_sigaction::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.31)  +


_rt_sigpending::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.259)  +


_rt_sigprocmask::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.33)  +


_rt_sigqueueinfo::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.263)  +


_rt_sigreturn::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.35)  +


_rt_sigsuspend::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.265)  +


_rt_sigtimedwait::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.261)  +


_rt_tgsigqueueinfo::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.569)  +


_sched_get_priority_max::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.295)  +


_sched_get_priority_min::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.297)  +


_sched_getaffinity::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.393)  +


_sched_getattr::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.605)  +


_sched_getparam::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.289)  +


_sched_getscheduler::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.293)  +


_sched_rr_get_interval::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.299)  +


_sched_setaffinity::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.391)  +


_sched_setattr::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.603)  +


_sched_setparam::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.287)  +


_sched_setscheduler::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.291)  +


_sched_yield::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.53)  +


_seccomp::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.609)  +


_select::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.51)  +


_semctl::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.137)  +


_semget::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.133)  +


_semop::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.135)  +


_semtimedop::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.417)  +


_sendfile::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.85)  +


_sendmmsg::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.589)  +


_sendmsg::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.97)  +


_sendto::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.93)  +


_set_mempolicy::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.451)  +


_set_robust_list::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.521)  +


_set_tid_address::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.413)  +


_setdomainname::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.345)  +


_setfsgid::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.251)  +


_setfsuid::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.249)  +


_setgid::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.217)  +


_setgroups::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.237)  +


_sethostname::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.343)  +


_setitimer::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.81)  +


_setns::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.591)  +


_setpgid::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.223)  +


_setpriority::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.285)  +


_setregid::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.233)  +


_setresgid::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.243)  +


_setresuid::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.239)  +


_setreuid::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.231)  +


_setrlimit::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.323)  +


_setsid::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.229)  +


_setsockopt::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.113)  +


_settimeofday::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.331)  +


_setuid::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.215)  +


_setxattr::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.361)  +


_shmat::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.65)  +


_shmctl::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.67)  +


_shmdt::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.139)  +


_shmget::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.63)  +


_shutdown::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.101)  +


_sigaltstack::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.267)  +


_signalfd::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.539)  +


_signalfd4::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.553)  +


_socket::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.87)  +


_socketpair::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.111)  +


_splice::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.525)  +


_stat::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.13)  +


_statfs::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.277)  +


_strcasecmp::

  int _strcasecmp(const char*c1,const char*c2,int len);
 +
  Defines: tolower +
 (link:../src/strcmp.c[../src/strcmp.c] l.30)  +


_strcmp::

  int _strcmp(const char*c1,const char*c2,int len);
 +
  (link:../src/strcmp.c[../src/strcmp.c] l.13)  +


_swapoff::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.339)  +


_swapon::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.337)  +


_symlink::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.181)  +


_symlinkat::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.507)  +


_sync::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.327)  +


_sync_file_range::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.529)  +


_syncfs::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.587)  +


_sysfs::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.281)  +


_sysinfo::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.203)  +


_syslog::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.211)  +


_tee::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.527)  +


_tgkill::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.445)  +


_time::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.387)  +


_timer_create::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.421)  +


_timer_delete::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.429)  +


_timer_getoverrun::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.427)  +


_timer_gettime::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.425)  +


_timer_settime::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.423)  +


_timerfd_create::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.541)  +


_timerfd_gettime::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.549)  +


_timerfd_settime::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.547)  +


_times::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.205)  +


_tkill::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.385)  +


_truncate::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.157)  +


_umask::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.195)  +


_umount2::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.335)  +


_uname::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.131)  +


_unlink::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.179)  +


_unlinkat::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.501)  +


_unshare::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.519)  +


_ustat::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.275)  +


_utime::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.269)  +


_utimensat::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.535)  +


_utimes::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.447)  +


_vfork::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.121)  +


_vhangup::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.309)  +


_vmsplice::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.531)  +


_wait4::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.127)  +


_waitid::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.469)  +


_write::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.7)  +


_writev::

  (link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.45)  +


basename::

  char *basename(char *path);
 +
  Defines: strlen +
 (link:../src/basename.c[../src/basename.c] l.29) manpage: link:manpages/gen/basename.3.rst[basename] +


def::

  #define SETOPT_short( opts, option ) (;
 +
  (link:../macros/getoptm.h[../macros/getoptm.h] l.52)  +
Set a option flag(s) (bit(s))  manually. +
 		param options: e.g. just a, or ( a+h+l) to check for several flags at once +
 

dirname::

  char *dirname(char *s);
 +
  Defines: strlen +
 (link:../src/dirname.c[../src/dirname.c] l.8) manpage: link:manpages/gen/dirname.3.rst[dirname] +


dprintf::

  int dprintf( int fd, const char *fmt, ... );
 +
  Defines: write +
 (link:../src/sprintf.c[../src/sprintf.c] l.202) manpage: link:manpages/stdio/printf.3.rst[dprintf] +


dtodec::

  int dtodec(double d, char* buf, int precision);
 +
  Defines: uitodec +
 (link:../src/dtodec.c[../src/dtodec.c] l.10)  +


fprintfs::

  int fprintfs( FILE* F, char *fmt, ...);
 +
  Defines: write fileno strlen +
 (link:../src/fprintfs.c[../src/fprintfs.c] l.10)  +
prints formatted to the stream F.only %s is recognized.no mini_buf needed, so using fprintfs instead of fprintf can save some sections / bytes. +
 

fprints::

  #define fprints(F,str) write(fileno(F),str,strlen(str))
 +
  Defines: write fileno strlen +
 (link:../include/prints.h[../include/prints.h] l.17)  +
print the string(s) supplied as arg(s) to stream +
 

fwrites::

  #define fwrites(fd,str) write(fd,str,sizeof(str))
 +
  Defines: write +
 (link:../include/prints.h[../include/prints.h] l.39)  +
write the constant str to stdout. Computes length with sizeof(str) at compile time. +
 

grantpt::

  int grantpt(int fd);
 +
  (link:../src/pty.c[../src/pty.c] l.13) manpage: link:manpages/stdlib/ptsname.3.rst[grantpt] +


itobin::

  #define itobin(A,B,...) _itobin(A,B,VARARG(SHIFT(__VA_ARGS__),0), VARARG(SHIFT(ARG( __VA_ARGS__ )),32) )
 +
  Defines:  +
 (link:../src/itobin.c[../src/itobin.c] l.41)  +


itodec::

  int itodec(int i, char *buf, int prec, char limiter );
 +
  Defines: uitodec +
 (link:../src/itodec.c[../src/itodec.c] l.121)  +


ltodec::

  int ltodec(long i, char *buf, int prec, char limiter );
 +
  (link:../src/ltodec.c[../src/ltodec.c] l.14)  +


memfrob::

  void* memfrob(void* s, unsigned int len);
 +
  (link:../src/memfrob.c[../src/memfrob.c] l.3)  +


posix_openpt::

  int posix_openpt(int flags);
 +
  Defines: open +
 (link:../src/pty.c[../src/pty.c] l.8) manpage: link:manpages/sys/posix_openpt.2.rst[posix_openpt] +


print::

  #define print(str) write(STDOUT_FILENO,str,strlen(str))
 +
  Defines: write strlen +
 (link:../include/prints.h[../include/prints.h] l.29)  +
write str to stdout. Needs strlen +
 

printl::

  #define printl() write(STDOUT_FILENO,"\n",1)
 +
  Defines: write +
 (link:../include/prints.h[../include/prints.h] l.44)  +
write a newline to stdout +
 

prints::

  #define prints(...) _mprints(__VA_ARGS__,0)
 +
  Defines:  +
 (link:../include/prints.h[../include/prints.h] l.11)  +
print the string(s) supplied as arg(s) to stdout +
 

printsl::

  #define printsl(...) _mprints(__VA_ARGS__,"\n",0)
 +
  Defines:  +
 (link:../include/prints.h[../include/prints.h] l.25)  +
print the string(s) supplied as arg(s) and newline to stdout +
 

ptsname::

  char *ptsname(int fd);
 +
  Defines: write uitodec +
 (link:../src/pty.c[../src/pty.c] l.40) manpage: link:manpages/stdlib/ptsname.3.rst[ptsname] +


ptsname_r::

  int ptsname_r(int fd, char *buf, size_t len);
 +
  Defines: write uitodec +
 (link:../src/pty.c[../src/pty.c] l.27)  +


snprintf::

  int snprintf( char *buf, size_t size, const char *fmt, ... );
 +
  Defines: write +
 (link:../src/sprintf.c[../src/sprintf.c] l.219) manpage: link:manpages/stdio/printf.3.rst[snprintf] +


strcasecmp::

  int strcasecmp(const char*c1,const char*c2);
 +
  Defines: tolower +
 (link:../src/strcmp.c[../src/strcmp.c] l.49) manpage: link:manpages/string/string.3.rst[strcasecmp] +


strncasecmp::

  int strncasecmp(const char*c1,const char*c2,int len);
 +
  Defines:  +
 (link:../src/strcmp.c[../src/strcmp.c] l.57) manpage: link:manpages/string/string.3.rst[strncasecmp] +


uitodec::

  int uitodec(unsigned int i, char *buf, int prec, char limiter );
 +
  (link:../src/itodec.c[../src/itodec.c] l.8)  +


ultodec::

  int ultodec(unsigned long i, char *buf, int prec, char limiter );
 +
  (link:../src/ltodec.c[../src/ltodec.c] l.3)  +


unlockpt::

  int unlockpt(int fd);
 +
  Defines: ioctl +
 (link:../src/pty.c[../src/pty.c] l.20) manpage: link:manpages/stdlib/ptsname.3.rst[unlockpt] +


vsnprintf::

  int vsnprintf(char *buf, size_t size, const char* fmt, va_list args );
 +
  Defines: write +
 (link:../src/sprintf.c[../src/sprintf.c] l.36) manpage: link:manpages/stdio/printf.3.rst[vsnprintf] +


wait::

  pid_t wait(int *wstatus);
 +
  Defines: wait4 +
 (link:../src/wait.c[../src/wait.c] l.7) manpage: link:manpages/sys/wait.2.rst[wait] +


waitpid::

  pid_t waitpid(pid_t pid, int *wstatus, int options);
 +
  Defines: wait4 +
 (link:../src/wait.c[../src/wait.c] l.15) manpage: link:manpages/sys/wait.2.rst[waitpid] +


writes::

  #define writes(str) write(STDOUT_FILENO,str,sizeof(str))
 +
  Defines: write +
 (link:../include/prints.h[../include/prints.h] l.34)  +
write the constant str to stdout. Computes length with sizeof(str) at compile time. +
 



 signal.h
----------

sigaction::

  static int sigaction(int sig, const struct sigaction *act, struct sigaction *oact);
 +
  (link:../src/sigaction.c[../src/sigaction.c] l.7) manpage: link:manpages/sys/sigaction.2.rst[sigaction] +


sigemptyset::

  static int sigemptyset(sigset_t *set);
 +
  (link:../src/sigemptyset.c[../src/sigemptyset.c] l.8) manpage: link:manpages/gen/sigsetops.3.rst[sigemptyset] +


signal::

  sighandler_t signal(int sig, sighandler_t func );
 +
  Defines: sigaction +
 (link:../src/signal.c[../src/signal.c] l.9) manpage: link:manpages/gen/signal.3.rst[signal] +




 stdio.h
---------

_fopen::

  FILE *_fopen(int fd, const char* filename, const char* mode);
 +
  Defines: open +
 (link:../src/fopen.c[../src/fopen.c] l.12)  +
modes implemented: r, r+, w, w+, a, a+ +
 

_itohex::

  int _itohex(int i,char* buf,int padding, int capitals);
 +
  (link:../src/itohex.c[../src/itohex.c] l.6)  +


clearerror::

  static inline void clearerror(FILE *f);
 +
  (link:../include/mini_fstream.h[../include/mini_fstream.h] l.199)  +


fclose::

  static inline int __attribute__((always_inline)) fclose( FILE* f );
 +
  Defines: close +
 (link:../include/mini_fstream.h[../include/mini_fstream.h] l.66) manpage: link:manpages/stdio/fclose.3.rst[fclose] +


fdopen::

  FILE *fdopen(int fd, const char* mode);
 +
  Defines: open +
 (link:../src/fopen.c[../src/fopen.c] l.83) manpage: link:manpages/stdio/fopen.3.rst[fdopen] +
modes implemented: r, r+, w, w+, a, a+ +
 

feof::

  static inline int feof(FILE *f);
 +
  (link:../include/mini_fstream.h[../include/mini_fstream.h] l.185) manpage: link:manpages/stdio/ferror.3.rst[feof] +


ferror::

  static inline int ferror(FILE *f);
 +
  (link:../include/mini_fstream.h[../include/mini_fstream.h] l.192) manpage: link:manpages/stdio/ferror.3.rst[ferror] +


fflush::

  static inline int __attribute__((always_inline)) fflush( FILE *F );
 +
  (link:../include/mini_fstream.h[../include/mini_fstream.h] l.28) manpage: link:manpages/stdio/fflush.3.rst[fflush] +
This does nothing, since minilib doesn't provide buffered streams yet.in order to sync the stream, please use fsync +
 

fgetc::

  static inline int fgetc(FILE *F);
 +
  Defines: fileno read +
 (link:../include/fgetc.h[../include/fgetc.h] l.10) manpage: link:manpages/stdio/getc.3.rst[fgetc] +


fgetpos::

  static inline void fgetpos(FILE *f, long *pos );
 +
  Defines: lseek +
 (link:../include/mini_fstream.h[../include/mini_fstream.h] l.128) manpage: link:manpages/stdio/fseek.3.rst[fgetpos] +


fileno::

  static inline int __attribute__((always_inline)) fileno( FILE *f );
 +
  (link:../include/mini_fstream.h[../include/mini_fstream.h] l.56) manpage: link:manpages/stdio/ferror.3.rst[fileno] +
Return the fd nummber of stdin,-out,-err.  +
 

fopen::

  FILE *fopen(const char* filename, const char* mode);
 +
  Defines: open +
 (link:../src/fopen.c[../src/fopen.c] l.73) manpage: link:manpages/stdio/fopen.3.rst[fopen] +
modes implemented: r, r+, w, w+, a, a+ +
 

fprint::

  #define fprint(...) fprintf(__VA_ARGS__)
 +
  Defines: write fileno +
 (link:../include/mini_fstream.h[../include/mini_fstream.h] l.96)  +


fprintf::

  #define fprintf(stream,...)	write(fileno(stream),ml.mbuf,sprintf(ml.mbuf,__VA_ARGS__))
 +
  Defines: fileno write +
 (link:../src/sprintf.c[../src/sprintf.c] l.244) manpage: link:manpages/stdio/printf.3.rst[fprintf] +


fputc::

  static inline int volatile fputc(int c, FILE* F);
 +
  Defines: fileno write +
 (link:../include/fputc.h[../include/fputc.h] l.10) manpage: link:manpages/stdio/putc.3.rst[fputc] +


fputs::

  static inline int volatile fputs(const char *c, FILE *F);
 +
  Defines: strlen fileno write +
 (link:../include/fputs.h[../include/fputs.h] l.15) manpage: link:manpages/stdio/fputs.3.rst[fputs] +


fread::

  static inline size_t fread(void *ptr, size_t size, size_t nmemb, FILE *f);
 +
  Defines: read +
 (link:../include/mini_fstream.h[../include/mini_fstream.h] l.163) manpage: link:manpages/stdio/fread.3.rst[fread] +


fseek::

  static inline int fseek(FILE *f, long offset, int whence );
 +
  Defines: lseek +
 (link:../include/mini_fstream.h[../include/mini_fstream.h] l.147) manpage: link:manpages/stdio/fseek.3.rst[fseek] +


fsetpos::

  static inline int fsetpos(FILE *f, int pos );
 +
  Defines: lseek +
 (link:../include/mini_fstream.h[../include/mini_fstream.h] l.134) manpage: link:manpages/stdio/fseek.3.rst[fsetpos] +


ftell::

  static inline long ftell(FILE *f);
 +
  Defines: lseek +
 (link:../include/mini_fstream.h[../include/mini_fstream.h] l.122) manpage: link:manpages/stdio/fseek.3.rst[ftell] +


fwrite::

  static inline size_t fwrite(const void *ptr, size_t size, size_t nmemb, FILE *f);
 +
  Defines: write +
 (link:../include/mini_fstream.h[../include/mini_fstream.h] l.107) manpage: link:manpages/stdio/fread.3.rst[fwrite] +


getc::

  #define getc(F) fgetc(F)
 +
  Defines: read fileno +
 (link:../include/fgetc.h[../include/fgetc.h] l.18) manpage: link:manpages/stdio/getc.3.rst[getc] +


getchar::

  #define getchar() fgetc(0)
 +
  Defines: fileno read +
 (link:../include/fgetc.h[../include/fgetc.h] l.21) manpage: link:manpages/stdio/getc.3.rst[getchar] +


itoHEX::

  int itoHEX(int i,char* buf,int padding);
 +
  Defines:  +
 (link:../src/itohex.c[../src/itohex.c] l.56)  +


itohex::

  int itohex(int i,char* buf,int padding);
 +
  Defines:  +
 (link:../src/itohex.c[../src/itohex.c] l.49)  +


perror::

  void perror(char *msg);
 +
  Defines: strlen strerror fileno write +
 (link:../src/strerror.c[../src/strerror.c] l.22) manpage: link:manpages/string/strerror.3.rst[perror] +


printf::

  #define printf(...) fprintf(stdout,__VA_ARGS__)
 +
  Defines: write fileno +
 (link:../include/mini_fstream.h[../include/mini_fstream.h] l.92) manpage: link:manpages/stdio/printf.3.rst[printf] +


putc::

  #define putc(c,stream) fputc(c,stream)
 +
  Defines: fileno write +
 (link:../include/fputc.h[../include/fputc.h] l.19) manpage: link:manpages/stdio/putc.3.rst[putc] +


putchar::

  #define putchar(c) fputc(c,stdout)
 +
  Defines: fileno write +
 (link:../include/fputc.h[../include/fputc.h] l.16) manpage: link:manpages/stdio/putc.3.rst[putchar] +


puts::

  #define puts(msg) ( print(msg) + printl() )
 +
  Defines: write strlen +
 (link:../include/prints.h[../include/prints.h] l.49) manpage: link:manpages/stdio/fputs.3.rst[puts] +
write msg to stdout, append a newline. Needs strlen. +
 

rewind::

  static inline void rewind( FILE *f );
 +
  Defines: lseek +
 (link:../include/mini_fstream.h[../include/mini_fstream.h] l.157) manpage: link:manpages/stdio/fseek.3.rst[rewind] +


setbuf::

  static void setbuf(FILE *stream, char *buf);
 +
  (link:../include/mini_fstream.h[../include/mini_fstream.h] l.207) manpage: link:manpages/stdio/setbuf.3.rst[setbuf] +
dummy functions. +
  There is no buffering implemented for the streams yet. +
 

setvbuf::

  static int setvbuf(FILE *stream, char *buf, int mode, size_t size);
 +
  (link:../include/mini_fstream.h[../include/mini_fstream.h] l.212) manpage: link:manpages/stdio/setbuf.3.rst[setvbuf] +
dummy +
 

sprintf::

  #define sprintf(str,...) snprintf( str, 4096,  __VA_ARGS__)
 +
  Defines: write +
 (link:../src/sprintf.c[../src/sprintf.c] l.26) manpage: link:manpages/stdio/printf.3.rst[sprintf] +


vfprintf::

  #define vfprintf(...) fprintf(__VA_ARGS__)
 +
  Defines: fileno write +
 (link:../include/mini_fstream.h[../include/mini_fstream.h] l.101) manpage: link:manpages/stdio/printf.3.rst[vfprintf] +




 stdlib.h
----------

atoi::

  int atoi(char *c);
 +
  (link:../src/atoi.c[../src/atoi.c] l.6) manpage: link:manpages/stdlib/atoi.3.rst[atoi] +


free::

  void volatile free(void* p);
 +
  (link:../src/malloc.c[../src/malloc.c] l.200) manpage: link:manpages/stdlib/memory.3.rst[free] +


getenv::

  char *getenv(const char* name);
 +
  (link:../src/getenv.c[../src/getenv.c] l.11) manpage: link:manpages/stdlib/getenv.3.rst[getenv] +


malloc::

  void* volatile malloc(int size);
 +
  (link:../src/malloc.c[../src/malloc.c] l.150) manpage: link:manpages/stdlib/memory.3.rst[malloc] +


rand::

  unsigned int rand();
 +
  (link:../src/rand.c[../src/rand.c] l.15) manpage: link:manpages/stdlib/rand.3.rst[rand] +


srand::

  void srand( unsigned int i );
 +
  (link:../src/rand.c[../src/rand.c] l.7) manpage: link:manpages/stdlib/rand.3.rst[srand] +




 string.h
----------

memcmp::

  int memcmp(const void* c1,const void* c2,int len);
 +
  Defines: 0 +
 (link:../src/strcmp.c[../src/strcmp.c] l.85) manpage: link:manpages/string/memcmp.3.rst[memcmp] +


memcpy::

  void *memcpy( void *d, const void *s, int n );
 +
  (link:../src/memcpy.c[../src/memcpy.c] l.6) manpage: link:manpages/string/memcpy.3.rst[memcpy] +


memset::

  void *memset( void *s, int c, int n);
 +
  (link:../src/memset.c[../src/memset.c] l.3) manpage: link:manpages/string/memset.3.rst[memset] +


strcat::

  char *strcat(char *dest, const char *src );
 +
  Defines: strlen +
 (link:../src/strcat.c[../src/strcat.c] l.7) manpage: link:manpages/string/string.3.rst[strcat] +


strcmp::

  int strcmp(const char*c1,const char*c2);
 +
  Defines:  +
 (link:../src/strcmp.c[../src/strcmp.c] l.68) manpage: link:manpages/string/string.3.rst[strcmp] +


strcpy::

  char *strcpy(char *dest, const char *src);
 +
  (link:../src/memcpy.c[../src/memcpy.c] l.17) manpage: link:manpages/string/string.3.rst[strcpy] +


strdup::

  char *strdup(const char *source);
 +
  Defines: strcpy malloc strlen +
 (link:../src/strdup.c[../src/strdup.c] l.7) manpage: link:manpages/string/strdup.3.rst[strdup] +


strerror::

  char* strerror( int errnum );
 +
  (link:../src/strerror.c[../src/strerror.c] l.9) manpage: link:manpages/string/string.3.rst[strerror] +


strlen::

  int strlen(const char*str);
 +
  (link:../src/strlen.c[../src/strlen.c] l.7) manpage: link:manpages/string/strlen.3.rst[strlen] +


strncmp::

  int strncmp(const char*c1,const char*c2,int len);
 +
  Defines:  +
 (link:../src/strcmp.c[../src/strcmp.c] l.76) manpage: link:manpages/string/string.3.rst[strncmp] +


strncpy::

  char *strncpy(char *dest, const char *src, int n);
 +
  Defines: memcpy +
 (link:../src/memcpy.c[../src/memcpy.c] l.27) manpage: link:manpages/string/string.3.rst[strncpy] +




 time.h
--------

time::

  time(unsigned int *a1 )
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.168) manpage: link:manpages/gen/time.3.rst[time] +




 unistd.h
----------

access::

  access( const char *filename, int mode)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.141) manpage: link:manpages/sys/access.2.rst[access] +


chdir::

  chdir(const char* path)		
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.115) manpage: link:manpages/sys/chdir.2.rst[chdir] +


chown::

  chown( const char *filename, uid_t user, gid_t group)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.146) manpage: link:manpages/sys/chown.2.rst[chown] +


chroot::

  chroot( const char *filename)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.132) manpage: link:manpages/sys/chroot.2.rst[chroot] +


close::

  close( int fd )
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.101) manpage: link:manpages/sys/close.2.rst[close] +


dup::

  dup(int a1)		
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.120) manpage: link:manpages/sys/dup.2.rst[dup] +


dup2::

  dup2(int a1, int a2)		
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.121) manpage: link:manpages/sys/dup.2.rst[dup2] +


execve::

  execve( const char *filename,  const char **argv,  const char **envp)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.136) manpage: link:manpages/sys/execve.2.rst[execve] +


fork::

  DEF_syscall(fork,0)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.128) manpage: link:manpages/sys/fork.2.rst[fork] +


fsync::

  fsync(int a1 )
 +
 (link:../include/lseek.h[../include/lseek.h] l.20) manpage: link:manpages/sys/fsync.2.rst[fsync] +


ftruncate::

  ftruncate(unsigned int a1, unsigned int a2 )
 +
 (link:../include/lseek.h[../include/lseek.h] l.19) manpage: link:manpages/sys/truncate.2.rst[ftruncate] +


getgid::

  DEF_syscall(getgid,0)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.152) manpage: link:manpages/sys/getgid.2.rst[getgid] +


getpgrp::

  DEF_syscall(getpgrp,0)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.153) manpage: link:manpages/sys/getpgrp.2.rst[getpgrp] +


getpid::

  DEF_syscall(getpid,0 )
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.93) manpage: link:manpages/sys/getpid.2.rst[getpid] +


getuid::

  DEF_syscall(getuid,0)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.162) manpage: link:manpages/sys/getuid.2.rst[getuid] +


isatty::

  int isatty(int fd);
 +
  Defines: ioctl +
 (link:../src/isatty.c[../src/isatty.c] l.7) manpage: link:manpages/gen/ttyname.3.rst[isatty] +


link::

  link( const char *oldname, const char *newname)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.148) manpage: link:manpages/sys/link.2.rst[link] +


lseek::

  lseek(unsigned int a1, int a2, int a3 )
 +
 (link:../include/lseek.h[../include/lseek.h] l.17) manpage: link:manpages/sys/lseek.2.rst[lseek] +


mkdir::

  mkdir( const char *pathname, int mode)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.137) manpage: link:manpages/sys/mkdir.2.rst[mkdir] +


open::

  int volatile open( const char *s, int flags, ... );
 +
  (link:../src/open.c[../src/open.c] l.13) manpage: link:manpages/sys/open.2.rst[open] +


pipe::

  pipe( int *filedes)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.143) manpage: link:manpages/sys/pipe.2.rst[pipe] +


read::

  read( int fd, void *buf, int len )
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.102) manpage: link:manpages/sys/read.2.rst[read] +


rename::

  rename( const char* oldpath, const char* newpath )		
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.110) manpage: link:manpages/sys/rename.2.rst[rename] +


rmdir::

  rmdir( const char *pathname)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.147) manpage: link:manpages/sys/rmdir.2.rst[rmdir] +


select::

  static inline int volatile __attribute__((always_inline)) select(int fd, volatile fd_set* readfd, volatile fd_set *writefd, volatile fd_set *exceptfd, volatile struct timeval *wait);
 +
  (link:../include/select.h[../include/select.h] l.10) manpage: link:manpages/sys/select.2.rst[select] +


setgid::

  setgid( gid_t gid)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.95) manpage: link:manpages/sys/setuid.2.rst[setgid] +


setpgid::

  setpgid( pid_t pid, pid_t pgid)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.151) manpage: link:manpages/sys/setpgid.2.rst[setpgid] +


setsid::

  DEF_syscall(setsid,0 )
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.94) manpage: link:manpages/sys/setsid.2.rst[setsid] +


setuid::

  setuid( uid_t uid)
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.96) manpage: link:manpages/sys/setuid.2.rst[setuid] +


sleep::

  unsigned int sleep(unsigned int seconds);
 +
  (link:../src/sleep.c[../src/sleep.c] l.10) manpage: link:manpages/gen/sleep.3.rst[sleep] +
nonconformant sleep +
  TODO: ignore blocked signals, sigchld +
 

tcgetattr::

  static inline int __attribute__((always_inline)) tcgetattr(int fd, struct termios *io);
 +
  Defines: ioctl +
 (link:../include/tcgetattr.h[../include/tcgetattr.h] l.17) manpage: link:manpages/gen/tcsetattr.3.rst[tcgetattr] +


tcsetattr::

  static inline int __attribute__((always_inline)) tcsetattr(int fd, int opt, const struct termios *io);
 +
  Defines: ioctl +
 (link:../include/tcsetattr.h[../include/tcsetattr.h] l.18) manpage: link:manpages/gen/tcsetattr.3.rst[tcsetattr] +


unlink::

  unlink( const char* a1)		
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.111) manpage: link:manpages/sys/unlink.2.rst[unlink] +


write::

  write(int fd,const void *buf, int len )
 +
 (link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.103) manpage: link:manpages/sys/write.2.rst[write] +


