== output



[[]]
::

  _unsorted_ + 
 *Defines:* unsorted + 
-----
unsorted
-----
link:unsorted manpage: link:unsorted +


[[_mprints]]
_mprints::

  _#define _mprints(...) dprints(STDOUT_FILENO, __VA_ARGS__)_ + 


[[ansicolors]]
ansicolors::

  __ + 


[[dprintf]]
dprintf::

  _int dprintf( int fd, const char *fmt, ... )_ + 
 *print formatted output*
Size: ~818B 

[[dprints]]
dprints::

  _int dprints(int fd, const char *msg,...)_ + 


[[eprint]]
eprint::

  _#define eprint(str) write(STDERR_FILENO,str,strlen(str))_ + 


[[eprintfs]]
eprintfs::

  _#define eprintfs(fmt,...) fprintfs(stderr, fmt, __VA_ARGS__)_ + 


[[eprintl]]
eprintl::

  _#define eprintl() write(STDERR_FILENO,"\n",1)_ + 


[[eprints]]
eprints::

  _#define eprints(...) dprints(STDERR_FILENO,__VA_ARGS__,0)_ + 


[[eprintsl]]
eprintsl::

  _#define eprintsl(...) dprints(STDERR_FILENO,__VA_ARGS__,"\n",0)_ + 


[[eputs]]
eputs::

  _#define eputs(msg) ( eprint(msg) + eprintl() )_ + 


[[ewrites]]
ewrites::

  _#define ewrites(str) write(STDERR_FILENO,str,sizeof(str))_ + 


[[fprint]]
fprint::

  _#define fprint(...) fprintf(__VA_ARGS__)_ + 


[[fprintf]]
fprintf::

  _#define fprintf(stream,...)	write(fileno(stream),mlgl->mbuf,sprintf(mlgl->mbuf,__VA_ARGS__))_ + 


[[fprintfs]]
fprintfs::

  _int fprintfs( FILE* F, char *fmt, ...)_ + 
Size: ~427B 

[[fprints]]
fprints::

  _#define fprints(F,...) dprints(fileno(F),__VA_ARGS__,0)_ + 


[[fputc]]
fputc::

  _int volatile fputc(int c, FILE* F)_ + 
 *put a byte on a stream*
Size: ~64B 

[[fwrite]]
fwrite::

  _size_t fwrite(const void *ptr, size_t size, size_t nmemb, FILE *f)_ + 
 *binary output*
Size: ~117B 

[[fwrites]]
fwrites::

  _#define fwrites(fd,str) write(fd,str,sizeof(str))_ + 


[[group_print]]
group_print::

  __ + 


[[group_write]]
group_write::

  __ + 


[[print]]
print::

  _#define print(str) write(STDOUT_FILENO,str,strlen(str))_ + 


[[printf]]
printf::

  _#define printf(...) fprintf(stdout,__VA_ARGS__)_ + 
 *print formatted output*


[[printfs]]
printfs::

  _#define printfs(fmt,...) fprintfs(stdout, fmt, __VA_ARGS__)_ + 


[[printl]]
printl::

  _#define printl() write(STDOUT_FILENO,"\n",1)_ + 


[[prints]]
prints::

  _#define prints(...) _mprints(__VA_ARGS__,0)_ + 


[[printsl]]
printsl::

  _#define printsl(...) _mprints(__VA_ARGS__,"\n",0)_ + 


[[putc]]
putc::

  _#define putc(c,stream) fputc(c,stream)_ + 
 *put a byte on a stream*


[[putchar]]
putchar::

  _#define putchar(c) fputc(c,stdout)_ + 
 *put a byte on a stdout stream*


[[puts]]
puts::

  _#define puts(msg) ( print(msg) + printl() )_ + 
 *put a string on standard output*


[[shortcolornames]]
shortcolornames::

  __ + 


[[snprintf]]
snprintf::

  _int snprintf( char *buf, size_t size, const char *fmt, ... )_ + 
 *print formatted output*
Size: ~738B 

[[vfprintf]]
vfprintf::

  _#define vfprintf(...) fprintf(__VA_ARGS__)_ + 


[[vsnprintf]]
vsnprintf::

  _int vsnprintf(char *buf, size_t size, const char* fmt, va_list args )_ + 
 *format output of a stdarg argument list*
Size: ~590B 

[[vsprintf]]
vsprintf::

  _int vsprintf( char *buf, const char *fmt, ... )_ + 


[[write]]
write::

  _int write(int fd,const void *buf, int len )_ + 
 *write on a file*
Size: ~65B 

[[writes]]
writes::

  _#define writes(str) write(STDOUT_FILENO,str,sizeof(str))_ + 
