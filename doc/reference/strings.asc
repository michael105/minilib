== strings



[[]]
::

  _unsorted_ + 
 *Defines:* unsorted + 
-----
unsorted
-----
link:unsorted manpage: link:unsorted +


[[_strcasecmp]]
_strcasecmp::

  _int _strcasecmp(const char*c1,const char*c2,int len)_ + 
Size: ~44B 

[[_strcmp]]
_strcmp::

  _int _strcmp(const char*c1,const char*c2,int len)_ + 
Size: ~44B 

[[sprintf]]
sprintf::

  _#define sprintf(str,...) snprintf( str, 4096,  __VA_ARGS__)_ + 
 *print formatted output*


[[strcasecmp]]
strcasecmp::

  _int strcasecmp(const char*c1,const char*c2)_ + 


[[strcat]]
strcat::

  _char *strcat(char *dest, const char *src )_ + 
 *concatenate two strings*
Size: ~126B 

[[strchr]]
strchr::

  _char *strchr(const char *s, int c)_ + 
 *string scanning operation*
Size: ~104B 

[[strchrnul]]
strchrnul::

  _char *strchrnul(const char *s, int c)_ + 
 *locate character in string*
Size: ~87B 

[[strcmp]]
strcmp::

  _int strcmp(const char*c1,const char*c2)_ + 
 *compare two strings*
Size: ~32B 

[[strcpy]]
strcpy::

  _char *strcpy(char *dest, const char *src)_ + 
 *copy a string and return a pointer to the end of the result*
Size: ~84B 

[[strdup]]
strdup::

  _char *strdup(const char *source)_ + 
 *duplicate a specific number of bytes from a string*
Size: ~258B 

[[strlen]]
strlen::

  _int strlen(const char*str)_ + 
 *get length of fixed size string*
Size: ~32B 

[[strncasecmp]]
strncasecmp::

  _int strncasecmp(const char*c1,const char*c2,int len)_ + 
 *case-insensitive string comparisons*


[[strncmp]]
strncmp::

  _int strncmp(const char*c1,const char*c2,int len)_ + 
 *compare part of two strings*
Size: ~44B 

[[strncpy]]
strncpy::

  _char *strncpy(char *dest, const char *src, int n)_ + 
 *copy fixed length string, returning a pointer to the array end*
Size: ~96B 

[[strrchr]]
strrchr::

  _char *strrchr(const char *s, int c)_ + 
 *string scanning operation*
Size: ~122B 

[[strstr]]
strstr::

  _char* strstr(const char *big, const char *little)_ + 
 *find a substring*
Size: ~104B 