== unsorted



alphasort::

  _int alphasort( const struct dirent** de1, const struct dirent** de2 )_ + 
 *scan a directory*
-----
Sort dirents by name.
 Deviating of the standard, 
 the asciitables is used for the comparison
 (using strcmp)
-----
link:../src/dirent/alphasort.c[../src/dirent/alphasort.c] l.7 manpage: link:manpages/gen/scandir.3.rst[alphasort] +


ansicolors::

  __ + 
-----
defines for ansicolors at the console, 16 color mode
the names are:
 AC_NORM ( white text on black background)
 AC_BLACK 
 AC_RED 
 AC_GREEN 
 AC_BROWN 
 AC_BLUE 
 AC_MAGENTA 
 AC_MARINE (= AC_CYAN)
 AC_LGREY 
 AC_WHITE 
 AC_GREY 
 AC_LRED 
 AC_LGREEN 
 AC_YELLOW 
 AC_LBLUE 
 AC_LMAGENTA 
 AC_LMARINE (= AC_LCYAN)
 AC_LWHITE 
 AC_BGBLACK 
 AC_BGRED 
 AC_BGGREEN 
 AC_BGBROWN 
 AC_BGBLUE 
 AC_BGMAGENTA 
 AC_BGMARINE 
 AC_BGLGREY 
 AC_BGWHITE 

 AC_BOLD
 AC_FAINT
 AC_CURSIVE
 AC_UNDERLINE
 AC_LIGHTBG
 AC_BLINK
 AC_INVERTED
 AC_INVERSE

 ( Faint to inverse are not available at every terminal )
-----
link:../include/ansicolors.h[../include/ansicolors.h] l.45 

clone::

  _int clone( int clone_flags,  unsigned long stack,  void *parent_tid,  void *child_tid)_ + 
 *create a child process*
link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.200 

clone_t::

  _int clone_t(int flags)_ + 
link:../include/clone.h[../include/clone.h] l.7 

def::

  _#define SETOPT_short( opts, option ) (_ + 
-----
Set a option flag(s) (bit(s))  manually.
		param options: e.g. just a, or ( a+h+l) to check for several flags at once
-----
link:../macros/getoptm.h[../macros/getoptm.h] l.52 

eprintsl::

  _#define eprintsl(...) dprints(STDERR_FILENO,__VA_ARGS__,"\n",0)_ + 
 *Defines:* write + 
-----
print the string(s) supplied as arg(s) and newline to stderr
-----
link:../include/prints.h[../include/prints.h] l.41 

group_print::

  __ + 
 *Defines:* fileno strlen write + 
-----
enable print and related functions
 This switch enables strlen;
 but neither globals nor the mini_buf are used.
-----
link:../macros/defgroups.h[../macros/defgroups.h] l.13 

group_write::

  __ + 
 *Defines:* write ewrite + 
-----
write, and related functions
 these functions do not depend on strlen, 
 or any globals.
-----
link:../macros/defgroups.h[../macros/defgroups.h] l.23 

inotify_add_watch::

  _int inotify_add_watch( int fd,  const char *pathname,  u32 mask)_ + 
 *add a watch to an initialized inotify instance*
link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.195 

inotify_init::

  _int DEF_syscall(inotify_init,0)_ + 
 *initialize an inotify instance*
link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.194 

inotify_init1::

  _int inotify_init1( int flags)_ + 
 *initialize an inotify instance*
link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.197 

inotify_rm_watch::

  _int inotify_rm_watch( int fd,  __s32 wd)_ + 
 *remove an existing watch from an inotify instance*
link:../include/syscall_stubs.h[../include/syscall_stubs.h] l.196 

itooct::

  _int itooct(int i, char *buf)_ + 
-----
convert int to octal
 return the number of chars written.
-----
link:../src/itooct.c[../src/itooct.c] l.4 

putenv::

  _int putenv( char *string )_ + 
 *Defines:* ret_errno environ + 
 *change or add a value to an environment*
-----
put a string into the environmental vars
 the supplied string's pointer is put into the environmental array of pointers.
 Subsequent changes of the string therefore will change the environment,
 and the supplied string may not be deallocated.
 Returns: 
 - 0 on success, 
 - EINVAL: string was 0, didn't contain a '=', some other error
-----
link:../src/putenv.c[../src/putenv.c] l.10 manpage: link:manpages/stdlib/getenv.3.rst[putenv] +


qsort::

  _void qsort(void  *base,	size_t nel,	size_t width,	int (*comp)(const void *, const void *))_ + 
-----
(quick) shell sort routine
 following the tradition, this isn't exactly a quicksort algorithm,
 albite named quicksort.
 It is a shell sort implementation, originally done by Ray Gardner, 5/90;
 which in turn I did find within musl.
-----
link:../src/qsort.c[../src/qsort.c] l.57 manpage: link:manpages/stdlib/qsort.3.rst[qsort] +


ret_errno::

  _#ifdef mini_errno_ + 
-----
This macro expands to a return, and
 (when mini_errno is defined) returns -1 and sets errno,
 or returns the negative errno value.
-----
link:../include/ret_errno.h[../include/ret_errno.h] l.5 

seterrno::

  _#ifdef mini_errno_ + 
-----
set errno, but only when errno is defined.
-----
link:../include/seterrno.h[../include/seterrno.h] l.3 

shortcolornames::

  __ + 
-----
short ansi color names
 all colornames, without the praefix "AC_"
-----
link:../include/ansicolors.h[../include/ansicolors.h] l.103 

todo_putenv::

  _int todo_putenv( char *s )_ + 
Size: ~248B 

vsprintf::

  _int vsprintf( char *buf, const char *fmt, ... )_ + 
 *printf, fprintf, dprintf, sprintf, snprintf, vprintf, vfprintf, vdprintf,*
-----
write fmt and arguments into buf
 calls vsnprintf, 
 the size is limited to 4096 by default.
-----
link:../src/vsprintf.c[../src/vsprintf.c] l.9 manpage: link:manpages/stdio/printf.3.rst[vsprintf] +
