== files



[[_fopen]]
_fopen::

  _FILE *_fopen(int fd, const char* filename, const char* mode, FILE *f)_ + 
 *Defines:* open close fileno + 
-----
modes implemented: r, r+, w, w+, a, a+
-----
Size: ~316B link:../../src/_fopen.c[../src/_fopen.c] l.12 

[[access]]
access::

  _int access( const char *filename, int mode)_ + 
 *determine accessibility of a file relative to directory file*
Size: ~59B link:../../include/syscall_stubs.h[../include/syscall_stubs.h] l.161 manpage: link:../manpages/sys/access.2.rst[access] +


[[chmod]]
chmod::

  _int chmod( const char *filename, mode_t mode)_ + 
 *change mode of a file relative to directory file descriptor*
Size: ~59B link:../../include/syscall_stubs.h[../include/syscall_stubs.h] l.184 manpage: link:../manpages/sys/chmod.2.rst[chmod] +


[[chown]]
chown::

  _int chown( const char *filename, uid_t user, gid_t group)_ + 
 *change owner and group of a file relative to directory*
Size: ~71B link:../../include/syscall_stubs.h[../include/syscall_stubs.h] l.185 manpage: link:../manpages/sys/chown.2.rst[chown] +


[[close]]
close::

  _int close( int fd )_ + 
 *close a file descriptor*
Size: ~51B link:../../include/syscall_stubs.h[../include/syscall_stubs.h] l.100 manpage: link:../manpages/sys/close.2.rst[close] +


[[closedir]]
closedir::

  _int closedir(DIR *dir)_ + 
 *Defines:* brk getbrk + 
 *close a directory stream*
Size: ~323B link:../../src/dirent/closedir.c[../src/dirent/closedir.c] l.6 manpage: link:../manpages/gen/directory.3.rst[closedir] +


[[creat]]
creat::

  _int volatile creat( const char *s, int mode )_ + 
 *Defines:* open + 
 *create a new file or rewrite an existing one*
Size: ~124B link:../../src/open.c[../src/open.c] l.36 manpage: link:../manpages/compat-43/creat.2.rst[creat] +


[[dup]]
dup::

  _int dup(int fd)_ + 
 *duplicate an open file descriptor*
Size: ~51B link:../../include/syscall_stubs.h[../include/syscall_stubs.h] l.116 manpage: link:../manpages/sys/dup.2.rst[dup] +


[[dup2]]
dup2::

  _int dup2(int oldfd, int newfd)_ + 
 *duplicate a file descriptor*
Size: ~63B link:../../include/syscall_stubs.h[../include/syscall_stubs.h] l.117 manpage: link:../manpages/sys/dup.2.rst[dup2] +


[[dup3]]
dup3::

  _int dup3(int oldfd, int newfd, int flags)_ + 
 *duplicate a file descriptor*
Size: ~75B link:../../include/syscall_stubs.h[../include/syscall_stubs.h] l.118 manpage: link:../manpages/gen/dup3.3.rst[dup3] +


[[fchmod]]
fchmod::

  _int fchmod( unsigned int fd, mode_t mode)_ + 
 *change mode of a file*
Size: ~63B link:../../include/syscall_stubs.h[../include/syscall_stubs.h] l.114 manpage: link:../manpages/sys/chmod.2.rst[fchmod] +


[[fchown]]
fchown::

  _int fchown( unsigned int fd, uid_t user, gid_t group)_ + 
 *change owner and group of a file*
Size: ~75B link:../../include/syscall_stubs.h[../include/syscall_stubs.h] l.113 manpage: link:../manpages/sys/chown.2.rst[fchown] +


[[fcntl]]
fcntl::

  _int fcntl( unsigned int fd, unsigned int cmd, unsigned long arg)_ + 
 *file control*
Size: ~77B link:../../include/syscall_stubs.h[../include/syscall_stubs.h] l.162 manpage: link:../manpages/sys/fcntl.2.rst[fcntl] +


[[fsync]]
fsync::

  _int fsync(int a1 )_ + 
 *synchronize changes to a file*
Size: ~51B link:../../include/lseek.h[../include/lseek.h] l.22 manpage: link:../manpages/sys/fsync.2.rst[fsync] +


[[ftruncate]]
ftruncate::

  _int ftruncate(unsigned int a1, unsigned int a2 )_ + 
 *truncate a file to a specified length*
Size: ~63B link:../../include/lseek.h[../include/lseek.h] l.21 manpage: link:../manpages/sys/truncate.2.rst[ftruncate] +


[[link]]
link::

  _int link( const char *oldname, const char *newname)_ + 
 *link one file to another file relative to two directory*
Size: ~53B link:../../include/syscall_stubs.h[../include/syscall_stubs.h] l.122 manpage: link:../manpages/sys/link.2.rst[link] +


[[lseek]]
lseek::

  _int lseek(unsigned int a1, int a2, int a3 )_ + 
 *move the read/write file offset*
Size: ~75B link:../../include/lseek.h[../include/lseek.h] l.19 manpage: link:../manpages/sys/lseek.2.rst[lseek] +


[[open]]
open::

  _int volatile open( const char *s, int flags, ... )_ + 
 *open file relative to directory file descriptor*
-----
open or create a file.
 warning: when using the flag O_CREAT,
 file permission flags have to be given
 as third argument. Otherwise file permission
 flags will be random. (I still do not know, what 
 the flag showing up as "-T" means..)
-----
Size: ~124B link:../../src/open.c[../src/open.c] l.19 manpage: link:../manpages/sys/open.2.rst[open] +


[[readahead]]
readahead::

  _int readahead( int fd,  loff_t offset,  size_t count)_ + 
 *initiate file readahead into page cache*
Size: ~79B link:../../include/syscall_stubs.h[../include/syscall_stubs.h] l.210 

[[rename]]
rename::

  _int rename( const char* oldpath, const char* newpath )_ + 
 *rename file relative to directory file descriptor*
Size: ~53B link:../../include/syscall_stubs.h[../include/syscall_stubs.h] l.106 manpage: link:../manpages/sys/rename.2.rst[rename] +


[[select]]
select::

  _int volatile  select(int fd, volatile fd_set* readfd, volatile fd_set *writefd, volatile fd_set *exceptfd, volatile struct timeval *wait)_ + 
 *synchronous I/O multiplexing*
Size: ~138B link:../../include/select.h[../include/select.h] l.9 manpage: link:../manpages/sys/select.2.rst[select] +


[[sendfile]]
sendfile::

  _int sendfile( int out_fd,  int in_fd,  off_t *offset,  size_t count)_ + 
 *transfer data between file descriptors*
Size: ~142B link:../../include/syscall_stubs.h[../include/syscall_stubs.h] l.165 manpage: link:../manpages/sys/sendfile.2.rst[sendfile] +


[[stat]]
stat::

  _int stat(const char* filename,struct stat* statbuf)_ + 
 *get file status*
Size: ~49B link:../../include/syscall_stubs.h[../include/syscall_stubs.h] l.110 manpage: link:../manpages/sys/stat.2.rst[stat] +


[[symlink]]
symlink::

  _int symlink( const char *oldname,  const char *newname)_ + 
 *make a symbolic link relative to directory file descriptor*
Size: ~53B link:../../include/syscall_stubs.h[../include/syscall_stubs.h] l.123 manpage: link:../manpages/sys/symlink.2.rst[symlink] +


[[umask]]
umask::

  _int umask( int mask)_ + 
 *set and get the file mode creation mask*
Size: ~51B link:../../include/syscall_stubs.h[../include/syscall_stubs.h] l.209 manpage: link:../manpages/sys/umask.2.rst[umask] +


[[unlink]]
unlink::

  _int unlink( const char* path)_ + 
 *remove a directory entry relative to directory file descriptor*
Size: ~47B link:../../include/syscall_stubs.h[../include/syscall_stubs.h] l.107 manpage: link:../manpages/sys/unlink.2.rst[unlink] +
