== x64-syscalls



sys__sysctl::

  _sys__sysctl( struct __sysctl_args *args)_ + 
 *read/write system parameters*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.315 

sys_accept::

  _sys_accept( int fd,  struct sockaddr *upeersockaddr,  int *upeeraddrlen)_ + 
 *accept a new connection on a socket*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.91 

sys_accept4::

  _sys_accept4( int fd,  struct sockaddr *upeer_sockaddr,  int *upeer_addrlen,  int flags)_ + 
 *accept a connection on a socket*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.551 

sys_access::

  _sys_access( const char *filename,  int mode)_ + 
 *determine accessibility of a file relative to directory file*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.47 

sys_acct::

  _sys_acct( const char *name)_ + 
 *switch process accounting on or off*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.329 

sys_add_key::

  _sys_add_key( const char *_type,  const char *_description,  const void *_payload,  size_t plen)_ + 
 *add a key to the kernel's key management facility*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.471 

sys_adjtimex::

  _sys_adjtimex( struct timex *txc_p)_ + 
 *tune kernel clock*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.321 

sys_alarm::

  _sys_alarm( unsigned int seconds)_ + 
 *schedule an alarm signal*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.79 

sys_arch_prctl::

  _sys_arch_prctl( struct task_struct *task,  int code,  unsigned long *addr)_ + 
 *set architecture-specific thread state*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.319 

sys_bind::

  _sys_bind( int fd,  struct sockaddr *umyaddr,  int addrlen)_ + 
 *bind a name to a socket*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.103 

sys_brk::

  _long sys_brk(unsigned long addr)_ + 
 *change data segment size*
-----
the kernel syscall brk.
-----
link:../src/brk.c[../src/brk.c] l.6 

sys_capget::

  _sys_capget( cap_user_header_t header,  cap_user_data_t dataptr)_ + 
 *set/get capabilities of thread(s)*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.255 

sys_capset::

  _sys_capset( cap_user_header_t header,  const cap_user_data_t data)_ + 
 *set/get capabilities of thread(s)*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.257 

sys_chdir::

  _sys_chdir( const char *filename)_ + 
 *change working directory*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.165 

sys_chmod::

  _sys_chmod( const char *filename,  mode_t mode)_ + 
 *change mode of a file relative to directory file descriptor*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.185 

sys_chown::

  _sys_chown( const char *filename,  uid_t user,  gid_t group)_ + 
 *change owner and group of a file relative to directory*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.189 

sys_chroot::

  _sys_chroot( const char *filename)_ + 
 *change root directory*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.325 

sys_clock_adjtime::

  _sys_clock_adjtime( clockid_t which_clock,  struct timex *tx)_ + 
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.585 

sys_clock_getres::

  _sys_clock_getres( const clockid_t which_clock,  struct timespec *tp)_ + 
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.435 

sys_clock_gettime::

  _sys_clock_gettime( const clockid_t which_clock,  struct timespec *tp)_ + 
 *clock and time functions*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.433 

sys_clock_nanosleep::

  _sys_clock_nanosleep( const clockid_t which_clock,  int flags,  const struct timespec *rqtp,  struct timespec *rmtp)_ + 
 *high resolution sleep with specifiable clock*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.437 

sys_clock_settime::

  _sys_clock_settime( const clockid_t which_clock,  const struct timespec *tp)_ + 
 *clock and timer functions*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.431 

sys_clone::

  _sys_clone( unsigned long clone_flags,  unsigned long newsp,  void *parent_tid,  void *child_tid)_ + 
 *create a child process*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.117 

sys_close::

  _sys_close( unsigned int fd)_ + 
 *close a file descriptor*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.11 

sys_connect::

  _sys_connect( int fd,  struct sockaddr *uservaddr,  int addrlen)_ + 
 *connect a socket*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.89 

sys_creat::

  _sys_creat( const char *pathname,  int mode)_ + 
 *create a new file or rewrite an existing one*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.175 

sys_delete_module::

  _sys_delete_module( const char *name_user,  unsigned int flags)_ + 
 *unload a kernel module*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.353 

sys_dup::

  _sys_dup( unsigned int fildes)_ + 
 *duplicate an open file descriptor*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.69 

sys_dup2::

  _sys_dup2( unsigned int oldfd,  unsigned int newfd)_ + 
 *duplicate a file descriptor*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.71 

sys_dup3::

  _sys_dup3( unsigned int oldfd,  unsigned int newfd,  int flags)_ + 
 *duplicate a file descriptor*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.559 

sys_epoll_create::

  _sys_epoll_create( int size)_ + 
 *open an epoll file descriptor*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.407 

sys_epoll_create1::

  _sys_epoll_create1( int flags)_ + 
 *open an epoll file descriptor*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.557 

sys_epoll_ctl::

  _sys_epoll_ctl( int epfd,  int op,  int fd,  struct epoll_event *event)_ + 
 *control interface for an epoll file descriptor*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.443 

sys_epoll_pwait::

  _sys_epoll_pwait( int epfd,  struct epoll_event *events,  int maxevents,  int timeout,  const sigset_t *sigmask,  size_t sigsetsize)_ + 
 *wait for an I/O event on an epoll file descriptor*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.537 

sys_epoll_wait::

  _sys_epoll_wait( int epfd,  struct epoll_event *events,  int maxevents,  int timeout)_ + 
 *wait for an I/O event on an epoll file descriptor*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.441 

sys_eventfd::

  _sys_eventfd( unsigned int count)_ + 
 *create a file descriptor for event notification*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.543 

sys_eventfd2::

  _sys_eventfd2( unsigned int count,  int flags)_ + 
 *create a file descriptor for event notification*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.555 

sys_execve::

  _sys_execve( const char *filename,  const char *const argv[],  const char *const envp[])_ + 
 *execute program*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.123 

sys_exit::

  _sys_exit( int error_code)_ + 
 *terminate a process*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.125 manpage: link:manpages/sys/_exit.2.rst[_exit] +


sys_exit_group::

  _sys_exit_group( int error_code)_ + 
 *exit all threads in a process*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.439 

sys_faccessat::

  _sys_faccessat( int dfd,  const char *filename,  int mode)_ + 
 *determine accessibility of a file relative to directory file*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.513 

sys_fadvise64::

  _sys_fadvise64( int fd,  loff_t offset,  size_t len,  int advice)_ + 
 *predeclare an access pattern for file data*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.419 

sys_fallocate::

  _sys_fallocate( long fd,  long mode,  loff_t offset,  loff_t len)_ + 
 *manipulate file space*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.545 

sys_fanotify_init::

  _sys_fanotify_init( unsigned int flags,  unsigned int event_f_flags)_ + 
 *create and initialize fanotify group*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.575 

sys_fanotify_mark::

  _sys_fanotify_mark( long fanotify_fd,  long flags,  __u64 mask,  long dfd, long pathname)_ + 
 *add, remove, or modify an fanotify mark on a filesystem*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.577 

sys_fchdir::

  _sys_fchdir( unsigned int fd)_ + 
 *change working directory*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.167 

sys_fchmod::

  _sys_fchmod( unsigned int fd,  mode_t mode)_ + 
 *change mode of a file*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.187 

sys_fchmodat::

  _sys_fchmodat( int dfd,  const char *filename,  mode_t mode)_ + 
 *change mode of a file relative to directory file descriptor*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.511 

sys_fchown::

  _sys_fchown( unsigned int fd,  uid_t user,  gid_t group)_ + 
 *change owner and group of a file*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.191 

sys_fchownat::

  _sys_fchownat( int dfd,  const char *filename,  uid_t user,  gid_t group,  int flag)_ + 
 *change owner and group of a file relative to directory*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.495 

sys_fcntl::

  _sys_fcntl( unsigned int fd,  unsigned int cmd,  unsigned long arg)_ + 
 *file control*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.149 

sys_fdatasync::

  _sys_fdatasync( unsigned int fd)_ + 
 *synchronize the data of a file*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.155 

sys_fgetxattr::

  _sys_fgetxattr( int fd,  const char *name,  void *value,  size_t size)_ + 
 *retrieve an extended attribute value*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.371 

sys_finit_module::

  _sys_finit_module( int fd,  const char  *uargs,  int flags)_ + 
 *load a kernel module*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.601 

sys_flistxattr::

  _sys_flistxattr( int fd,  char *list,  size_t size)_ + 
 *list extended attribute names*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.377 

sys_flock::

  _sys_flock( unsigned int fd,  unsigned int cmd)_ + 
 *apply or remove an advisory lock on an open file*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.151 

sys_fork::

  _sysSYSDEF_syscall(_fork,0)_ + 
 *create a new process*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.119 

sys_fremovexattr::

  _sys_fremovexattr( int fd,  const char *name)_ + 
 *remove an extended attribute*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.383 

sys_fsetxattr::

  _sys_fsetxattr( int fd,  const char *name,  const void *value,  size_t size, int flags)_ + 
 *set an extended attribute value*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.365 

sys_fstat::

  _sys_fstat( unsigned int fd,  struct stat *statbuf)_ + 
 *get file status*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.15 

sys_fstatfs::

  _sys_fstatfs( unsigned int fd,  struct statfs *buf)_ + 
 *get filesystem statistics*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.279 

sys_fsync::

  _sys_fsync( unsigned int fd)_ + 
 *synchronize changes to a file*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.153 

sys_ftruncate::

  _sys_ftruncate( unsigned int fd,  unsigned long length)_ + 
 *truncate a file to a specified length*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.159 

sys_futex::

  _sys_futex( u32 *uaddr,  int op,  u32 val,  struct timespec *utime,  u32 *uaddr2,  u32 val3)_ + 
 *fast user-space locking*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.389 

sys_futimesat::

  _sys_futimesat( int dfd,  const char *filename,  struct timeval *utimes)_ + 
 *change timestamps of a file relative to a directory file descriptor*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.497 

sys_get_mempolicy::

  _sys_get_mempolicy( int *policy,  unsigned long *nmask,  unsigned long maxnode,  unsigned long addr,  unsigned long flags)_ + 
 *retrieve NUMA memory policy for a thread*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.453 

sys_get_robust_list::

  _sys_get_robust_list( int pid,  struct robust_list_head **head_ptr,  size_t *len_ptr)_ + 
 *get/set list of robust futexes*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.523 

sys_getcpu::

  _sys_getcpu( unsigned *cpup,  unsigned *nodep,  struct getcpu_cache *unused)_ + 
 *determine CPU and NUMA node on which the calling thread is running*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.593 

sys_getcwd::

  _sys_getcwd( char *buf,  unsigned long size)_ + 
 *get the pathname of the current working directory*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.163 

sys_getdents::

  _sys_getdents( unsigned int fd,  struct linux_dirent *dirent,  unsigned int count)_ + 
 *get directory entries*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.161 

sys_getdents64::

  _sys_getdents64( unsigned int fd,  struct linux_dirent64 *dirent,  unsigned int count)_ + 
 *get directory entries*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.411 

sys_getegid::

  _sysSYSDEF_syscall(_getegid,0)_ + 
 *get the effective group ID*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.221 

sys_geteuid::

  _sysSYSDEF_syscall(_geteuid,0)_ + 
 *get the effective user ID*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.219 

sys_getgid::

  _sysSYSDEF_syscall(_getgid,0)_ + 
 *get the real group ID*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.213 

sys_getgroups::

  _sys_getgroups( int gidsetsize,  gid_t *grouplist)_ + 
 *get supplementary group IDs*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.235 

sys_getitimer::

  _sys_getitimer( int which,  struct itimerval *value)_ + 
 *get and set value of interval timer*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.77 

sys_getpeername::

  _sys_getpeername( int fd,  struct sockaddr *usockaddr,  int *usockaddr_len)_ + 
 *get the name of the peer socket*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.109 

sys_getpgid::

  _sys_getpgid( pid_t pid)_ + 
 *get the process group ID for a process*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.247 

sys_getpgrp::

  _sysSYSDEF_syscall(_getpgrp,0)_ + 
 *get the process group ID of the calling process*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.227 

sys_getpid::

  _sysSYSDEF_syscall(_getpid,0)_ + 
 *get the process ID*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.83 

sys_getppid::

  _sysSYSDEF_syscall(_getppid,0)_ + 
 *get the parent process ID*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.225 

sys_getpriority::

  _sys_getpriority( int which,  int who)_ + 
 *get and set the nice value*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.283 

sys_getrandom::

  _sys_getrandom( char  *buf,  size_t count,  unsigned int flags)_ + 
 *obtain a series of random bytes*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.611 

sys_getresgid::

  _sys_getresgid( gid_t *rgid,  gid_t *egid,  gid_t *sgid)_ + 
 *get real, effective and saved user/group IDs*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.245 

sys_getresuid::

  _sys_getresuid( uid_t *ruid,  uid_t *euid,  uid_t *suid)_ + 
 *get real, effective and saved user/group IDs*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.241 

sys_getrlimit::

  _sys_getrlimit( unsigned int resource,  struct rlimit *rlim)_ + 
 *control maximum resource consumption*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.199 

sys_getrusage::

  _sys_getrusage( int who,  struct rusage *ru)_ + 
 *get information about resource utilization*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.201 

sys_getsid::

  _sys_getsid( pid_t pid)_ + 
 *get the process group ID of a session leader*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.253 

sys_getsockname::

  _sys_getsockname( int fd,  struct sockaddr *usockaddr,  int *usockaddr_len)_ + 
 *get the socket name*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.107 

sys_getsockopt::

  _sys_getsockopt( int fd,  int level,  int optname,  char *optval,  int *optlen)_ + 
 *get the socket options*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.115 

sys_gettid::

  _sysSYSDEF_syscall(_gettid,0)_ + 
 *get thread identification*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.357 

sys_gettimeofday::

  _sys_gettimeofday( struct timeval *tv,  struct timezone *tz)_ + 
 *get the date and time*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.197 

sys_getuid::

  _sysSYSDEF_syscall(_getuid,0)_ + 
 *get a real user ID*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.209 

sys_getxattr::

  _sys_getxattr( const char *pathname,  const char *name,  void *value,  size_t size)_ + 
 *retrieve an extended attribute value*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.367 

sys_init_module::

  _sys_init_module( void *umod,  unsigned long len,  const char *uargs)_ + 
 *load a kernel module*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.351 

sys_inotify_add_watch::

  _sys_inotify_add_watch( int fd,  const char *pathname,  u32 mask)_ + 
 *add a watch to an initialized inotify instance*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.483 

sys_inotify_init::

  _sysSYSDEF_syscall(_inotify_init,0)_ + 
 *initialize an inotify instance*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.481 

sys_inotify_init1::

  _sys_inotify_init1( int flags)_ + 
 *initialize an inotify instance*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.563 

sys_inotify_rm_watch::

  _sys_inotify_rm_watch( int fd,  __s32 wd)_ + 
 *remove an existing watch from an inotify instance*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.485 

sys_io_cancel::

  _sys_io_cancel( aio_context_t ctx_id,  struct iocb *iocb,  struct io_event *result)_ + 
 *cancel an outstanding asynchronous I/O operation*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.403 

sys_io_destroy::

  _sys_io_destroy( aio_context_t ctx)_ + 
 *destroy an asynchronous I/O context*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.397 

sys_io_getevents::

  _sys_io_getevents( aio_context_t ctx_id,  long min_nr,  long nr,  struct io_event *events)_ + 
 *read asynchronous I/O events from the completion queue*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.399 

sys_io_setup::

  _sys_io_setup( unsigned nr_events,  aio_context_t *ctxp)_ + 
 *create an asynchronous I/O context*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.395 

sys_io_submit::

  _sys_io_submit( aio_context_t ctx_id,  long nr,  struct iocb **iocbpp)_ + 
 *submit asynchronous I/O blocks for processing*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.401 

sys_ioctl::

  _sys_ioctl( unsigned int fd,  unsigned int cmd,  unsigned long arg)_ + 
 *control a STREAMS device (\fBSTREAMS\fP)*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.37 

sys_ioperm::

  _sys_ioperm( unsigned long from,  unsigned long num,  int turn_on)_ + 
 *set port input/output permissions*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.349 

sys_iopl::

  _sys_iopl( unsigned int level,  struct pt_regs *regs)_ + 
 *change I/O privilege level*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.347 

sys_ioprio_get::

  _sys_ioprio_get( int which,  int who)_ + 
 *get/set I/O scheduling class and priority*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.479 

sys_ioprio_set::

  _sys_ioprio_set( int which,  int who,  int ioprio)_ + 
 *get/set I/O scheduling class and priority*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.477 

sys_kcmp::

  _sys_kcmp( pid_t pid1,  pid_t pid2,  int type,  unsigned long idx1,  unsigned long idx2)_ + 
 *compare two processes to determine if they share a kernel resource*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.599 

sys_kexec_file_load::

  _sys_kexec_file_load( int kernel_fd,  int initrd_fd,  unsigned long cmdline_len,  const char  *cmdline_ptr,  unsigned long flags)_ + 
 *load a new kernel for later execution*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.615 

sys_kexec_load::

  _sys_kexec_load( unsigned long entry,  unsigned long nr_segments,  struct kexec_segment *segments,  unsigned long flags)_ + 
 *load a new kernel for later execution*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.467 

sys_keyctl::

  _sys_keyctl( int option,  unsigned long arg2,  unsigned long arg3,  unsigned long arg4,  unsigned long arg5)_ + 
 *key management function wrappers*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.475 

sys_kill::

  _sys_kill( pid_t pid,  int sig)_ + 
 *send a signal to a process or a group of processes*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.129 

sys_lchown::

  _sys_lchown( const char *filename,  uid_t user,  gid_t group)_ + 
 *change the owner and group of a symbolic link*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.193 

sys_lgetxattr::

  _sys_lgetxattr( const char *pathname,  const char *name,  void *value,  size_t size)_ + 
 *retrieve an extended attribute value*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.369 

sys_link::

  _sys_link( const char *oldname,  const char *newname)_ + 
 *link one file to another file relative to two directory*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.177 

sys_linkat::

  _sys_linkat( int oldfd,  const char *oldname,  int newfd,  const char *newname,  int flags)_ + 
 *make a new name for a file*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.505 

sys_listen::

  _sys_listen( int fd,  int backlog)_ + 
 *listen for socket connections and limit the queue of incoming*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.105 

sys_listxattr::

  _sys_listxattr( const char *pathname,  char *list,  size_t size)_ + 
 *list extended attribute names*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.373 

sys_llistxattr::

  _sys_llistxattr( const char *pathname,  char *list,  size_t size)_ + 
 *list extended attribute names*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.375 

sys_lookup_dcookie::

  _sys_lookup_dcookie( u64 cookie64,  long buf,  long len)_ + 
 *return a directory entry's path*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.405 

sys_lremovexattr::

  _sys_lremovexattr( const char *pathname,  const char *name)_ + 
 *remove an extended attribute*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.381 

sys_lseek::

  _sys_lseek( unsigned int fd,  off_t offset,  unsigned int origin)_ + 
 *move the read/write file offset*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.21 

sys_lsetxattr::

  _sys_lsetxattr( const char *pathname,  const char *name,  const void *value, size_t size,  int flags)_ + 
 *set an extended attribute value*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.363 

sys_lstat::

  _sys_lstat( const char *filename,  struct stat *statbuf)_ + 
 *get file status*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.17 

sys_madvise::

  _sys_madvise( unsigned long start,  size_t len_in,  int behavior)_ + 
 *give advice about use of memory*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.61 

sys_mbind::

  _sys_mbind( unsigned long start,  unsigned long len,  unsigned long mode,  unsigned long *nmask,  unsigned long maxnode,  unsigned flags)_ + 
 *set memory policy for a memory range*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.449 

sys_memfd_create::

  _sys_memfd_create( const char  *uname_ptr,  unsigned int flags)_ + 
 *create an anonymous file*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.613 

sys_migrate_pages::

  _sys_migrate_pages( pid_t pid,  unsigned long maxnode,  const unsigned long *old_nodes,  const unsigned long *new_nodes)_ + 
 *move all pages in a process to another set of nodes*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.487 

sys_mincore::

  _sys_mincore( unsigned long start,  size_t len,  unsigned char *vec)_ + 
 *determine whether pages are resident in memory*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.59 

sys_mkdir::

  _sys_mkdir( const char *pathname,  int mode)_ + 
 *make a directory relative to directory file descriptor*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.171 

sys_mkdirat::

  _sys_mkdirat( int dfd,  const char *pathname,  int mode)_ + 
 *create a directory*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.491 

sys_mknod::

  _sys_mknod( const char *filename,  umode_t mode,  unsigned dev)_ + 
 *make directory, special file, or regular file*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.271 

sys_mknodat::

  _sys_mknodat( int dfd,  const char *filename,  int mode,  unsigned dev)_ + 
 *create a special or ordinary file*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.493 

sys_mlock::

  _sys_mlock( unsigned long start,  size_t len)_ + 
 *lock or unlock a range of process address space*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.301 

sys_mlockall::

  _sys_mlockall( int flags)_ + 
 *lock/unlock the address space of a process*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.305 

sys_mmap::

  _sys_mmap( unsigned long addr,  unsigned long len,  unsigned long prot,  unsigned long flags,  unsigned long fd,  unsigned long off)_ + 
 *map pages of memory*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.23 

sys_modify_ldt::

  _sys_modify_ldt( int func,  void *ptr,  unsigned long bytecount)_ + 
 *get or set a per-process LDT entry*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.311 

sys_mount::

  _sys_mount( char *dev_name,  char *dir_name,  char *type,  unsigned long flags,  void *data)_ + 
 *mount filesystem*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.333 

sys_move_pages::

  _sys_move_pages( pid_t pid,  unsigned long nr_pages,  const void *pages[], const int *nodes,  int *status,  int flags)_ + 
 *move individual pages of a process to another node*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.533 

sys_mprotect::

  _sys_mprotect( unsigned long start,  size_t len,  unsigned long prot)_ + 
 *set protection of memory mapping*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.25 

sys_mq_getsetattr::

  _sys_mq_getsetattr( mqd_t mqdes,  const struct mq_attr *u_mqstat,  struct mq_attr *u_omqstat)_ + 
 *get/set message queue attributes*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.465 

sys_mq_notify::

  _sys_mq_notify( mqd_t mqdes,  const struct sigevent *u_notification)_ + 
 *notify process that a message is available*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.463 

sys_mq_open::

  _sys_mq_open( const char *u_name,  int oflag,  mode_t mode,  struct mq_attr *u_attr)_ + 
 *open a message queue*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.455 

sys_mq_timedreceive::

  _sys_mq_timedreceive( mqd_t mqdes,  char *u_msg_ptr,  size_t msg_len,  unsigned int *u_msg_prio,  const struct timespec *u_abs_timeout)_ + 
 *receive a message from a message queue*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.461 

sys_mq_timedsend::

  _sys_mq_timedsend( mqd_t mqdes,  const char *u_msg_ptr,  size_t msg_len,  unsigned int msg_prio,  const struct timespec *u_abs_timeout)_ + 
 *send a message to a message queue*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.459 

sys_mq_unlink::

  _sys_mq_unlink( const char *u_name)_ + 
 *remove a message queue*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.457 

sys_mremap::

  _sys_mremap( unsigned long addr,  unsigned long old_len,  unsigned long new_len,  unsigned long flags,  unsigned long new_addr)_ + 
 *remap a virtual memory address*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.55 

sys_msgctl::

  _sys_msgctl( int msqid,  int cmd,  struct msqid_ds *buf)_ + 
 *XSI message control operations*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.147 

sys_msgget::

  _sys_msgget( key_t key,  int msgflg)_ + 
 *get the XSI message queue identifier*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.141 

sys_msgrcv::

  _sys_msgrcv( int msqid,  struct msgbuf *msgp,  size_t msgsz,  long msgtyp,  int msgflg)_ + 
 *XSI message receive operation*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.145 

sys_msgsnd::

  _sys_msgsnd( int msqid,  struct msgbuf *msgp,  size_t msgsz,  int msgflg)_ + 
 *XSI message send operation*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.143 

sys_msync::

  _sys_msync( unsigned long start,  size_t len,  int flags)_ + 
 *synchronize memory with physical storage*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.57 

sys_munlock::

  _sys_munlock( unsigned long start,  size_t len)_ + 
 *unlock a range of process address space*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.303 

sys_munlockall::

  _sysSYSDEF_syscall(_munlockall,0)_ + 
 *unlock the address space of a process*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.307 

sys_munmap::

  _sys_munmap( unsigned long addr,  size_t len)_ + 
 *unmap pages of memory*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.27 

sys_name_to_handle_at::

  _sys_name_to_handle_at( int dfd,  const char *name,  struct file_handle *handle,  int *mnt_id,  int flag)_ + 
 *obtain handle*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.581 

sys_nanosleep::

  _sys_nanosleep( struct timespec *rqtp,  struct timespec *rmtp)_ + 
 *high resolution sleep*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.75 

sys_newfstatat::

  _sys_newfstatat( int dfd,  const char *filename,  struct stat *statbuf,  int flag)_ + 
 *get file status*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.499 

sys_open::

  _sys_open( const char *filename,  int flags,  int mode)_ + 
 *open file relative to directory file descriptor*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.9 

sys_open_by_handle_at::

  _sys_open_by_handle_at( int dfd,  const char *name,  struct file_handle *handle,  int *mnt_id,  int flags)_ + 
 *obtain handle*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.583 

sys_openat::

  _sys_openat( int dfd,  const char *filename,  int flags,  int mode)_ + 
 *open file relative to directory file descriptor*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.489 

sys_pause::

  _sysSYSDEF_syscall(_pause,0)_ + 
 *suspend the thread until a signal is received*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.73 

sys_perf_event_open::

  _sys_perf_event_open( struct perf_event_attr *attr_uptr,  pid_t pid,  int cpu,  int group_fd,  unsigned long flags)_ + 
 *set up performance monitoring*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.571 

sys_personality::

  _sys_personality( unsigned int personality)_ + 
 *set the process execution domain*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.273 

sys_pipe::

  _sys_pipe( int *filedes)_ + 
 *create an interprocess channel*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.49 

sys_pipe2::

  _sys_pipe2( int *filedes,  int flags)_ + 
 *create pipe*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.561 

sys_pivot_root::

  _sys_pivot_root( const char *new_root,  const char *put_old)_ + 
 *change the root mount*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.313 

sys_poll::

  _sys_poll( struct poll_fd *ufds,  unsigned int nfds,  long timeout_msecs)_ + 
 *input/output multiplexing*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.19 

sys_ppoll::

  _sys_ppoll( struct pollfd *ufds,  unsigned int nfds,  struct timespec *tsp,  const sigset_t *sigmask,  size_t sigsetsize)_ + 
 *wait for some event on a file descriptor*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.517 

sys_prctl::

  _sys_prctl( int option,  unsigned long arg2,  unsigned long arg3,  unsigned long arg4,  unsigned long arg5)_ + 
 *operations on a process*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.317 

sys_pread64::

  _sys_pread64( unsigned long fd,  char *buf,  size_t count,  loff_t pos)_ + 
 *read from or write to a file descriptor at a given offset*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.39 

sys_preadv::

  _sys_preadv( unsigned long fd,  const struct iovec *vec,  unsigned long vlen,  unsigned long pos_l,  unsigned long pos_h)_ + 
 *read or write data into multiple buffers*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.565 

sys_prlimit64::

  _sys_prlimit64( pid_t pid,  unsigned int resource,  const struct rlimit64 *new_rlim,  struct rlimit64 *old_rlim)_ + 
 *get/set resource limits*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.579 

sys_process_vm_readv::

  _sys_process_vm_readv( pid_t pid,  const struct iovec *lvec,  unsigned long liovcnt,  const struct iovec *rvec,  unsigned long riovcnt,  unsigned long flags)_ + 
 *transfer data between process address spaces*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.595 

sys_process_vm_writev::

  _sys_process_vm_writev( pid_t pid,  const struct iovec *lvec,  unsigned long liovcnt,  const struct iovcc *rvec,  unsigned long riovcnt,  unsigned long flags)_ + 
 *transfer data between process address spaces*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.597 

sys_pselect6::

  _sys_pselect6( int n,  fd_set *inp,  fd_set *outp,  fd_set *exp,  struct timespec *tsp,  void *sig)_ + 
 *select, pselect, FD_CLR, FD_ISSET, FD_SET, FD_ZERO \-*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.515 

sys_ptrace::

  _sys_ptrace( long request,  long pid,  unsigned long addr,  unsigned long data)_ + 
 *process trace*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.207 

sys_pwrite64::

  _sys_pwrite64( unsigned int fd,  const char *buf,  size_t count,  loff_t pos)_ + 
 *read from or write to a file descriptor at a given offset*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.41 

sys_pwritev::

  _sys_pwritev( unsigned long fd,  const struct iovec *vec,  unsigned long vlen,  unsigned long pos_l,  unsigned long pos_h)_ + 
 *read or write data into multiple buffers*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.567 

sys_quotactl::

  _sys_quotactl( unsigned int cmd,  const char *special,  qid_t id,  void *addr)_ + 
 *manipulate disk quotas*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.355 

sys_read::

  _sys_read( unsigned int fd,  char *buf,  size_t count)_ + 
 *read from a file*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.5 

sys_readahead::

  _sys_readahead( int fd,  loff_t offset,  size_t count)_ + 
 *initiate file readahead into page cache*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.359 

sys_readlink::

  _sys_readlink( const char *path,  char *buf,  int bufsiz)_ + 
 *read the contents of a symbolic link*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.183 

sys_readlinkat::

  _sys_readlinkat( int dfd,  const char *pathname,  char *buf,  int bufsiz)_ + 
 *read value of a symbolic link*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.509 

sys_readv::

  _sys_readv( unsigned long fd,  const struct iovec *vec,  unsigned long vlen)_ + 
 *read a vector*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.43 

sys_reboot::

  _sys_reboot( int magic1,  int magic2,  unsigned int cmd,  void *arg)_ + 
 *reboot or enable/disable Ctrl-Alt-Del*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.341 

sys_recvfrom::

  _sys_recvfrom( int fd,  void *ubuf,  size_t size,  unsigned flags,  struct sockaddr *addr,  int *addr_len)_ + 
 *receive a message from a socket*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.95 

sys_recvmmsg::

  _sys_recvmmsg( int fd,  struct msghdr *mmsg,  unsigned int vlen,  unsigned int flags,  struct timespec *timeout)_ + 
 *receive multiple messages on a socket*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.573 

sys_recvmsg::

  _sys_recvmsg( int fd,  struct msghdr *msg,  unsigned int flags)_ + 
 *receive a message from a socket*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.99 

sys_remap_file_pages::

  _sys_remap_file_pages( unsigned long start,  unsigned long size,  unsigned long prot,  unsigned long pgoff,  unsigned long flags)_ + 
 *create a nonlinear file mapping*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.409 

sys_removexattr::

  _sys_removexattr( const char *pathname,  const char *name)_ + 
 *remove an extended attribute*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.379 

sys_rename::

  _sys_rename( const char *oldname,  const char *newname)_ + 
 *rename file relative to directory file descriptor*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.169 

sys_renameat::

  _sys_renameat( int oldfd,  const char *oldname,  int newfd,  const char *newname)_ + 
 *change the name or location of a file*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.503 

sys_renameat2::

  _sys_renameat2( int olddfd,  const char  *oldname,  int newdfd,  const char  *newname,  unsigned int flags)_ + 
 *change the name or location of a file*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.607 

sys_request_key::

  _sys_request_key( const char *_type,  const char *_description,  const char *_callout_info,  key_serial_t destringid)_ + 
 *request a key from the kernel's key management facility*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.473 

sys_restart_syscall::

  _sysSYSDEF_syscall(_restart_syscall,0)_ + 
 *restart a system call after interruption by a stop signal*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.415 

sys_rmdir::

  _sys_rmdir( const char *pathname)_ + 
 *remove a directory*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.173 

sys_rt_sigaction::

  _sys_rt_sigaction( int sig,  const struct sigaction *act,  struct sigaction *oact,  size_t sigsetsize)_ + 
 *examine and change a signal action*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.31 

sys_rt_sigpending::

  _sys_rt_sigpending( sigset_t *set,  size_t sigsetsize)_ + 
 *examine pending signals*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.259 

sys_rt_sigprocmask::

  _sys_rt_sigprocmask( int how,  sigset_t *nset,  sigset_t *oset,  size_t sigsetsize)_ + 
 *examine and change blocked signals*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.33 

sys_rt_sigqueueinfo::

  _sys_rt_sigqueueinfo( pid_t pid,  int sig,  siginfo_t *uinfo)_ + 
 *queue a signal and data*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.263 

sys_rt_sigreturn::

  _sys_rt_sigreturn( unsigned long __unused)_ + 
 *return from signal handler and cleanup stack frame*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.35 

sys_rt_sigsuspend::

  _sys_rt_sigsuspend( sigset_t *unewset,  size_t sigsetsize)_ + 
 *wait for a signal*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.265 

sys_rt_sigtimedwait::

  _sys_rt_sigtimedwait( const sigset_t *uthese,  siginfo_t *uinfo,  const struct timespec *uts,  size_t sigsetsize)_ + 
 *synchronously wait*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.261 

sys_rt_tgsigqueueinfo::

  _sys_rt_tgsigqueueinfo( pid_t tgid,  pid_t pid,  int sig,  siginfo_t *uinfo)_ + 
 *queue a signal and data*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.569 

sys_sched_get_priority_max::

  _sys_sched_get_priority_max( int policy)_ + 
 *get priority limits*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.295 

sys_sched_get_priority_min::

  _sys_sched_get_priority_min( int policy)_ + 
 *get static priority range*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.297 

sys_sched_getaffinity::

  _sys_sched_getaffinity( pid_t pid,  unsigned int len,  unsigned long *user_mask_ptr)_ + 
 *set and get a thread's CPU affinity mask*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.393 

sys_sched_getattr::

  _sys_sched_getattr( pid_t pid,  struct sched_attr  *attr,  unsigned int size,  unsigned int flags)_ + 
 *sched_setattr, sched_getattr \-*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.605 

sys_sched_getparam::

  _sys_sched_getparam( pid_t pid,  struct sched_param *param)_ + 
 *get scheduling parameters*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.289 

sys_sched_getscheduler::

  _sys_sched_getscheduler( pid_t pid)_ + 
 *get scheduling policy*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.293 

sys_sched_rr_get_interval::

  _sys_sched_rr_get_interval( pid_t pid,  struct timespec *interval)_ + 
 *get execution time limits*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.299 

sys_sched_setaffinity::

  _sys_sched_setaffinity( pid_t pid,  unsigned int len,  unsigned long *user_mask_ptr)_ + 
 *set and get a thread's CPU affinity mask*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.391 

sys_sched_setattr::

  _sys_sched_setattr( pid_t pid,  struct sched_attr  *attr,  unsigned int flags)_ + 
 *sched_setattr, sched_getattr \-*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.603 

sys_sched_setparam::

  _sys_sched_setparam( pid_t pid,  struct sched_param *param)_ + 
 *set scheduling parameters*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.287 

sys_sched_setscheduler::

  _sys_sched_setscheduler( pid_t pid,  int policy,  struct sched_param *param)_ + 
 *set scheduling policy and parameters*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.291 

sys_sched_yield::

  _sysSYSDEF_syscall(_sched_yield,0)_ + 
 *yield the processor*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.53 

sys_seccomp::

  _sys_seccomp( unsigned int op,  unsigned int flags,  const char  *uargs)_ + 
 *operate on Secure Computing state of the process*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.609 

sys_select::

  _sys_select( int n,  fd_set *inp,  fd_set *outp,  fd_set *exp,  struct timeval *tvp)_ + 
 *synchronous I/O multiplexing*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.51 

sys_semctl::

  _sys_semctl( int semid,  int semnum,  int cmd,  semun_u arg)_ + 
 *XSI semaphore control operations*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.137 

sys_semget::

  _sys_semget( key_t key,  int nsems,  int semflg)_ + 
 *get set of XSI semaphores*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.133 

sys_semop::

  _sys_semop( int semid,  struct sembuf *tsops,  unsigned nsops)_ + 
 *XSI semaphore operations*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.135 

sys_semtimedop::

  _sys_semtimedop( int semid,  struct sembuf *tsops,  unsigned nsops,  const struct timespec *timeout)_ + 
 *System V semaphore operations*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.417 

sys_sendfile::

  _sys_sendfile( int out_fd,  int in_fd,  off_t *offset,  size_t count)_ + 
 *transfer data between file descriptors*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.85 

sys_sendmmsg::

  _sys_sendmmsg( int fd,  struct mmsghdr *mmsg,  unsigned int vlen,  unsigned int flags)_ + 
 *send multiple messages on a socket*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.589 

sys_sendmsg::

  _sys_sendmsg( int fd,  struct msghdr *msg,  unsigned flags)_ + 
 *send a message on a socket using a message structure*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.97 

sys_sendto::

  _sys_sendto( int fd,  void *buff,  size_t len,  unsigned flags,  struct sockaddr *addr,  int addr_len)_ + 
 *send a message on a socket*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.93 

sys_set_mempolicy::

  _sys_set_mempolicy( int mode,  unsigned long *nmask,  unsigned long maxnode)_ + 
 *set default NUMA memory policy for a thread and its children*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.451 

sys_set_robust_list::

  _sys_set_robust_list( struct robust_list_head *head,  size_t len)_ + 
 *get/set list of robust futexes*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.521 

sys_set_tid_address::

  _sys_set_tid_address( int *tidptr)_ + 
 *set pointer to thread ID*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.413 

sys_setdomainname::

  _sys_setdomainname( char *name,  int len)_ + 
 *get/set NIS domain name*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.345 

sys_setfsgid::

  _sys_setfsgid( gid_t gid)_ + 
 *set group identity used for filesystem checks*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.251 

sys_setfsuid::

  _sys_setfsuid( uid_t uid)_ + 
 *set user identity used for filesystem checks*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.249 

sys_setgid::

  _sys_setgid( gid_t gid)_ + 
 *set-group-ID*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.217 

sys_setgroups::

  _sys_setgroups( int gidsetsize,  gid_t *grouplist)_ + 
 *get/set list of supplementary group IDs*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.237 

sys_sethostname::

  _sys_sethostname( char *name,  int len)_ + 
 *get/set hostname*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.343 

sys_setitimer::

  _sys_setitimer( int which,  struct itimerval *value,  struct itimerval *ovalue)_ + 
 *set the value of an interval timer*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.81 

sys_setns::

  _sys_setns( int fd,  int nstype)_ + 
 *reassociate thread with a namespace*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.591 

sys_setpgid::

  _sys_setpgid( pid_t pid,  pid_t pgid)_ + 
 *set process group ID for job control*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.223 

sys_setpriority::

  _sys_setpriority( int which,  int who,  int niceval)_ + 
 *set the nice value*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.285 

sys_setregid::

  _sys_setregid( gid_t rgid,  gid_t egid)_ + 
 *set real and effective group IDs*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.233 

sys_setresgid::

  _sys_setresgid( gid_t rgid,  gid_t egid,  gid_t sgid)_ + 
 *set real, effective and saved user or group ID*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.243 

sys_setresuid::

  _sys_setresuid( uid_t *ruid,  uid_t *euid,  uid_t *suid)_ + 
 *set real, effective and saved user or group ID*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.239 

sys_setreuid::

  _sys_setreuid( uid_t ruid,  uid_t euid)_ + 
 *set real and effective user IDs*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.231 

sys_setrlimit::

  _sys_setrlimit( unsigned int resource,  struct rlimit *rlim)_ + 
 *control maximum resource consumption*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.323 

sys_setsid::

  _sysSYSDEF_syscall(_setsid,0)_ + 
 *create session and set process group ID*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.229 

sys_setsockopt::

  _sys_setsockopt( int fd,  int level,  int optname,  char *optval,  int optlen)_ + 
 *set the socket options*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.113 

sys_settimeofday::

  _sys_settimeofday( struct timeval *tv,  struct timezone *tz)_ + 
 *get / set time*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.331 

sys_setuid::

  _sys_setuid( uid_t uid)_ + 
 *set user ID*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.215 

sys_setxattr::

  _sys_setxattr( const char *pathname,  const char *name,  const void *value, size_t size,  int flags)_ + 
 *set an extended attribute value*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.361 

sys_shmat::

  _sys_shmat( int shmid,  char *shmaddr,  int shmflg)_ + 
 *XSI shared memory attach operation*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.65 

sys_shmctl::

  _sys_shmctl( int shmid,  int cmd,  struct shmid_ds *buf)_ + 
 *XSI shared memory control operations*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.67 

sys_shmdt::

  _sys_shmdt( char *shmaddr)_ + 
 *XSI shared memory detach operation*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.139 

sys_shmget::

  _sys_shmget( key_t key,  size_t size,  int shmflg)_ + 
 *get an XSI shared memory segment*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.63 

sys_shutdown::

  _sys_shutdown( int fd,  int how)_ + 
 *shut down socket send and receive operations*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.101 

sys_sigaltstack::

  _sys_sigaltstack( const stack_t *uss,  stack_t *uoss)_ + 
 *set and get signal alternate stack context*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.267 

sys_signalfd::

  _sys_signalfd( int ufd,  sigset_t *user_mask,  size_t sizemask)_ + 
 *create a file descriptor for accepting signals*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.539 

sys_signalfd4::

  _sys_signalfd4( int ufd,  sigset_t *user_mask,  size_t sizemask,  int flags)_ + 
 *create a file descriptor for accepting signals*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.553 

sys_socket::

  _sys_socket( int family,  int type,  int protocol)_ + 
 *create an endpoint for communication*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.87 

sys_socketpair::

  _sys_socketpair( int family,  int type,  int protocol,  int *usockvec)_ + 
 *create a pair of connected sockets*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.111 

sys_splice::

  _sys_splice( int fd_in,  loff_t *off_in,  int fd_out,  loff_t *off_out, size_t len,  unsigned int flags)_ + 
 *splice data to/from a pipe*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.525 

sys_stat::

  _sys_stat( const char *filename,  struct stat *statbuf)_ + 
 *get file status*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.13 

sys_statfs::

  _sys_statfs( const char *pathname,  struct statfs *buf)_ + 
 *get filesystem statistics*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.277 

sys_swapoff::

  _sys_swapoff( const char *specialfile)_ + 
 *start/stop swapping to file/device*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.339 

sys_swapon::

  _sys_swapon( const char *specialfile,  int swap_flags)_ + 
 *start/stop swapping to file/device*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.337 

sys_symlink::

  _sys_symlink( const char *oldname,  const char *newname)_ + 
 *make a symbolic link relative to directory file descriptor*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.181 

sys_symlinkat::

  _sys_symlinkat( const char *oldname,  int newfd,  const char *newname)_ + 
 *make a new name for a file*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.507 

sys_sync::

  _sysSYSDEF_syscall(_sync,0)_ + 
 *schedule file system updates*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.327 

sys_sync_file_range::

  _sys_sync_file_range( long fd,  loff_t offset,  loff_t bytes,  long flags)_ + 
 *sync a file segment with disk*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.529 

sys_syncfs::

  _sys_syncfs( int fd)_ + 
 *commit filesystem caches to disk*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.587 

sys_sysfs::

  _sys_sysfs( int option,  unsigned long arg1,  unsigned long arg2)_ + 
 *get filesystem type information*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.281 

sys_sysinfo::

  _sys_sysinfo( struct sysinfo *info)_ + 
 *return system information*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.203 

sys_syslog::

  _sys_syslog( int type,  char *buf,  int len)_ + 
 *log a message*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.211 

sys_tee::

  _sys_tee( int fdin,  int fdout,  size_t len,  unsigned int flags)_ + 
 *duplicating pipe content*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.527 

sys_tgkill::

  _sys_tgkill( pid_t tgid,  pid_t pid,  int sig)_ + 
 *send a signal to a thread*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.445 

sys_time::

  _sys_time( time_t *tloc)_ + 
 *get time*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.387 

sys_timer_create::

  _sys_timer_create( const clockid_t which_clock,  struct sigevent *timer_event_spec,  timer_t *created_timer_id)_ + 
 *create a per-process timer*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.421 

sys_timer_delete::

  _sys_timer_delete( timer_t timer_id)_ + 
 *delete a per-process timer*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.429 

sys_timer_getoverrun::

  _sys_timer_getoverrun( timer_t timer_id)_ + 
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.427 

sys_timer_gettime::

  _sys_timer_gettime( timer_t timer_id,  struct itimerspec *setting)_ + 
 *arm/disarm and fetch*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.425 

sys_timer_settime::

  _sys_timer_settime( timer_t timer_id,  int flags,  const struct itimerspec *new_setting,  struct itimerspec *old_setting)_ + 
 *arm/disarm and fetch*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.423 

sys_timerfd_create::

  _sys_timerfd_create( int clockid,  int flags)_ + 
 *timerfd_create, timerfd_settime, timerfd_gettime \-*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.541 

sys_timerfd_gettime::

  _sys_timerfd_gettime( int ufd,  struct itimerspec *otmr)_ + 
 *timerfd_create, timerfd_settime, timerfd_gettime \-*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.549 

sys_timerfd_settime::

  _sys_timerfd_settime( int ufd,  int flags,  const struct itimerspec *utmr,  struct itimerspec *otmr)_ + 
 *timerfd_create, timerfd_settime, timerfd_gettime \-*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.547 

sys_times::

  _sys_times( struct sysinfo *info)_ + 
 *get process and waited-for child process times*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.205 

sys_tkill::

  _sys_tkill( pid_t pid,  int sig)_ + 
 *send a signal to a thread*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.385 

sys_truncate::

  _sys_truncate( const char *path,  long length)_ + 
 *truncate a file to a specified length*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.157 

sys_umask::

  _sys_umask( int mask)_ + 
 *set and get the file mode creation mask*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.195 

sys_umount2::

  _sys_umount2( const char *target,  int flags)_ + 
 *unmount filesystem*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.335 

sys_uname::

  _sys_uname( struct old_utsname *name)_ + 
 *get the name of the current system*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.131 

sys_unlink::

  _sys_unlink( const char *pathname)_ + 
 *remove a directory entry relative to directory file descriptor*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.179 

sys_unlinkat::

  _sys_unlinkat( int dfd,  const char *pathname,  int flag)_ + 
 *delete a name and possibly the file it refers to*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.501 

sys_unshare::

  _sys_unshare( unsigned long unshare_flags)_ + 
 *disassociate parts of the process execution context*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.519 

sys_ustat::

  _sys_ustat( unsigned dev,  struct ustat *ubuf)_ + 
 *get filesystem statistics*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.275 

sys_utime::

  _sys_utime( char *filename,  struct utimbuf *times)_ + 
 *set file access and modification times*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.269 

sys_utimensat::

  _sys_utimensat( int dfd,  const char *filename,  struct timespec *utimes, int flags)_ + 
 *set file access and modification times relative to directory*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.535 

sys_utimes::

  _sys_utimes( char *filename,  struct timeval *utimes)_ + 
 *change file last access and modification times*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.447 

sys_vfork::

  _sysSYSDEF_syscall(_vfork,0)_ + 
 *create a child process and block parent*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.121 

sys_vhangup::

  _sysSYSDEF_syscall(_vhangup,0)_ + 
 *virtually hangup the current terminal*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.309 

sys_vmsplice::

  _sys_vmsplice( int fd,  const struct iovec *iov,  unsigned long nr_segs, unsigned int flags)_ + 
 *splice user pages to/from a pipe*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.531 

sys_wait4::

  _sys_wait4( pid_t upid,  int *stat_addr,  int options,  struct rusage *ru)_ + 
 *wait for process to change state, BSD style*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.127 

sys_waitid::

  _sys_waitid( int which,  pid_t upid,  struct siginfo *infop,  int options,  struct rusage *ru)_ + 
 *wait for a child process to change state*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.469 

sys_write::

  _sys_write( unsigned int fd,  const char *buf,  size_t count)_ + 
 *write on a file*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.7 

sys_writev::

  _sys_writev( unsigned long fd,  const struct iovec *vec,  unsigned long vlen)_ + 
 *write a vector*
link:../include/syscalls_x64.h[../include/syscalls_x64.h] l.45 