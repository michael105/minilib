== userdb



[[endgrent]]
endgrent::

  _void endgrent()_ + 
 *Defines:* pwent munmap + 
link:../../src/userdb/endgrent.c[../src/userdb/endgrent.c] l.4 manpage: link:../manpages/gen/getgrent.3.rst[endgrent] +


[[endpwent]]
endpwent::

  _void endpwent()_ + 
 *Defines:* pwent munmap + 
link:../../src/userdb/endpwent.c[../src/userdb/endpwent.c] l.4 manpage: link:../manpages/gen/getpwent.3.rst[endpwent] +


[[getgrent]]
getgrent::

  _struct group* getgrent()_ + 
 *Defines:* userdb open pwent + 
link:../../src/userdb/getgrent.c[../src/userdb/getgrent.c] l.4 manpage: link:../manpages/gen/getgrent.3.rst[getgrent] +


[[getgrgid]]
getgrgid::

  _struct group *getgrgid(gid_t gid)_ + 
 *Defines:* open write close token_i mmap userdb setgrent fstat pwent token_s globals grent + 
-----
get the group entry of the group "gid".
 the last result is cached, multiple calls with the same
 name will return the cached result.
-----
link:../../src/userdb/getgrgid.c[../src/userdb/getgrgid.c] l.7 manpage: link:../manpages/gen/getgrent.3.rst[getgrgid] +


[[getgrnam]]
getgrnam::

  _struct group *getgrnam(const char* name)_ + 
 *Defines:* close write open userdb fstat setgrent token_i mmap token_s pwent grent globals + 
-----
get the group entry of the group "name".
 the last result is cached, multiple calls with the same
 name will return the cached result.
-----
link:../../src/userdb/getgrnam.c[../src/userdb/getgrnam.c] l.7 manpage: link:../manpages/gen/getgrent.3.rst[getgrnam] +


[[getpwent]]
getpwent::

  _struct passwd* getpwent()_ + 
 *Defines:* open userdb + 
link:../../src/userdb/getpwent.c[../src/userdb/getpwent.c] l.4 manpage: link:../manpages/gen/getpwent.3.rst[getpwent] +


[[getpwnam]]
getpwnam::

  _struct passwd *getpwnam(const char* name)_ + 
 *Defines:* mmap globals token_i fstat pwent write open token_s close + 
-----
get the passwd entry of the user "name".
 the last result is cached, multiple calls with the same
 name will return the cached result.
-----
link:../../src/userdb/getpwnam.c[../src/userdb/getpwnam.c] l.7 manpage: link:../manpages/gen/getpwent.3.rst[getpwnam] +


[[getpwuid]]
getpwuid::

  _struct passwd *getpwuid(uid_t uid)_ + 
 *Defines:* passwdfile_open mmap token_i token_s pwent setpwent write open + 
-----
get the passwd entry of the user with uid.
 the last result is cached, multiple calls with the same
 uid will return the cached result.
-----
link:../../src/userdb/getpwuid.c[../src/userdb/getpwuid.c] l.7 manpage: link:../manpages/gen/getpwent.3.rst[getpwuid] +


[[max_groupmembers]]
max_groupmembers::

  _#ifndef mini_max_groupmembers_ + 
-----
The maximum number of users, 
 which are within a group.
 used for the allocation of the array gr_mem.
 default: 64
-----
link:../../include/globaldefs.h[../include/globaldefs.h] l.108 

[[setgrent]]
setgrent::

  _void setgrent()_ + 
link:../../src/userdb/setgrent.c[../src/userdb/setgrent.c] l.3 manpage: link:../manpages/gen/getgrent.3.rst[setgrent] +


[[setpwent]]
setpwent::

  _void setpwent()_ + 
link:../../src/userdb/setpwent.c[../src/userdb/setpwent.c] l.3 manpage: link:../manpages/gen/getpwent.3.rst[setpwent] +
