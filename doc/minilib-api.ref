
#conversions

f:_itobin|D:int _itobin(int i, char*buf, int prec, int groups );|c:conversions|
f:_itohex|D:int _itohex(int i,char* buf,int padding, int capitals);|c:conversions|
f:atoi|D:int atoi(const char *c);|c:conversions|
f:atol|D:long atol(const char *c);|c:conversions|
f:dtodec|D:int dtodec(double d, char* buf, int precision);|c:conversions|

#unsorted

f:_fopen|D:FILE *_fopen(int fd, const char* filename, const char* mode, FILE *f);|c:unsorted|
f:_mprints|D:#define _mprints(...) dprints(STDOUT_FILENO, __VA_ARGS__)|c:unsorted|
f:_strcasecmp|D:int _strcasecmp(const char*c1,const char*c2,int len);|c:unsorted|
f:_strcmp|D:int _strcmp(const char*c1,const char*c2,int len);|c:unsorted|
f:abs|D:static int abs(int i);|c:unsorted|
f:access|D:access( const char *filename, int mode)|c:unsorted|
f:basename|D:char *basename(char *path);|c:unsorted|
f:brk|D:static int brk( const void* addr );|c:unsorted|
f:chdir|D:chdir(const char* path)|c:unsorted|
f:chmod|D:chmod( const char *filename, mode_t mode)|c:unsorted|
f:chown|D:chown( const char *filename, uid_t user, gid_t group)|c:unsorted|
f:chroot|D:chroot( const char *filename)|c:unsorted|
f:clearerr|D:static inline void clearerr(FILE *f);|c:unsorted|
f:clearerror|D:static inline void clearerror(FILE *f);|c:unsorted|
f:close|D:close( int fd )|c:unsorted|
f:closedir|D:int closedir(DIR *dir);|c:unsorted|
f:creat|D:int volatile creat( const char *s, int mode );|c:unsorted|
f:def|D:#define SETOPT_short( opts, option ) (;|c:unsorted|
f:dirfd|D:int dirfd(DIR *d);|c:unsorted|
f:dirname|D:char *dirname(char *s);|c:unsorted|
f:div|D:static div_t div(int numerator, int denominator);|c:unsorted|
f:djb2_hash|D:unsigned long djb2_hash(const unsigned char *str);|c:unsorted|
f:dprintf|D:int dprintf( int fd, const char *fmt, ... );|c:unsorted|
f:dup|D:dup(int fd)		|c:unsorted|
f:dup2|D:dup2(int oldfd, int newfd)		|c:unsorted|
f:dup3|D:dup3(int oldfd, int newfd, int flags)		|c:unsorted|
f:eprint|D:#define eprint(str) write(STDERR_FILENO,str,strlen(str))|c:unsorted|
f:eprintfs|D:#define eprintfs(fmt,...) fprintfs(stderr, fmt, __VA_ARGS__)|c:unsorted|
f:eprintl|D:#define eprintl() write(STDERR_FILENO,"\n",1)|c:unsorted|
f:eputs|D:#define eputs(msg) ( eprint(msg) + eprintl() )|c:unsorted|
f:errno_str|D:const char *errno_str(int err);|c:unsorted|
f:ewrites|D:#define ewrites(str) write(STDERR_FILENO,str,sizeof(str))|c:unsorted|
f:execv|D:static inline int execv(const char *pathname, char *const argv[]);|c:unsorted|
f:execve|D:execve( const char *filename,  char* const* argv, char* const* envp)|c:unsorted|
f:execveat|D:execveat( int dirfd, const char *filename,  char* const* argv, char* const* envp, int flags)|c:unsorted|
f:execvp|D:static inline int execvp(const char *file, char *const argv[]);|c:unsorted|
f:execvpe|D:static int execvpe(const char *file, char *const argv[], char *const envp[]);|c:unsorted|
f:fchmod|D:fchmod( unsigned int fd, mode_t mode)|c:unsorted|
f:fchown|D:fchown( unsigned int fd, uid_t user, gid_t group)|c:unsorted|
f:fclose|D:static inline int __attribute__((always_inline)) fclose( FILE* f );|c:unsorted|
f:fcntl|D:fcntl( unsigned int fd, unsigned int cmd, unsigned long arg)|c:unsorted|
f:fdopen|D:FILE *fdopen(int fd, const char* mode);|c:unsorted|
f:feof|D:static inline int feof(FILE *f);|c:unsorted|
f:ferror|D:static inline int ferror(FILE *f);|c:unsorted|
f:fexecve|D:static inline int fexecve(int fd, char *const argv[], char *const envp[]);|c:unsorted|
f:fexecveat|D:static inline int fexecveat(int fd, char *const argv[], char *const envp[]);|c:unsorted|
f:fflush|D:static inline int __attribute__((always_inline)) fflush( FILE *F );|c:unsorted|
f:fgetc|D:static inline int fgetc(FILE *F);|c:unsorted|
f:fgetpos|D:static inline void fgetpos(FILE *f, long *pos );|c:unsorted|
f:fgets|D:char* fgets(char *buf, int size, FILE* F);|c:unsorted|
f:fileno|D:static int fileno( FILE *f );|c:unsorted|
f:fopen|D:FILE *fopen(const char* filename, const char* mode);|c:unsorted|
f:fork|D:DEF_syscall(fork,0)|c:unsorted|
f:fprint|D:#define fprint(...) fprintf(__VA_ARGS__)|c:unsorted|
f:fprintf|D:#define fprintf(stream,...)	write(fileno(stream),mlgl->mbuf,sprintf(mlgl->mbuf,__VA_ARGS__))|c:unsorted|
f:fprintfs|D:int fprintfs( FILE* F, char *fmt, ...);|c:unsorted|
f:fprints|D:#define fprints(F,str) write(fileno(F),str,strlen(str))|c:unsorted|
f:fputc|D:static inline int volatile fputc(int c, FILE* F);|c:unsorted|
f:fputs|D:static inline int volatile fputs(const char *c, FILE *F);|c:unsorted|
f:fread|D:static inline size_t fread(void *ptr, size_t size, size_t nmemb, FILE *f);|c:unsorted|
f:free|D:void volatile free(void* p);|c:unsorted|
f:freopen|D:FILE *freopen(const char* filename, const char* mode, FILE *F);|c:unsorted|
f:fseek|D:static inline int fseek(FILE *f, long offset, int whence );|c:unsorted|
f:fsetpos|D:static inline int fsetpos(FILE *f, int pos );|c:unsorted|
f:fstat|D:fstat(int fd,struct stat* statbuf)|c:unsorted|
f:fsync|D:fsync(int a1 )|c:unsorted|
f:ftell|D:static inline long ftell(FILE *f);|c:unsorted|
f:ftruncate|D:ftruncate(unsigned int a1, unsigned int a2 )|c:unsorted|
f:fwrite|D:static inline size_t fwrite(const void *ptr, size_t size, size_t nmemb, FILE *f);|c:unsorted|
f:fwrites|D:#define fwrites(fd,str) write(fd,str,sizeof(str))|c:unsorted|
f:getc|D:#define getc(F) fgetc(F)|c:unsorted|
f:getchar|D:#define getchar() fgetc(0)|c:unsorted|
f:getcwd|D:getcwd( char *buf,  unsigned long size)|c:unsorted|
f:getdents|D:getdents( unsigned int fd, struct dirent *direntry, unsigned int count )|c:unsorted|
f:getenv|D:char* getenv(const char* name);|c:unsorted|
f:getgid|D:DEF_syscall(getgid,0)|c:unsorted|
f:getitimer|D:getitimer( int which,  struct itimerval *value)|c:unsorted|
f:getpgrp|D:DEF_syscall(getpgrp,0)|c:unsorted|
f:getpid|D:DEF_syscall(getpid,0 )|c:unsorted|
f:getppid|D:DEF_syscall(getppid,0)|c:unsorted|
f:gets|D:#define gets(F) fgets(F,0xfffffff,stdin)|c:unsorted|
f:gettimeofday|D:gettimeofday( struct timeval *a1, struct timezone *a2)|c:unsorted|
f:getuid|D:DEF_syscall(getuid,0)|c:unsorted|
f:grantpt|D:int grantpt(int fd);|c:unsorted|
f:ioctl|D:int volatile  __attribute__((optimize("O0"))) ioctl( int fd, unsigned long int request, ... );|c:unsorted|
f:isatty|D:int isatty(int fd);|c:unsorted|
f:itoHEX|D:int itoHEX(int i,char* buf,int padding);|c:unsorted|
f:itobin|D:#define itobin(A,B,...) _itobin(A,B,VARARG(SHIFT(__VA_ARGS__),0), VARARG(SHIFT(ARG( __VA_ARGS__ )),32) )|c:unsorted|
f:itodec|D:int itodec(int i, char *buf, int prec, char limiter );|c:unsorted|
f:itohex|D:int itohex(int i,char* buf,int padding);|c:unsorted|
f:kill|D:kill( pid_t pid,  int sig)|c:unsorted|
f:ksys__sysctl|D:|c:unsorted|
f:ksys_accept|D:|c:unsorted|
f:ksys_accept4|D:|c:unsorted|
f:ksys_access|D:|c:unsorted|
f:ksys_acct|D:|c:unsorted|
f:ksys_add_key|D:|c:unsorted|
f:ksys_adjtimex|D:|c:unsorted|
f:ksys_alarm|D:|c:unsorted|
f:ksys_arch_prctl|D:|c:unsorted|
f:ksys_bind|D:|c:unsorted|
f:ksys_brk|D:|c:unsorted|
f:ksys_capget|D:|c:unsorted|
f:ksys_capset|D:|c:unsorted|
f:ksys_chdir|D:|c:unsorted|
f:ksys_chmod|D:|c:unsorted|
f:ksys_chown|D:|c:unsorted|
f:ksys_chroot|D:|c:unsorted|
f:ksys_clock_adjtime|D:|c:unsorted|
f:ksys_clock_getres|D:|c:unsorted|
f:ksys_clock_gettime|D:|c:unsorted|
f:ksys_clock_nanosleep|D:|c:unsorted|
f:ksys_clock_settime|D:|c:unsorted|
f:ksys_clone|D:|c:unsorted|
f:ksys_close|D:|c:unsorted|
f:ksys_connect|D:|c:unsorted|
f:ksys_creat|D:|c:unsorted|
f:ksys_delete_module|D:|c:unsorted|
f:ksys_dup|D:|c:unsorted|
f:ksys_dup2|D:|c:unsorted|
f:ksys_dup3|D:|c:unsorted|
f:ksys_epoll_create|D:|c:unsorted|
f:ksys_epoll_create1|D:|c:unsorted|
f:ksys_epoll_ctl|D:|c:unsorted|
f:ksys_epoll_pwait|D:|c:unsorted|
f:ksys_epoll_wait|D:|c:unsorted|
f:ksys_eventfd|D:|c:unsorted|
f:ksys_eventfd2|D:|c:unsorted|
f:ksys_execve|D:|c:unsorted|
f:ksys_exit|D:|c:unsorted|
f:ksys_exit_group|D:|c:unsorted|
f:ksys_faccessat|D:|c:unsorted|
f:ksys_fadvise64|D:|c:unsorted|
f:ksys_fallocate|D:|c:unsorted|
f:ksys_fanotify_init|D:|c:unsorted|
f:ksys_fanotify_mark|D:|c:unsorted|
f:ksys_fchdir|D:|c:unsorted|
f:ksys_fchmod|D:|c:unsorted|
f:ksys_fchmodat|D:|c:unsorted|
f:ksys_fchown|D:|c:unsorted|
f:ksys_fchownat|D:|c:unsorted|
f:ksys_fcntl|D:|c:unsorted|
f:ksys_fdatasync|D:|c:unsorted|
f:ksys_fgetxattr|D:|c:unsorted|
f:ksys_finit_module|D:|c:unsorted|
f:ksys_flistxattr|D:|c:unsorted|
f:ksys_flock|D:|c:unsorted|
f:ksys_fork|D:|c:unsorted|
f:ksys_fremovexattr|D:|c:unsorted|
f:ksys_fsetxattr|D:|c:unsorted|
f:ksys_fstat|D:|c:unsorted|
f:ksys_fstatfs|D:|c:unsorted|
f:ksys_fsync|D:|c:unsorted|
f:ksys_ftruncate|D:|c:unsorted|
f:ksys_futex|D:|c:unsorted|
f:ksys_futimesat|D:|c:unsorted|
f:ksys_get_mempolicy|D:|c:unsorted|
f:ksys_get_robust_list|D:|c:unsorted|
f:ksys_getcpu|D:|c:unsorted|
f:ksys_getcwd|D:|c:unsorted|
f:ksys_getdents|D:|c:unsorted|
f:ksys_getdents64|D:|c:unsorted|
